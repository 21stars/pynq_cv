// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write,
        p_kernel_val_0_V_1_read,
        p_kernel_val_0_V_2_read,
        p_kernel_val_0_V_3_read,
        p_kernel_val_0_V_4_read,
        p_kernel_val_1_V_0_read,
        p_kernel_val_1_V_2_read,
        p_kernel_val_1_V_3_read,
        p_kernel_val_1_V_4_read,
        p_kernel_val_2_V_0_read,
        p_kernel_val_2_V_1_read,
        p_kernel_val_2_V_3_read,
        p_kernel_val_2_V_4_read,
        p_kernel_val_3_V_0_read,
        p_kernel_val_3_V_1_read,
        p_kernel_val_3_V_2_read,
        p_kernel_val_3_V_4_read,
        p_kernel_val_4_V_0_read,
        p_kernel_val_4_V_1_read,
        p_kernel_val_4_V_2_read,
        p_kernel_val_4_V_3_read
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state6 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;
input  [2:0] p_kernel_val_0_V_1_read;
input  [3:0] p_kernel_val_0_V_2_read;
input  [2:0] p_kernel_val_0_V_3_read;
input  [1:0] p_kernel_val_0_V_4_read;
input  [2:0] p_kernel_val_1_V_0_read;
input  [4:0] p_kernel_val_1_V_2_read;
input  [4:0] p_kernel_val_1_V_3_read;
input  [3:0] p_kernel_val_1_V_4_read;
input  [4:0] p_kernel_val_2_V_0_read;
input  [5:0] p_kernel_val_2_V_1_read;
input  [5:0] p_kernel_val_2_V_3_read;
input  [4:0] p_kernel_val_2_V_4_read;
input  [2:0] p_kernel_val_3_V_0_read;
input  [4:0] p_kernel_val_3_V_1_read;
input  [4:0] p_kernel_val_3_V_2_read;
input  [3:0] p_kernel_val_3_V_4_read;
input  [1:0] p_kernel_val_4_V_0_read;
input  [3:0] p_kernel_val_4_V_1_read;
input  [3:0] p_kernel_val_4_V_2_read;
input  [3:0] p_kernel_val_4_V_3_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln444_reg_3039;
reg   [0:0] and_ln118_reg_3048;
reg   [0:0] icmp_ln899_reg_2988;
reg   [0:0] icmp_ln887_reg_2979;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] and_ln512_reg_3096;
reg   [0:0] and_ln512_reg_3096_pp0_iter1_reg;
reg   [10:0] t_V_2_reg_595;
wire  signed [10:0] sext_ln1118_fu_606_p1;
reg  signed [10:0] sext_ln1118_reg_2870;
wire  signed [11:0] sext_ln1118_1_fu_610_p1;
reg  signed [11:0] sext_ln1118_1_reg_2875;
wire  signed [10:0] sext_ln1118_2_fu_614_p1;
reg  signed [10:0] sext_ln1118_2_reg_2880;
wire  signed [9:0] sext_ln1118_3_fu_618_p1;
reg  signed [9:0] sext_ln1118_3_reg_2885;
wire  signed [10:0] sext_ln1118_4_fu_622_p1;
reg  signed [10:0] sext_ln1118_4_reg_2890;
wire  signed [12:0] sext_ln1118_5_fu_626_p1;
reg  signed [12:0] sext_ln1118_5_reg_2895;
wire  signed [12:0] sext_ln1118_6_fu_630_p1;
reg  signed [12:0] sext_ln1118_6_reg_2900;
wire  signed [11:0] sext_ln1118_7_fu_634_p1;
reg  signed [11:0] sext_ln1118_7_reg_2905;
wire  signed [12:0] sext_ln1118_8_fu_638_p1;
reg  signed [12:0] sext_ln1118_8_reg_2910;
wire  signed [13:0] sext_ln1118_9_fu_642_p1;
reg  signed [13:0] sext_ln1118_9_reg_2915;
wire   [13:0] zext_ln1118_12_fu_646_p1;
reg   [13:0] zext_ln1118_12_reg_2920;
wire   [12:0] zext_ln1118_18_fu_650_p1;
reg   [12:0] zext_ln1118_18_reg_2925;
wire  signed [10:0] sext_ln1118_10_fu_654_p1;
reg  signed [10:0] sext_ln1118_10_reg_2930;
wire  signed [12:0] sext_ln1118_11_fu_658_p1;
reg  signed [12:0] sext_ln1118_11_reg_2935;
wire   [12:0] zext_ln1118_24_fu_662_p1;
reg   [12:0] zext_ln1118_24_reg_2940;
wire   [11:0] zext_ln1118_25_fu_666_p1;
reg   [11:0] zext_ln1118_25_reg_2945;
wire  signed [9:0] sext_ln1118_12_fu_670_p1;
reg  signed [9:0] sext_ln1118_12_reg_2950;
wire  signed [11:0] sext_ln1118_13_fu_674_p1;
reg  signed [11:0] sext_ln1118_13_reg_2955;
wire   [11:0] zext_ln1118_26_fu_678_p1;
reg   [11:0] zext_ln1118_26_reg_2960;
wire   [11:0] zext_ln1118_27_fu_682_p1;
reg   [11:0] zext_ln1118_27_reg_2965;
wire   [0:0] icmp_ln443_fu_690_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] i_V_fu_696_p2;
reg   [10:0] i_V_reg_2974;
wire   [0:0] icmp_ln887_fu_702_p2;
wire   [0:0] xor_ln457_fu_708_p2;
reg   [0:0] xor_ln457_reg_2983;
wire   [0:0] icmp_ln899_fu_714_p2;
wire   [0:0] icmp_ln879_fu_720_p2;
reg   [0:0] icmp_ln879_reg_2993;
wire   [0:0] icmp_ln879_1_fu_726_p2;
reg   [0:0] icmp_ln879_1_reg_2997;
wire   [0:0] icmp_ln879_2_fu_732_p2;
reg   [0:0] icmp_ln879_2_reg_3001;
wire   [0:0] icmp_ln899_1_fu_738_p2;
reg   [0:0] icmp_ln899_1_reg_3005;
wire   [2:0] xor_ln493_1_fu_982_p2;
reg   [2:0] xor_ln493_1_reg_3014;
wire   [2:0] xor_ln493_2_fu_1016_p2;
reg   [2:0] xor_ln493_2_reg_3019;
wire   [2:0] xor_ln493_3_fu_1054_p2;
reg   [2:0] xor_ln493_3_reg_3024;
wire   [2:0] xor_ln493_4_fu_1092_p2;
reg   [2:0] xor_ln493_4_reg_3029;
wire   [2:0] xor_ln493_5_fu_1130_p2;
reg   [2:0] xor_ln493_5_reg_3034;
wire   [0:0] icmp_ln444_fu_1140_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op257_read_state4;
reg    ap_predicate_op278_read_state4;
reg    ap_block_state4_pp0_stage0_iter1;
reg    ap_block_state5_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [10:0] j_V_fu_1146_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] and_ln118_fu_1198_p2;
wire   [2:0] trunc_ln458_fu_1288_p1;
reg   [2:0] trunc_ln458_reg_3052;
wire   [0:0] or_ln457_fu_1292_p2;
reg   [0:0] or_ln457_reg_3057;
reg   [10:0] k_buf_0_val_5_addr_reg_3066;
reg   [10:0] k_buf_0_val_6_addr_reg_3072;
reg   [10:0] k_buf_0_val_7_addr_reg_3078;
reg   [10:0] k_buf_0_val_8_addr_reg_3084;
reg   [10:0] k_buf_0_val_9_addr_reg_3090;
wire   [0:0] and_ln512_fu_1306_p2;
wire   [13:0] add_ln703_5_fu_1911_p2;
reg   [13:0] add_ln703_5_reg_3100;
wire   [13:0] add_ln703_6_fu_1951_p2;
reg   [13:0] add_ln703_6_reg_3105;
wire  signed [13:0] mul_ln1118_9_fu_1991_p2;
reg  signed [13:0] mul_ln1118_9_reg_3110;
wire   [11:0] add_ln703_9_fu_2000_p2;
reg   [11:0] add_ln703_9_reg_3115;
wire   [13:0] add_ln703_11_fu_2170_p2;
reg   [13:0] add_ln703_11_reg_3120;
wire   [12:0] add_ln703_14_fu_2182_p2;
reg   [12:0] add_ln703_14_reg_3125;
wire   [13:0] add_ln703_21_fu_2234_p2;
reg   [13:0] add_ln703_21_reg_3130;
wire   [7:0] add_ln703_33_fu_2300_p2;
reg   [7:0] add_ln703_33_reg_3135;
wire   [7:0] add_ln703_38_fu_2330_p2;
reg   [7:0] add_ln703_38_reg_3140;
wire   [7:0] add_ln703_43_fu_2360_p2;
reg   [7:0] add_ln703_43_reg_3145;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter1_state4;
wire   [10:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
wire   [10:0] k_buf_0_val_5_address1;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
wire   [10:0] k_buf_0_val_6_address0;
reg    k_buf_0_val_6_ce0;
wire   [7:0] k_buf_0_val_6_q0;
wire   [10:0] k_buf_0_val_6_address1;
reg    k_buf_0_val_6_ce1;
reg    k_buf_0_val_6_we1;
reg   [7:0] k_buf_0_val_6_d1;
wire   [10:0] k_buf_0_val_7_address0;
reg    k_buf_0_val_7_ce0;
wire   [7:0] k_buf_0_val_7_q0;
wire   [10:0] k_buf_0_val_7_address1;
reg    k_buf_0_val_7_ce1;
reg    k_buf_0_val_7_we1;
reg   [7:0] k_buf_0_val_7_d1;
wire   [10:0] k_buf_0_val_8_address0;
reg    k_buf_0_val_8_ce0;
wire   [7:0] k_buf_0_val_8_q0;
wire   [10:0] k_buf_0_val_8_address1;
reg    k_buf_0_val_8_ce1;
reg    k_buf_0_val_8_we1;
reg   [7:0] k_buf_0_val_8_d1;
wire   [10:0] k_buf_0_val_9_address0;
reg    k_buf_0_val_9_ce0;
wire   [7:0] k_buf_0_val_9_q0;
wire   [10:0] k_buf_0_val_9_address1;
reg    k_buf_0_val_9_ce1;
reg    k_buf_0_val_9_we1;
reg   [7:0] k_buf_0_val_9_d1;
reg   [10:0] t_V_reg_584;
wire    ap_CS_fsm_state6;
wire   [63:0] zext_ln835_fu_1297_p1;
reg   [7:0] src_kernel_win_0_va_fu_202;
wire   [7:0] src_kernel_win_0_va_37_fu_1584_p3;
reg   [7:0] src_kernel_win_0_va_18_fu_206;
reg   [7:0] src_kernel_win_0_va_19_fu_210;
reg   [7:0] src_kernel_win_0_va_20_fu_214;
reg   [7:0] src_kernel_win_0_va_21_fu_218;
wire   [7:0] src_kernel_win_0_va_38_fu_1606_p3;
reg   [7:0] src_kernel_win_0_va_22_fu_222;
reg   [7:0] src_kernel_win_0_va_23_fu_226;
reg   [7:0] src_kernel_win_0_va_24_fu_230;
reg   [7:0] src_kernel_win_0_va_25_fu_234;
wire   [7:0] src_kernel_win_0_va_39_fu_1628_p3;
reg   [7:0] src_kernel_win_0_va_26_fu_238;
reg   [7:0] src_kernel_win_0_va_27_fu_242;
reg   [7:0] src_kernel_win_0_va_28_fu_246;
reg   [7:0] src_kernel_win_0_va_29_fu_250;
wire   [7:0] src_kernel_win_0_va_40_fu_1650_p3;
reg   [7:0] src_kernel_win_0_va_30_fu_254;
reg   [7:0] src_kernel_win_0_va_31_fu_258;
reg   [7:0] src_kernel_win_0_va_32_fu_262;
reg   [7:0] src_kernel_win_0_va_33_fu_266;
wire   [7:0] src_kernel_win_0_va_41_fu_1672_p3;
reg   [7:0] src_kernel_win_0_va_34_fu_270;
reg   [7:0] src_kernel_win_0_va_35_fu_274;
reg   [7:0] src_kernel_win_0_va_36_fu_278;
reg   [7:0] right_border_buf_0_s_fu_282;
wire   [7:0] col_buf_0_val_0_0_fu_1377_p3;
reg   [7:0] right_border_buf_0_14_fu_286;
reg   [7:0] right_border_buf_0_15_fu_290;
reg   [7:0] right_border_buf_0_16_fu_294;
reg   [7:0] right_border_buf_0_17_fu_298;
reg   [7:0] right_border_buf_0_18_fu_302;
wire   [7:0] col_buf_0_val_1_0_fu_1400_p3;
reg   [7:0] right_border_buf_0_19_fu_306;
reg   [7:0] right_border_buf_0_20_fu_310;
reg   [7:0] right_border_buf_0_21_fu_314;
wire   [7:0] col_buf_0_val_4_0_fu_1469_p3;
reg   [7:0] right_border_buf_0_22_fu_318;
reg   [7:0] right_border_buf_0_23_fu_322;
wire   [7:0] col_buf_0_val_2_0_fu_1423_p3;
reg   [7:0] right_border_buf_0_24_fu_326;
reg   [7:0] right_border_buf_0_25_fu_330;
reg   [7:0] right_border_buf_0_26_fu_334;
reg   [7:0] right_border_buf_0_27_fu_338;
wire   [7:0] col_buf_0_val_3_0_fu_1446_p3;
reg    ap_block_pp0_stage0_01001;
wire   [11:0] zext_ln443_fu_686_p1;
wire   [11:0] add_ln506_fu_748_p2;
wire   [0:0] tmp_fu_754_p3;
wire   [0:0] icmp_ln118_fu_768_p2;
wire   [0:0] xor_ln118_6_fu_762_p2;
wire   [0:0] tmp_28_fu_780_p3;
wire   [11:0] sub_ln142_fu_788_p2;
wire   [11:0] select_ln139_1_fu_794_p3;
wire   [11:0] add_ln506_1_fu_812_p2;
wire   [0:0] tmp_29_fu_818_p3;
wire   [0:0] icmp_ln118_2_fu_832_p2;
wire   [0:0] xor_ln118_7_fu_826_p2;
wire   [0:0] tmp_30_fu_844_p3;
wire   [11:0] sub_ln142_1_fu_852_p2;
wire   [11:0] select_ln139_2_fu_858_p3;
wire   [11:0] add_ln506_2_fu_876_p2;
wire   [11:0] add_ln506_3_fu_902_p2;
wire   [11:0] add_ln506_4_fu_928_p2;
wire   [2:0] trunc_ln147_fu_808_p1;
wire   [0:0] icmp_ln144_1_fu_802_p2;
wire   [2:0] sub_ln507_fu_954_p2;
wire   [2:0] trunc_ln506_fu_744_p1;
wire   [0:0] and_ln118_1_fu_774_p2;
wire   [2:0] add_ln507_fu_968_p2;
wire   [2:0] select_ln507_fu_960_p3;
wire   [2:0] select_ln507_1_fu_974_p3;
wire   [2:0] trunc_ln147_1_fu_872_p1;
wire   [0:0] icmp_ln144_2_fu_866_p2;
wire   [2:0] sub_ln507_1_fu_988_p2;
wire   [0:0] and_ln118_2_fu_838_p2;
wire   [2:0] add_ln507_1_fu_1002_p2;
wire   [2:0] select_ln507_2_fu_994_p3;
wire   [2:0] select_ln507_3_fu_1008_p3;
wire   [2:0] trunc_ln142_fu_898_p1;
wire   [0:0] tmp_32_fu_890_p3;
wire   [2:0] sub_ln118_fu_1028_p2;
wire   [2:0] trunc_ln118_fu_1034_p1;
wire   [0:0] tmp_31_fu_882_p3;
wire   [2:0] select_ln139_4_fu_1038_p3;
wire   [2:0] add_ln118_fu_1022_p2;
wire   [2:0] select_ln118_fu_1046_p3;
wire   [2:0] trunc_ln142_2_fu_924_p1;
wire   [0:0] tmp_34_fu_916_p3;
wire   [2:0] sub_ln118_1_fu_1066_p2;
wire   [2:0] trunc_ln118_2_fu_1072_p1;
wire   [0:0] tmp_33_fu_908_p3;
wire   [2:0] select_ln139_5_fu_1076_p3;
wire   [2:0] xor_ln118_1_fu_1060_p2;
wire   [2:0] select_ln118_1_fu_1084_p3;
wire   [2:0] trunc_ln142_3_fu_950_p1;
wire   [0:0] tmp_36_fu_942_p3;
wire   [2:0] sub_ln118_2_fu_1104_p2;
wire   [2:0] trunc_ln118_3_fu_1110_p1;
wire   [0:0] tmp_35_fu_934_p3;
wire   [2:0] select_ln139_6_fu_1114_p3;
wire   [2:0] add_ln118_1_fu_1098_p2;
wire   [2:0] select_ln118_2_fu_1122_p3;
wire   [8:0] tmp_37_fu_1152_p4;
wire   [11:0] zext_ln444_fu_1136_p1;
wire  signed [11:0] ImagLoc_x_fu_1168_p2;
wire   [0:0] tmp_38_fu_1178_p3;
wire   [0:0] icmp_ln118_1_fu_1192_p2;
wire   [0:0] xor_ln118_8_fu_1186_p2;
wire   [0:0] tmp_39_fu_1204_p3;
wire   [11:0] sub_ln142_2_fu_1212_p2;
wire  signed [11:0] select_ln139_fu_1218_p3;
wire  signed [12:0] sext_ln139_1_fu_1230_p1;
wire  signed [12:0] sext_ln451_fu_1174_p1;
wire   [12:0] sub_ln147_fu_1240_p2;
wire   [12:0] select_ln118_3_fu_1246_p3;
wire   [0:0] xor_ln118_9_fu_1258_p2;
wire   [0:0] icmp_ln144_fu_1234_p2;
wire   [0:0] or_ln118_fu_1264_p2;
wire   [0:0] and_ln144_fu_1270_p2;
wire  signed [13:0] sext_ln139_fu_1226_p1;
wire   [13:0] zext_ln118_fu_1254_p1;
wire  signed [13:0] x_fu_1276_p3;
wire  signed [31:0] sext_ln144_fu_1284_p1;
wire   [0:0] icmp_ln891_fu_1162_p2;
wire   [2:0] xor_ln493_fu_1356_p2;
wire   [7:0] tmp_4_fu_1361_p7;
wire   [7:0] tmp_5_fu_1384_p7;
wire   [7:0] tmp_6_fu_1407_p7;
wire   [7:0] tmp_7_fu_1430_p7;
wire   [7:0] tmp_8_fu_1453_p7;
wire   [7:0] tmp_9_fu_1569_p7;
wire   [7:0] tmp_10_fu_1591_p7;
wire   [7:0] tmp_11_fu_1613_p7;
wire   [7:0] tmp_12_fu_1635_p7;
wire   [7:0] tmp_13_fu_1657_p7;
wire   [8:0] zext_ln1118_fu_1736_p1;
wire  signed [8:0] sub_ln1118_fu_1740_p2;
wire  signed [2:0] mul_ln1118_fu_1754_p0;
wire   [7:0] mul_ln1118_fu_1754_p1;
wire  signed [10:0] mul_ln1118_fu_1754_p2;
wire  signed [11:0] sext_ln1116_fu_1746_p1;
wire  signed [11:0] sext_ln703_fu_1759_p1;
wire   [11:0] add_ln703_fu_1771_p2;
wire  signed [3:0] mul_ln1118_1_fu_1785_p0;
wire   [7:0] mul_ln1118_1_fu_1785_p1;
wire  signed [11:0] mul_ln1118_1_fu_1785_p2;
wire  signed [12:0] sext_ln703_2_fu_1790_p1;
wire  signed [12:0] sext_ln703_1_fu_1777_p1;
wire   [12:0] add_ln703_1_fu_1798_p2;
wire  signed [2:0] mul_ln1118_2_fu_1812_p0;
wire   [7:0] mul_ln1118_2_fu_1812_p1;
wire  signed [10:0] mul_ln1118_2_fu_1812_p2;
wire  signed [1:0] mul_ln1118_3_fu_1829_p0;
wire   [7:0] mul_ln1118_3_fu_1829_p1;
wire  signed [9:0] mul_ln1118_3_fu_1829_p2;
wire  signed [2:0] mul_ln1118_4_fu_1846_p0;
wire   [7:0] mul_ln1118_4_fu_1846_p1;
wire  signed [10:0] mul_ln1118_4_fu_1846_p2;
wire   [10:0] tmp_15_fu_1859_p3;
wire   [11:0] zext_ln1118_28_fu_1867_p1;
wire  signed [11:0] sub_ln1118_1_fu_1871_p2;
wire  signed [13:0] sext_ln703_7_fu_1877_p1;
wire  signed [13:0] sext_ln703_3_fu_1804_p1;
wire  signed [11:0] sext_ln703_5_fu_1834_p1;
wire  signed [11:0] sext_ln703_6_fu_1851_p1;
wire   [11:0] add_ln703_3_fu_1891_p2;
wire  signed [12:0] sext_ln703_4_fu_1817_p1;
wire  signed [12:0] sext_ln703_8_fu_1897_p1;
wire   [12:0] add_ln703_4_fu_1901_p2;
wire   [13:0] add_ln703_2_fu_1885_p2;
wire  signed [13:0] sext_ln703_9_fu_1907_p1;
wire  signed [4:0] mul_ln1118_5_fu_1921_p0;
wire   [7:0] mul_ln1118_5_fu_1921_p1;
wire  signed [12:0] mul_ln1118_5_fu_1921_p2;
wire  signed [4:0] mul_ln1118_6_fu_1938_p0;
wire   [7:0] mul_ln1118_6_fu_1938_p1;
wire  signed [12:0] mul_ln1118_6_fu_1938_p2;
wire  signed [13:0] sext_ln703_11_fu_1943_p1;
wire  signed [13:0] sext_ln703_10_fu_1926_p1;
wire  signed [3:0] mul_ln1118_7_fu_1961_p0;
wire   [7:0] mul_ln1118_7_fu_1961_p1;
wire   [11:0] mul_ln1118_7_fu_1961_p2;
wire  signed [4:0] mul_ln1118_8_fu_1974_p0;
wire   [7:0] mul_ln1118_8_fu_1974_p1;
wire   [12:0] mul_ln1118_8_fu_1974_p2;
wire  signed [5:0] mul_ln1118_9_fu_1991_p0;
wire   [7:0] mul_ln1118_9_fu_1991_p1;
wire   [11:0] trunc_ln703_10_fu_1979_p1;
wire   [5:0] mul_ln1118_10_fu_2010_p0;
wire   [7:0] mul_ln1118_10_fu_2010_p1;
wire   [13:0] mul_ln1118_10_fu_2010_p2;
wire   [4:0] mul_ln1118_11_fu_2023_p0;
wire   [7:0] mul_ln1118_11_fu_2023_p1;
wire   [12:0] mul_ln1118_11_fu_2023_p2;
wire  signed [2:0] mul_ln1118_12_fu_2036_p0;
wire   [7:0] mul_ln1118_12_fu_2036_p1;
wire  signed [10:0] mul_ln1118_12_fu_2036_p2;
wire  signed [4:0] mul_ln1118_13_fu_2053_p0;
wire   [7:0] mul_ln1118_13_fu_2053_p1;
wire  signed [12:0] mul_ln1118_13_fu_2053_p2;
wire   [4:0] mul_ln1118_14_fu_2070_p0;
wire   [7:0] mul_ln1118_14_fu_2070_p1;
wire   [12:0] mul_ln1118_14_fu_2070_p2;
wire   [10:0] shl_ln1118_1_fu_2079_p3;
wire   [3:0] mul_ln1118_15_fu_2101_p0;
wire   [7:0] mul_ln1118_15_fu_2101_p1;
wire   [11:0] mul_ln1118_15_fu_2101_p2;
wire  signed [1:0] mul_ln1118_16_fu_2114_p0;
wire   [7:0] mul_ln1118_16_fu_2114_p1;
wire   [9:0] mul_ln1118_16_fu_2114_p2;
wire  signed [3:0] mul_ln1118_17_fu_2127_p0;
wire   [7:0] mul_ln1118_17_fu_2127_p1;
wire  signed [11:0] mul_ln1118_17_fu_2127_p2;
wire   [3:0] mul_ln1118_18_fu_2144_p0;
wire   [7:0] mul_ln1118_18_fu_2144_p1;
wire   [11:0] mul_ln1118_18_fu_2144_p2;
wire   [3:0] mul_ln1118_19_fu_2157_p0;
wire   [7:0] mul_ln1118_19_fu_2157_p1;
wire   [11:0] mul_ln1118_19_fu_2157_p2;
wire  signed [13:0] sext_ln703_17_fu_2058_p1;
wire   [12:0] zext_ln1118_29_fu_2087_p1;
wire   [12:0] add_ln703_13_fu_2176_p2;
wire   [11:0] add_ln703_16_fu_2188_p2;
wire  signed [12:0] sext_ln703_18_fu_2132_p1;
wire   [12:0] zext_ln703_2_fu_2194_p1;
wire   [12:0] add_ln703_17_fu_2198_p2;
wire  signed [11:0] sext_ln703_16_fu_2041_p1;
wire   [9:0] zext_ln703_fu_2166_p1;
wire   [9:0] add_ln703_19_fu_2214_p2;
wire   [11:0] add_ln703_18_fu_2208_p2;
wire  signed [11:0] sext_ln703_21_fu_2220_p1;
wire   [11:0] add_ln703_20_fu_2224_p2;
wire  signed [13:0] sext_ln703_20_fu_2204_p1;
wire  signed [13:0] sext_ln703_22_fu_2230_p1;
wire   [7:0] trunc_ln703_2_fu_1794_p1;
wire   [7:0] trunc_ln703_fu_1763_p1;
wire   [7:0] trunc_ln703_1_fu_1767_p1;
wire   [7:0] add_ln703_23_fu_2240_p2;
wire   [7:0] trunc_ln703_5_fu_1855_p1;
wire   [7:0] trunc_ln703_4_fu_1838_p1;
wire   [7:0] trunc_ln703_3_fu_1821_p1;
wire   [7:0] add_ln703_25_fu_2252_p2;
wire   [7:0] add_ln703_24_fu_2246_p2;
wire   [7:0] add_ln703_26_fu_2258_p2;
wire   [7:0] trunc_ln703_8_fu_1947_p1;
wire   [7:0] trunc_ln703_7_fu_1930_p1;
wire   [7:0] trunc_ln703_6_fu_1881_p1;
wire   [7:0] add_ln703_28_fu_2270_p2;
wire   [7:0] trunc_ln703_12_fu_1996_p1;
wire   [7:0] trunc_ln703_11_fu_1983_p1;
wire   [7:0] trunc_ln703_9_fu_1966_p1;
wire   [7:0] add_ln703_30_fu_2282_p2;
wire   [7:0] add_ln703_29_fu_2276_p2;
wire   [7:0] add_ln703_31_fu_2288_p2;
wire   [7:0] add_ln703_27_fu_2264_p2;
wire   [7:0] add_ln703_32_fu_2294_p2;
wire   [7:0] trunc_ln703_15_fu_2045_p1;
wire   [7:0] trunc_ln703_14_fu_2028_p1;
wire   [7:0] trunc_ln703_13_fu_2015_p1;
wire   [7:0] add_ln703_34_fu_2306_p2;
wire   [7:0] shl_ln703_fu_2091_p2;
wire   [7:0] trunc_ln703_17_fu_2075_p1;
wire   [7:0] trunc_ln703_16_fu_2062_p1;
wire   [7:0] add_ln703_36_fu_2318_p2;
wire   [7:0] add_ln703_35_fu_2312_p2;
wire   [7:0] add_ln703_37_fu_2324_p2;
wire   [7:0] trunc_ln703_20_fu_2136_p1;
wire   [7:0] trunc_ln703_19_fu_2119_p1;
wire   [7:0] trunc_ln703_18_fu_2106_p1;
wire   [7:0] add_ln703_39_fu_2336_p2;
wire   [7:0] trunc_ln703_22_fu_2162_p1;
wire   [7:0] trunc_ln703_21_fu_2149_p1;
wire   [7:0] add_ln703_41_fu_2348_p2;
wire   [7:0] add_ln703_40_fu_2342_p2;
wire   [7:0] add_ln703_42_fu_2354_p2;
wire  signed [14:0] sext_ln1116_1_fu_2511_p1;
wire  signed [14:0] sext_ln703_12_fu_2514_p1;
wire  signed [14:0] sext_ln703_13_fu_2523_p1;
wire   [14:0] add_ln703_7_fu_2517_p2;
wire   [14:0] add_ln703_8_fu_2526_p2;
wire  signed [15:0] sext_ln703_14_fu_2532_p1;
wire  signed [15:0] sext_ln703_15_fu_2536_p1;
wire   [15:0] add_ln703_10_fu_2539_p2;
wire  signed [15:0] sext_ln703_19_fu_2545_p1;
wire   [15:0] add_ln703_12_fu_2548_p2;
wire   [15:0] zext_ln703_1_fu_2554_p1;
wire   [15:0] add_ln703_15_fu_2557_p2;
wire  signed [15:0] sext_ln703_23_fu_2563_p1;
wire   [15:0] p_Val2_s_fu_2566_p2;
wire   [7:0] add_ln703_44_fu_2580_p2;
wire   [0:0] p_Result_s_fu_2572_p3;
wire   [7:0] tmp_14_fu_2589_p4;
wire   [0:0] icmp_ln785_fu_2605_p2;
wire   [0:0] xor_ln785_fu_2599_p2;
wire   [0:0] overflow_fu_2611_p2;
wire   [0:0] or_ln340_fu_2625_p2;
wire   [7:0] select_ln340_fu_2617_p3;
wire   [7:0] p_Val2_5_fu_2584_p2;
reg   [3:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_200;
reg    ap_enable_state3_pp0_iter0_stage0;
reg    ap_enable_operation_241;
reg    ap_enable_state4_pp0_iter1_stage0;
reg    ap_predicate_op266_store_state4;
reg    ap_enable_operation_266;
reg    ap_predicate_op279_store_state4;
reg    ap_enable_operation_279;
reg    ap_enable_operation_202;
reg    ap_enable_operation_245;
reg    ap_predicate_op264_store_state4;
reg    ap_enable_operation_264;
reg    ap_predicate_op277_store_state4;
reg    ap_enable_operation_277;
reg    ap_enable_operation_204;
reg    ap_enable_operation_248;
reg    ap_predicate_op262_store_state4;
reg    ap_enable_operation_262;
reg    ap_predicate_op276_store_state4;
reg    ap_enable_operation_276;
reg    ap_enable_operation_206;
reg    ap_enable_operation_251;
reg    ap_predicate_op260_store_state4;
reg    ap_enable_operation_260;
reg    ap_predicate_op275_store_state4;
reg    ap_enable_operation_275;
reg    ap_enable_operation_208;
reg    ap_enable_operation_254;
reg    ap_predicate_op258_store_state4;
reg    ap_enable_operation_258;
reg    ap_predicate_op274_store_state4;
reg    ap_enable_operation_274;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [13:0] mul_ln1118_10_fu_2010_p10;
wire   [12:0] mul_ln1118_11_fu_2023_p10;
wire   [10:0] mul_ln1118_12_fu_2036_p10;
wire   [12:0] mul_ln1118_13_fu_2053_p10;
wire   [12:0] mul_ln1118_14_fu_2070_p10;
wire   [11:0] mul_ln1118_15_fu_2101_p10;
wire   [9:0] mul_ln1118_16_fu_2114_p10;
wire   [11:0] mul_ln1118_17_fu_2127_p10;
wire   [11:0] mul_ln1118_18_fu_2144_p10;
wire   [11:0] mul_ln1118_19_fu_2157_p10;
wire   [11:0] mul_ln1118_1_fu_1785_p10;
wire   [10:0] mul_ln1118_2_fu_1812_p10;
wire   [9:0] mul_ln1118_3_fu_1829_p10;
wire   [10:0] mul_ln1118_4_fu_1846_p10;
wire   [12:0] mul_ln1118_5_fu_1921_p10;
wire   [12:0] mul_ln1118_6_fu_1938_p10;
wire   [11:0] mul_ln1118_7_fu_1961_p10;
wire   [12:0] mul_ln1118_8_fu_1974_p10;
wire   [13:0] mul_ln1118_9_fu_1991_p10;
wire   [10:0] mul_ln1118_fu_1754_p10;
reg    ap_condition_1788;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_address1),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(p_src_data_stream_V_dout)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_6_address0),
    .ce0(k_buf_0_val_6_ce0),
    .q0(k_buf_0_val_6_q0),
    .address1(k_buf_0_val_6_address1),
    .ce1(k_buf_0_val_6_ce1),
    .we1(k_buf_0_val_6_we1),
    .d1(k_buf_0_val_6_d1)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_7_address0),
    .ce0(k_buf_0_val_7_ce0),
    .q0(k_buf_0_val_7_q0),
    .address1(k_buf_0_val_7_address1),
    .ce1(k_buf_0_val_7_ce1),
    .we1(k_buf_0_val_7_we1),
    .d1(k_buf_0_val_7_d1)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_8_address0),
    .ce0(k_buf_0_val_8_ce0),
    .q0(k_buf_0_val_8_q0),
    .address1(k_buf_0_val_8_address1),
    .ce1(k_buf_0_val_8_ce1),
    .we1(k_buf_0_val_8_we1),
    .d1(k_buf_0_val_8_d1)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_9_address0),
    .ce0(k_buf_0_val_9_ce0),
    .q0(k_buf_0_val_9_q0),
    .address1(k_buf_0_val_9_address1),
    .ce1(k_buf_0_val_9_ce1),
    .we1(k_buf_0_val_9_we1),
    .d1(k_buf_0_val_9_d1)
);

sobel_accel_mux_5rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_5rcU_U54(
    .din0(right_border_buf_0_s_fu_282),
    .din1(right_border_buf_0_14_fu_286),
    .din2(right_border_buf_0_15_fu_290),
    .din3(8'd0),
    .din4(8'd0),
    .din5(xor_ln493_fu_1356_p2),
    .dout(tmp_4_fu_1361_p7)
);

sobel_accel_mux_5rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_5rcU_U55(
    .din0(right_border_buf_0_18_fu_302),
    .din1(right_border_buf_0_19_fu_306),
    .din2(right_border_buf_0_20_fu_310),
    .din3(8'd0),
    .din4(8'd0),
    .din5(xor_ln493_fu_1356_p2),
    .dout(tmp_5_fu_1384_p7)
);

sobel_accel_mux_5rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_5rcU_U56(
    .din0(right_border_buf_0_23_fu_322),
    .din1(right_border_buf_0_24_fu_326),
    .din2(right_border_buf_0_25_fu_330),
    .din3(8'd0),
    .din4(8'd0),
    .din5(xor_ln493_fu_1356_p2),
    .dout(tmp_6_fu_1407_p7)
);

sobel_accel_mux_5rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_5rcU_U57(
    .din0(right_border_buf_0_27_fu_338),
    .din1(right_border_buf_0_26_fu_334),
    .din2(right_border_buf_0_22_fu_318),
    .din3(8'd0),
    .din4(8'd0),
    .din5(xor_ln493_fu_1356_p2),
    .dout(tmp_7_fu_1430_p7)
);

sobel_accel_mux_5rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_5rcU_U58(
    .din0(right_border_buf_0_21_fu_314),
    .din1(right_border_buf_0_17_fu_298),
    .din2(right_border_buf_0_16_fu_294),
    .din3(8'd0),
    .din4(8'd0),
    .din5(xor_ln493_fu_1356_p2),
    .dout(tmp_8_fu_1453_p7)
);

sobel_accel_mux_5rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_5rcU_U59(
    .din0(col_buf_0_val_0_0_fu_1377_p3),
    .din1(col_buf_0_val_1_0_fu_1400_p3),
    .din2(col_buf_0_val_2_0_fu_1423_p3),
    .din3(col_buf_0_val_3_0_fu_1446_p3),
    .din4(col_buf_0_val_4_0_fu_1469_p3),
    .din5(xor_ln493_1_reg_3014),
    .dout(tmp_9_fu_1569_p7)
);

sobel_accel_mux_5rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_5rcU_U60(
    .din0(col_buf_0_val_0_0_fu_1377_p3),
    .din1(col_buf_0_val_1_0_fu_1400_p3),
    .din2(col_buf_0_val_2_0_fu_1423_p3),
    .din3(col_buf_0_val_3_0_fu_1446_p3),
    .din4(col_buf_0_val_4_0_fu_1469_p3),
    .din5(xor_ln493_2_reg_3019),
    .dout(tmp_10_fu_1591_p7)
);

sobel_accel_mux_5rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_5rcU_U61(
    .din0(col_buf_0_val_0_0_fu_1377_p3),
    .din1(col_buf_0_val_1_0_fu_1400_p3),
    .din2(col_buf_0_val_2_0_fu_1423_p3),
    .din3(col_buf_0_val_3_0_fu_1446_p3),
    .din4(col_buf_0_val_4_0_fu_1469_p3),
    .din5(xor_ln493_3_reg_3024),
    .dout(tmp_11_fu_1613_p7)
);

sobel_accel_mux_5rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_5rcU_U62(
    .din0(col_buf_0_val_0_0_fu_1377_p3),
    .din1(col_buf_0_val_1_0_fu_1400_p3),
    .din2(col_buf_0_val_2_0_fu_1423_p3),
    .din3(col_buf_0_val_3_0_fu_1446_p3),
    .din4(col_buf_0_val_4_0_fu_1469_p3),
    .din5(xor_ln493_4_reg_3029),
    .dout(tmp_12_fu_1635_p7)
);

sobel_accel_mux_5rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_5rcU_U63(
    .din0(col_buf_0_val_0_0_fu_1377_p3),
    .din1(col_buf_0_val_1_0_fu_1400_p3),
    .din2(col_buf_0_val_2_0_fu_1423_p3),
    .din3(col_buf_0_val_3_0_fu_1446_p3),
    .din4(col_buf_0_val_4_0_fu_1469_p3),
    .din5(xor_ln493_5_reg_3034),
    .dout(tmp_13_fu_1657_p7)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((icmp_ln444_fu_1140_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln443_fu_690_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter1_state4)) | ((icmp_ln443_fu_690_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter1_state4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((icmp_ln443_fu_690_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_fu_1140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_2_reg_595 <= j_V_fu_1146_p2;
    end else if (((icmp_ln443_fu_690_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_2_reg_595 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        t_V_reg_584 <= i_V_reg_2974;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_584 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln512_reg_3096) & (icmp_ln444_reg_3039 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln703_11_reg_3120 <= add_ln703_11_fu_2170_p2;
        add_ln703_14_reg_3125 <= add_ln703_14_fu_2182_p2;
        add_ln703_21_reg_3130 <= add_ln703_21_fu_2234_p2;
        add_ln703_33_reg_3135 <= add_ln703_33_fu_2300_p2;
        add_ln703_38_reg_3140 <= add_ln703_38_fu_2330_p2;
        add_ln703_43_reg_3145 <= add_ln703_43_fu_2360_p2;
        add_ln703_5_reg_3100 <= add_ln703_5_fu_1911_p2;
        add_ln703_6_reg_3105 <= add_ln703_6_fu_1951_p2;
        add_ln703_9_reg_3115 <= add_ln703_9_fu_2000_p2;
        mul_ln1118_9_reg_3110 <= mul_ln1118_9_fu_1991_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_fu_1140_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln118_reg_3048 <= and_ln118_fu_1198_p2;
        and_ln512_reg_3096 <= and_ln512_fu_1306_p2;
        k_buf_0_val_5_addr_reg_3066 <= zext_ln835_fu_1297_p1;
        k_buf_0_val_6_addr_reg_3072 <= zext_ln835_fu_1297_p1;
        k_buf_0_val_7_addr_reg_3078 <= zext_ln835_fu_1297_p1;
        k_buf_0_val_8_addr_reg_3084 <= zext_ln835_fu_1297_p1;
        k_buf_0_val_9_addr_reg_3090 <= zext_ln835_fu_1297_p1;
        or_ln457_reg_3057 <= or_ln457_fu_1292_p2;
        trunc_ln458_reg_3052 <= trunc_ln458_fu_1288_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln512_reg_3096_pp0_iter1_reg <= and_ln512_reg_3096;
        icmp_ln444_reg_3039 <= icmp_ln444_fu_1140_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_2974 <= i_V_fu_696_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln443_fu_690_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln879_1_reg_2997 <= icmp_ln879_1_fu_726_p2;
        icmp_ln879_2_reg_3001 <= icmp_ln879_2_fu_732_p2;
        icmp_ln879_reg_2993 <= icmp_ln879_fu_720_p2;
        icmp_ln887_reg_2979 <= icmp_ln887_fu_702_p2;
        icmp_ln899_1_reg_3005 <= icmp_ln899_1_fu_738_p2;
        icmp_ln899_reg_2988 <= icmp_ln899_fu_714_p2;
        xor_ln457_reg_2983 <= xor_ln457_fu_708_p2;
        xor_ln493_1_reg_3014 <= xor_ln493_1_fu_982_p2;
        xor_ln493_2_reg_3019 <= xor_ln493_2_fu_1016_p2;
        xor_ln493_3_reg_3024 <= xor_ln493_3_fu_1054_p2;
        xor_ln493_4_reg_3029 <= xor_ln493_4_fu_1092_p2;
        xor_ln493_5_reg_3034 <= xor_ln493_5_fu_1130_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_2979 == 1'd1) & (icmp_ln899_reg_2988 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln444_reg_3039 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_14_fu_286 <= right_border_buf_0_s_fu_282;
        right_border_buf_0_15_fu_290 <= right_border_buf_0_14_fu_286;
        right_border_buf_0_16_fu_294 <= right_border_buf_0_17_fu_298;
        right_border_buf_0_17_fu_298 <= right_border_buf_0_21_fu_314;
        right_border_buf_0_18_fu_302 <= col_buf_0_val_1_0_fu_1400_p3;
        right_border_buf_0_19_fu_306 <= right_border_buf_0_18_fu_302;
        right_border_buf_0_20_fu_310 <= right_border_buf_0_19_fu_306;
        right_border_buf_0_21_fu_314 <= col_buf_0_val_4_0_fu_1469_p3;
        right_border_buf_0_22_fu_318 <= right_border_buf_0_26_fu_334;
        right_border_buf_0_23_fu_322 <= col_buf_0_val_2_0_fu_1423_p3;
        right_border_buf_0_24_fu_326 <= right_border_buf_0_23_fu_322;
        right_border_buf_0_25_fu_330 <= right_border_buf_0_24_fu_326;
        right_border_buf_0_26_fu_334 <= right_border_buf_0_27_fu_338;
        right_border_buf_0_27_fu_338 <= col_buf_0_val_3_0_fu_1446_p3;
        right_border_buf_0_s_fu_282 <= col_buf_0_val_0_0_fu_1377_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        sext_ln1118_10_reg_2930 <= sext_ln1118_10_fu_654_p1;
        sext_ln1118_11_reg_2935 <= sext_ln1118_11_fu_658_p1;
        sext_ln1118_12_reg_2950 <= sext_ln1118_12_fu_670_p1;
        sext_ln1118_13_reg_2955 <= sext_ln1118_13_fu_674_p1;
        sext_ln1118_1_reg_2875 <= sext_ln1118_1_fu_610_p1;
        sext_ln1118_2_reg_2880 <= sext_ln1118_2_fu_614_p1;
        sext_ln1118_3_reg_2885 <= sext_ln1118_3_fu_618_p1;
        sext_ln1118_4_reg_2890 <= sext_ln1118_4_fu_622_p1;
        sext_ln1118_5_reg_2895 <= sext_ln1118_5_fu_626_p1;
        sext_ln1118_6_reg_2900 <= sext_ln1118_6_fu_630_p1;
        sext_ln1118_7_reg_2905 <= sext_ln1118_7_fu_634_p1;
        sext_ln1118_8_reg_2910 <= sext_ln1118_8_fu_638_p1;
        sext_ln1118_9_reg_2915 <= sext_ln1118_9_fu_642_p1;
        sext_ln1118_reg_2870 <= sext_ln1118_fu_606_p1;
        zext_ln1118_12_reg_2920[5 : 0] <= zext_ln1118_12_fu_646_p1[5 : 0];
        zext_ln1118_18_reg_2925[4 : 0] <= zext_ln1118_18_fu_650_p1[4 : 0];
        zext_ln1118_24_reg_2940[4 : 0] <= zext_ln1118_24_fu_662_p1[4 : 0];
        zext_ln1118_25_reg_2945[3 : 0] <= zext_ln1118_25_fu_666_p1[3 : 0];
        zext_ln1118_26_reg_2960[3 : 0] <= zext_ln1118_26_fu_678_p1[3 : 0];
        zext_ln1118_27_reg_2965[3 : 0] <= zext_ln1118_27_fu_682_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_reg_3039 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_18_fu_206 <= src_kernel_win_0_va_fu_202;
        src_kernel_win_0_va_19_fu_210 <= src_kernel_win_0_va_18_fu_206;
        src_kernel_win_0_va_20_fu_214 <= src_kernel_win_0_va_19_fu_210;
        src_kernel_win_0_va_21_fu_218 <= src_kernel_win_0_va_38_fu_1606_p3;
        src_kernel_win_0_va_22_fu_222 <= src_kernel_win_0_va_21_fu_218;
        src_kernel_win_0_va_23_fu_226 <= src_kernel_win_0_va_22_fu_222;
        src_kernel_win_0_va_24_fu_230 <= src_kernel_win_0_va_23_fu_226;
        src_kernel_win_0_va_25_fu_234 <= src_kernel_win_0_va_39_fu_1628_p3;
        src_kernel_win_0_va_26_fu_238 <= src_kernel_win_0_va_25_fu_234;
        src_kernel_win_0_va_27_fu_242 <= src_kernel_win_0_va_26_fu_238;
        src_kernel_win_0_va_28_fu_246 <= src_kernel_win_0_va_27_fu_242;
        src_kernel_win_0_va_29_fu_250 <= src_kernel_win_0_va_40_fu_1650_p3;
        src_kernel_win_0_va_30_fu_254 <= src_kernel_win_0_va_29_fu_250;
        src_kernel_win_0_va_31_fu_258 <= src_kernel_win_0_va_30_fu_254;
        src_kernel_win_0_va_32_fu_262 <= src_kernel_win_0_va_31_fu_258;
        src_kernel_win_0_va_33_fu_266 <= src_kernel_win_0_va_41_fu_1672_p3;
        src_kernel_win_0_va_34_fu_270 <= src_kernel_win_0_va_33_fu_266;
        src_kernel_win_0_va_35_fu_274 <= src_kernel_win_0_va_34_fu_270;
        src_kernel_win_0_va_36_fu_278 <= src_kernel_win_0_va_35_fu_274;
        src_kernel_win_0_va_fu_202 <= src_kernel_win_0_va_37_fu_1584_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln443_fu_690_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln443_fu_690_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_2979 == 1'd1) & (icmp_ln899_reg_2988 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln444_reg_3039 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln879_reg_2993 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln899_reg_2988 == 1'd0) & (icmp_ln444_reg_3039 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_2979 == 1'd1) & (icmp_ln899_reg_2988 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln444_reg_3039 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln879_reg_2993 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln899_reg_2988 == 1'd0) & (icmp_ln444_reg_3039 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_6_ce0 = 1'b1;
    end else begin
        k_buf_0_val_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_2979 == 1'd1) & (icmp_ln899_reg_2988 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln444_reg_3039 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln879_1_reg_2997 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln899_reg_2988 == 1'd0) & (icmp_ln444_reg_3039 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_6_ce1 = 1'b1;
    end else begin
        k_buf_0_val_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1788)) begin
        if (((icmp_ln887_reg_2979 == 1'd1) & (icmp_ln899_reg_2988 == 1'd1))) begin
            k_buf_0_val_6_d1 = k_buf_0_val_5_q0;
        end else if (((icmp_ln879_1_reg_2997 == 1'd1) & (icmp_ln899_reg_2988 == 1'd0))) begin
            k_buf_0_val_6_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_6_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_6_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_2979 == 1'd1) & (icmp_ln899_reg_2988 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln444_reg_3039 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln879_1_reg_2997 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln899_reg_2988 == 1'd0) & (icmp_ln444_reg_3039 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_6_we1 = 1'b1;
    end else begin
        k_buf_0_val_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_7_ce0 = 1'b1;
    end else begin
        k_buf_0_val_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_2979 == 1'd1) & (icmp_ln899_reg_2988 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln444_reg_3039 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln879_2_reg_3001 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln899_reg_2988 == 1'd0) & (icmp_ln444_reg_3039 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_7_ce1 = 1'b1;
    end else begin
        k_buf_0_val_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1788)) begin
        if (((icmp_ln887_reg_2979 == 1'd1) & (icmp_ln899_reg_2988 == 1'd1))) begin
            k_buf_0_val_7_d1 = k_buf_0_val_6_q0;
        end else if (((icmp_ln879_2_reg_3001 == 1'd1) & (icmp_ln899_reg_2988 == 1'd0))) begin
            k_buf_0_val_7_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_7_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_7_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_2979 == 1'd1) & (icmp_ln899_reg_2988 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln444_reg_3039 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln879_2_reg_3001 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln899_reg_2988 == 1'd0) & (icmp_ln444_reg_3039 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_7_we1 = 1'b1;
    end else begin
        k_buf_0_val_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_8_ce0 = 1'b1;
    end else begin
        k_buf_0_val_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_2979 == 1'd1) & (icmp_ln899_reg_2988 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln444_reg_3039 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln879_1_reg_2997 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln899_reg_2988 == 1'd0) & (icmp_ln444_reg_3039 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_8_ce1 = 1'b1;
    end else begin
        k_buf_0_val_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1788)) begin
        if (((icmp_ln887_reg_2979 == 1'd1) & (icmp_ln899_reg_2988 == 1'd1))) begin
            k_buf_0_val_8_d1 = k_buf_0_val_7_q0;
        end else if (((icmp_ln879_1_reg_2997 == 1'd1) & (icmp_ln899_reg_2988 == 1'd0))) begin
            k_buf_0_val_8_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_8_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_8_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_2979 == 1'd1) & (icmp_ln899_reg_2988 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln444_reg_3039 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln879_1_reg_2997 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln899_reg_2988 == 1'd0) & (icmp_ln444_reg_3039 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_8_we1 = 1'b1;
    end else begin
        k_buf_0_val_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_9_ce0 = 1'b1;
    end else begin
        k_buf_0_val_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_2979 == 1'd1) & (icmp_ln899_reg_2988 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln444_reg_3039 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln879_reg_2993 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln899_reg_2988 == 1'd0) & (icmp_ln444_reg_3039 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_9_ce1 = 1'b1;
    end else begin
        k_buf_0_val_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1788)) begin
        if (((icmp_ln887_reg_2979 == 1'd1) & (icmp_ln899_reg_2988 == 1'd1))) begin
            k_buf_0_val_9_d1 = k_buf_0_val_8_q0;
        end else if (((icmp_ln879_reg_2993 == 1'd1) & (icmp_ln899_reg_2988 == 1'd0))) begin
            k_buf_0_val_9_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_9_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_9_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_2979 == 1'd1) & (icmp_ln899_reg_2988 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln444_reg_3039 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln879_reg_2993 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln899_reg_2988 == 1'd0) & (icmp_ln444_reg_3039 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_9_we1 = 1'b1;
    end else begin
        k_buf_0_val_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln512_reg_3096_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln512_reg_3096_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_2979 == 1'd1) & (icmp_ln899_reg_2988 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln444_reg_3039 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd1 == and_ln118_reg_3048) & (icmp_ln899_reg_2988 == 1'd0) & (icmp_ln444_reg_3039 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op278_read_state4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op257_read_state4 == 1'b1)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln443_fu_690_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_fu_1168_p2 = ($signed(12'd4094) + $signed(zext_ln444_fu_1136_p1));

assign add_ln118_1_fu_1098_p2 = (3'd3 + trunc_ln506_fu_744_p1);

assign add_ln118_fu_1022_p2 = ($signed(3'd5) + $signed(trunc_ln506_fu_744_p1));

assign add_ln506_1_fu_812_p2 = ($signed(12'd4094) + $signed(zext_ln443_fu_686_p1));

assign add_ln506_2_fu_876_p2 = ($signed(12'd4093) + $signed(zext_ln443_fu_686_p1));

assign add_ln506_3_fu_902_p2 = ($signed(12'd4092) + $signed(zext_ln443_fu_686_p1));

assign add_ln506_4_fu_928_p2 = ($signed(12'd4091) + $signed(zext_ln443_fu_686_p1));

assign add_ln506_fu_748_p2 = ($signed(12'd4095) + $signed(zext_ln443_fu_686_p1));

assign add_ln507_1_fu_1002_p2 = ($signed(3'd6) + $signed(trunc_ln506_fu_744_p1));

assign add_ln507_fu_968_p2 = ($signed(3'd7) + $signed(trunc_ln506_fu_744_p1));

assign add_ln703_10_fu_2539_p2 = ($signed(sext_ln703_14_fu_2532_p1) + $signed(sext_ln703_15_fu_2536_p1));

assign add_ln703_11_fu_2170_p2 = ($signed(sext_ln703_17_fu_2058_p1) + $signed(mul_ln1118_10_fu_2010_p2));

assign add_ln703_12_fu_2548_p2 = ($signed(add_ln703_10_fu_2539_p2) + $signed(sext_ln703_19_fu_2545_p1));

assign add_ln703_13_fu_2176_p2 = (mul_ln1118_14_fu_2070_p2 + zext_ln1118_29_fu_2087_p1);

assign add_ln703_14_fu_2182_p2 = (mul_ln1118_11_fu_2023_p2 + add_ln703_13_fu_2176_p2);

assign add_ln703_15_fu_2557_p2 = (add_ln703_12_fu_2548_p2 + zext_ln703_1_fu_2554_p1);

assign add_ln703_16_fu_2188_p2 = (mul_ln1118_18_fu_2144_p2 + mul_ln1118_19_fu_2157_p2);

assign add_ln703_17_fu_2198_p2 = ($signed(sext_ln703_18_fu_2132_p1) + $signed(zext_ln703_2_fu_2194_p1));

assign add_ln703_18_fu_2208_p2 = ($signed(sext_ln703_16_fu_2041_p1) + $signed(mul_ln1118_15_fu_2101_p2));

assign add_ln703_19_fu_2214_p2 = (zext_ln703_fu_2166_p1 + mul_ln1118_16_fu_2114_p2);

assign add_ln703_1_fu_1798_p2 = ($signed(sext_ln703_2_fu_1790_p1) + $signed(sext_ln703_1_fu_1777_p1));

assign add_ln703_20_fu_2224_p2 = ($signed(add_ln703_18_fu_2208_p2) + $signed(sext_ln703_21_fu_2220_p1));

assign add_ln703_21_fu_2234_p2 = ($signed(sext_ln703_20_fu_2204_p1) + $signed(sext_ln703_22_fu_2230_p1));

assign add_ln703_23_fu_2240_p2 = (trunc_ln703_2_fu_1794_p1 + trunc_ln703_fu_1763_p1);

assign add_ln703_24_fu_2246_p2 = (trunc_ln703_1_fu_1767_p1 + add_ln703_23_fu_2240_p2);

assign add_ln703_25_fu_2252_p2 = (trunc_ln703_5_fu_1855_p1 + trunc_ln703_4_fu_1838_p1);

assign add_ln703_26_fu_2258_p2 = (trunc_ln703_3_fu_1821_p1 + add_ln703_25_fu_2252_p2);

assign add_ln703_27_fu_2264_p2 = (add_ln703_24_fu_2246_p2 + add_ln703_26_fu_2258_p2);

assign add_ln703_28_fu_2270_p2 = (trunc_ln703_8_fu_1947_p1 + trunc_ln703_7_fu_1930_p1);

assign add_ln703_29_fu_2276_p2 = (trunc_ln703_6_fu_1881_p1 + add_ln703_28_fu_2270_p2);

assign add_ln703_2_fu_1885_p2 = ($signed(sext_ln703_7_fu_1877_p1) + $signed(sext_ln703_3_fu_1804_p1));

assign add_ln703_30_fu_2282_p2 = (trunc_ln703_12_fu_1996_p1 + trunc_ln703_11_fu_1983_p1);

assign add_ln703_31_fu_2288_p2 = (trunc_ln703_9_fu_1966_p1 + add_ln703_30_fu_2282_p2);

assign add_ln703_32_fu_2294_p2 = (add_ln703_29_fu_2276_p2 + add_ln703_31_fu_2288_p2);

assign add_ln703_33_fu_2300_p2 = (add_ln703_27_fu_2264_p2 + add_ln703_32_fu_2294_p2);

assign add_ln703_34_fu_2306_p2 = (trunc_ln703_15_fu_2045_p1 + trunc_ln703_14_fu_2028_p1);

assign add_ln703_35_fu_2312_p2 = (trunc_ln703_13_fu_2015_p1 + add_ln703_34_fu_2306_p2);

assign add_ln703_36_fu_2318_p2 = (shl_ln703_fu_2091_p2 + trunc_ln703_17_fu_2075_p1);

assign add_ln703_37_fu_2324_p2 = (trunc_ln703_16_fu_2062_p1 + add_ln703_36_fu_2318_p2);

assign add_ln703_38_fu_2330_p2 = (add_ln703_35_fu_2312_p2 + add_ln703_37_fu_2324_p2);

assign add_ln703_39_fu_2336_p2 = (trunc_ln703_20_fu_2136_p1 + trunc_ln703_19_fu_2119_p1);

assign add_ln703_3_fu_1891_p2 = ($signed(sext_ln703_5_fu_1834_p1) + $signed(sext_ln703_6_fu_1851_p1));

assign add_ln703_40_fu_2342_p2 = (trunc_ln703_18_fu_2106_p1 + add_ln703_39_fu_2336_p2);

assign add_ln703_41_fu_2348_p2 = (src_kernel_win_0_va_37_fu_1584_p3 + trunc_ln703_22_fu_2162_p1);

assign add_ln703_42_fu_2354_p2 = (trunc_ln703_21_fu_2149_p1 + add_ln703_41_fu_2348_p2);

assign add_ln703_43_fu_2360_p2 = (add_ln703_40_fu_2342_p2 + add_ln703_42_fu_2354_p2);

assign add_ln703_44_fu_2580_p2 = (add_ln703_38_reg_3140 + add_ln703_43_reg_3145);

assign add_ln703_4_fu_1901_p2 = ($signed(sext_ln703_4_fu_1817_p1) + $signed(sext_ln703_8_fu_1897_p1));

assign add_ln703_5_fu_1911_p2 = ($signed(add_ln703_2_fu_1885_p2) + $signed(sext_ln703_9_fu_1907_p1));

assign add_ln703_6_fu_1951_p2 = ($signed(sext_ln703_11_fu_1943_p1) + $signed(sext_ln703_10_fu_1926_p1));

assign add_ln703_7_fu_2517_p2 = ($signed(sext_ln1116_1_fu_2511_p1) + $signed(sext_ln703_12_fu_2514_p1));

assign add_ln703_8_fu_2526_p2 = ($signed(sext_ln703_13_fu_2523_p1) + $signed(add_ln703_7_fu_2517_p2));

assign add_ln703_9_fu_2000_p2 = (mul_ln1118_7_fu_1961_p2 + trunc_ln703_10_fu_1979_p1);

assign add_ln703_fu_1771_p2 = ($signed(sext_ln1116_fu_1746_p1) + $signed(sext_ln703_fu_1759_p1));

assign and_ln118_1_fu_774_p2 = (xor_ln118_6_fu_762_p2 & icmp_ln118_fu_768_p2);

assign and_ln118_2_fu_838_p2 = (xor_ln118_7_fu_826_p2 & icmp_ln118_2_fu_832_p2);

assign and_ln118_fu_1198_p2 = (xor_ln118_8_fu_1186_p2 & icmp_ln118_1_fu_1192_p2);

assign and_ln144_fu_1270_p2 = (or_ln118_fu_1264_p2 & icmp_ln144_fu_1234_p2);

assign and_ln512_fu_1306_p2 = (icmp_ln899_reg_2988 & icmp_ln891_fu_1162_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((1'd1 == and_ln512_reg_3096_pp0_iter1_reg) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op278_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op257_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'd1 == and_ln512_reg_3096_pp0_iter1_reg) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op278_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op257_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'd1 == and_ln512_reg_3096_pp0_iter1_reg) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op278_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op257_read_state4 == 1'b1)))));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op278_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op257_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter2 = ((1'd1 == and_ln512_reg_3096_pp0_iter1_reg) & (p_dst_data_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_1788 = ((1'd1 == and_ln118_reg_3048) & (icmp_ln444_reg_3039 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_operation_200 = (icmp_ln444_fu_1140_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_202 = (icmp_ln444_fu_1140_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_204 = (icmp_ln444_fu_1140_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_206 = (icmp_ln444_fu_1140_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_208 = (icmp_ln444_fu_1140_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_241 = (icmp_ln444_reg_3039 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_245 = (icmp_ln444_reg_3039 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_248 = (icmp_ln444_reg_3039 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_251 = (icmp_ln444_reg_3039 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_254 = (icmp_ln444_reg_3039 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_258 = (ap_predicate_op258_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_260 = (ap_predicate_op260_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_262 = (ap_predicate_op262_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_264 = (ap_predicate_op264_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_266 = (ap_predicate_op266_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_274 = (ap_predicate_op274_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_275 = (ap_predicate_op275_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_276 = (ap_predicate_op276_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_277 = (ap_predicate_op277_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_279 = (ap_predicate_op279_store_state4 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state3_pp0_iter0_stage0 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_enable_state4_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_predicate_op257_read_state4 = ((1'd1 == and_ln118_reg_3048) & (icmp_ln899_reg_2988 == 1'd0) & (icmp_ln444_reg_3039 == 1'd0));
end

always @ (*) begin
    ap_predicate_op258_store_state4 = ((icmp_ln879_reg_2993 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln899_reg_2988 == 1'd0) & (icmp_ln444_reg_3039 == 1'd0));
end

always @ (*) begin
    ap_predicate_op260_store_state4 = ((icmp_ln879_1_reg_2997 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln899_reg_2988 == 1'd0) & (icmp_ln444_reg_3039 == 1'd0));
end

always @ (*) begin
    ap_predicate_op262_store_state4 = ((icmp_ln879_2_reg_3001 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln899_reg_2988 == 1'd0) & (icmp_ln444_reg_3039 == 1'd0));
end

always @ (*) begin
    ap_predicate_op264_store_state4 = ((icmp_ln879_1_reg_2997 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln899_reg_2988 == 1'd0) & (icmp_ln444_reg_3039 == 1'd0));
end

always @ (*) begin
    ap_predicate_op266_store_state4 = ((icmp_ln879_reg_2993 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln899_reg_2988 == 1'd0) & (icmp_ln444_reg_3039 == 1'd0));
end

always @ (*) begin
    ap_predicate_op274_store_state4 = ((icmp_ln887_reg_2979 == 1'd1) & (icmp_ln899_reg_2988 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln444_reg_3039 == 1'd0));
end

always @ (*) begin
    ap_predicate_op275_store_state4 = ((icmp_ln887_reg_2979 == 1'd1) & (icmp_ln899_reg_2988 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln444_reg_3039 == 1'd0));
end

always @ (*) begin
    ap_predicate_op276_store_state4 = ((icmp_ln887_reg_2979 == 1'd1) & (icmp_ln899_reg_2988 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln444_reg_3039 == 1'd0));
end

always @ (*) begin
    ap_predicate_op277_store_state4 = ((icmp_ln887_reg_2979 == 1'd1) & (icmp_ln899_reg_2988 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln444_reg_3039 == 1'd0));
end

always @ (*) begin
    ap_predicate_op278_read_state4 = ((icmp_ln887_reg_2979 == 1'd1) & (icmp_ln899_reg_2988 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln444_reg_3039 == 1'd0));
end

always @ (*) begin
    ap_predicate_op279_store_state4 = ((icmp_ln887_reg_2979 == 1'd1) & (icmp_ln899_reg_2988 == 1'd1) & (1'd1 == and_ln118_reg_3048) & (icmp_ln444_reg_3039 == 1'd0));
end

assign col_buf_0_val_0_0_fu_1377_p3 = ((or_ln457_reg_3057[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_4_fu_1361_p7);

assign col_buf_0_val_1_0_fu_1400_p3 = ((or_ln457_reg_3057[0:0] === 1'b1) ? k_buf_0_val_6_q0 : tmp_5_fu_1384_p7);

assign col_buf_0_val_2_0_fu_1423_p3 = ((or_ln457_reg_3057[0:0] === 1'b1) ? k_buf_0_val_7_q0 : tmp_6_fu_1407_p7);

assign col_buf_0_val_3_0_fu_1446_p3 = ((or_ln457_reg_3057[0:0] === 1'b1) ? k_buf_0_val_8_q0 : tmp_7_fu_1430_p7);

assign col_buf_0_val_4_0_fu_1469_p3 = ((or_ln457_reg_3057[0:0] === 1'b1) ? k_buf_0_val_9_q0 : tmp_8_fu_1453_p7);

assign i_V_fu_696_p2 = (t_V_reg_584 + 11'd1);

assign icmp_ln118_1_fu_1192_p2 = (($signed(ImagLoc_x_fu_1168_p2) < $signed(12'd1920)) ? 1'b1 : 1'b0);

assign icmp_ln118_2_fu_832_p2 = (($signed(add_ln506_1_fu_812_p2) < $signed(12'd1080)) ? 1'b1 : 1'b0);

assign icmp_ln118_fu_768_p2 = (($signed(add_ln506_fu_748_p2) < $signed(12'd1080)) ? 1'b1 : 1'b0);

assign icmp_ln144_1_fu_802_p2 = (($signed(select_ln139_1_fu_794_p3) < $signed(12'd1080)) ? 1'b1 : 1'b0);

assign icmp_ln144_2_fu_866_p2 = (($signed(select_ln139_2_fu_858_p3) < $signed(12'd1080)) ? 1'b1 : 1'b0);

assign icmp_ln144_fu_1234_p2 = (($signed(select_ln139_fu_1218_p3) < $signed(12'd1920)) ? 1'b1 : 1'b0);

assign icmp_ln443_fu_690_p2 = ((t_V_reg_584 == 11'd1083) ? 1'b1 : 1'b0);

assign icmp_ln444_fu_1140_p2 = ((t_V_2_reg_595 == 11'd1924) ? 1'b1 : 1'b0);

assign icmp_ln785_fu_2605_p2 = ((tmp_14_fu_2589_p4 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_1_fu_726_p2 = ((t_V_reg_584 == 11'd1) ? 1'b1 : 1'b0);

assign icmp_ln879_2_fu_732_p2 = ((t_V_reg_584 == 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_720_p2 = ((t_V_reg_584 == 11'd2) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_702_p2 = ((t_V_reg_584 < 11'd1080) ? 1'b1 : 1'b0);

assign icmp_ln891_fu_1162_p2 = ((tmp_37_fu_1152_p4 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln899_1_fu_738_p2 = ((t_V_reg_584 > 11'd1080) ? 1'b1 : 1'b0);

assign icmp_ln899_fu_714_p2 = ((t_V_reg_584 > 11'd2) ? 1'b1 : 1'b0);

assign j_V_fu_1146_p2 = (t_V_2_reg_595 + 11'd1);

assign k_buf_0_val_5_address0 = zext_ln835_fu_1297_p1;

assign k_buf_0_val_5_address1 = k_buf_0_val_5_addr_reg_3066;

assign k_buf_0_val_6_address0 = zext_ln835_fu_1297_p1;

assign k_buf_0_val_6_address1 = k_buf_0_val_6_addr_reg_3072;

assign k_buf_0_val_7_address0 = zext_ln835_fu_1297_p1;

assign k_buf_0_val_7_address1 = k_buf_0_val_7_addr_reg_3078;

assign k_buf_0_val_8_address0 = zext_ln835_fu_1297_p1;

assign k_buf_0_val_8_address1 = k_buf_0_val_8_addr_reg_3084;

assign k_buf_0_val_9_address0 = zext_ln835_fu_1297_p1;

assign k_buf_0_val_9_address1 = k_buf_0_val_9_addr_reg_3090;

assign mul_ln1118_10_fu_2010_p0 = zext_ln1118_12_reg_2920;

assign mul_ln1118_10_fu_2010_p1 = mul_ln1118_10_fu_2010_p10;

assign mul_ln1118_10_fu_2010_p10 = src_kernel_win_0_va_25_fu_234;

assign mul_ln1118_10_fu_2010_p2 = (mul_ln1118_10_fu_2010_p0 * mul_ln1118_10_fu_2010_p1);

assign mul_ln1118_11_fu_2023_p0 = zext_ln1118_18_reg_2925;

assign mul_ln1118_11_fu_2023_p1 = mul_ln1118_11_fu_2023_p10;

assign mul_ln1118_11_fu_2023_p10 = src_kernel_win_0_va_39_fu_1628_p3;

assign mul_ln1118_11_fu_2023_p2 = (mul_ln1118_11_fu_2023_p0 * mul_ln1118_11_fu_2023_p1);

assign mul_ln1118_12_fu_2036_p0 = sext_ln1118_10_reg_2930;

assign mul_ln1118_12_fu_2036_p1 = mul_ln1118_12_fu_2036_p10;

assign mul_ln1118_12_fu_2036_p10 = src_kernel_win_0_va_24_fu_230;

assign mul_ln1118_12_fu_2036_p2 = ($signed(mul_ln1118_12_fu_2036_p0) * $signed({{1'b0}, {mul_ln1118_12_fu_2036_p1}}));

assign mul_ln1118_13_fu_2053_p0 = sext_ln1118_11_reg_2935;

assign mul_ln1118_13_fu_2053_p1 = mul_ln1118_13_fu_2053_p10;

assign mul_ln1118_13_fu_2053_p10 = src_kernel_win_0_va_23_fu_226;

assign mul_ln1118_13_fu_2053_p2 = ($signed(mul_ln1118_13_fu_2053_p0) * $signed({{1'b0}, {mul_ln1118_13_fu_2053_p1}}));

assign mul_ln1118_14_fu_2070_p0 = zext_ln1118_24_reg_2940;

assign mul_ln1118_14_fu_2070_p1 = mul_ln1118_14_fu_2070_p10;

assign mul_ln1118_14_fu_2070_p10 = src_kernel_win_0_va_22_fu_222;

assign mul_ln1118_14_fu_2070_p2 = (mul_ln1118_14_fu_2070_p0 * mul_ln1118_14_fu_2070_p1);

assign mul_ln1118_15_fu_2101_p0 = zext_ln1118_25_reg_2945;

assign mul_ln1118_15_fu_2101_p1 = mul_ln1118_15_fu_2101_p10;

assign mul_ln1118_15_fu_2101_p10 = src_kernel_win_0_va_38_fu_1606_p3;

assign mul_ln1118_15_fu_2101_p2 = (mul_ln1118_15_fu_2101_p0 * mul_ln1118_15_fu_2101_p1);

assign mul_ln1118_16_fu_2114_p0 = sext_ln1118_12_reg_2950;

assign mul_ln1118_16_fu_2114_p1 = mul_ln1118_16_fu_2114_p10;

assign mul_ln1118_16_fu_2114_p10 = src_kernel_win_0_va_20_fu_214;

assign mul_ln1118_16_fu_2114_p2 = ($signed(mul_ln1118_16_fu_2114_p0) * $signed({{1'b0}, {mul_ln1118_16_fu_2114_p1}}));

assign mul_ln1118_17_fu_2127_p0 = sext_ln1118_13_reg_2955;

assign mul_ln1118_17_fu_2127_p1 = mul_ln1118_17_fu_2127_p10;

assign mul_ln1118_17_fu_2127_p10 = src_kernel_win_0_va_19_fu_210;

assign mul_ln1118_17_fu_2127_p2 = ($signed(mul_ln1118_17_fu_2127_p0) * $signed({{1'b0}, {mul_ln1118_17_fu_2127_p1}}));

assign mul_ln1118_18_fu_2144_p0 = zext_ln1118_26_reg_2960;

assign mul_ln1118_18_fu_2144_p1 = mul_ln1118_18_fu_2144_p10;

assign mul_ln1118_18_fu_2144_p10 = src_kernel_win_0_va_18_fu_206;

assign mul_ln1118_18_fu_2144_p2 = (mul_ln1118_18_fu_2144_p0 * mul_ln1118_18_fu_2144_p1);

assign mul_ln1118_19_fu_2157_p0 = zext_ln1118_27_reg_2965;

assign mul_ln1118_19_fu_2157_p1 = mul_ln1118_19_fu_2157_p10;

assign mul_ln1118_19_fu_2157_p10 = src_kernel_win_0_va_fu_202;

assign mul_ln1118_19_fu_2157_p2 = (mul_ln1118_19_fu_2157_p0 * mul_ln1118_19_fu_2157_p1);

assign mul_ln1118_1_fu_1785_p0 = sext_ln1118_1_reg_2875;

assign mul_ln1118_1_fu_1785_p1 = mul_ln1118_1_fu_1785_p10;

assign mul_ln1118_1_fu_1785_p10 = src_kernel_win_0_va_34_fu_270;

assign mul_ln1118_1_fu_1785_p2 = ($signed(mul_ln1118_1_fu_1785_p0) * $signed({{1'b0}, {mul_ln1118_1_fu_1785_p1}}));

assign mul_ln1118_2_fu_1812_p0 = sext_ln1118_2_reg_2880;

assign mul_ln1118_2_fu_1812_p1 = mul_ln1118_2_fu_1812_p10;

assign mul_ln1118_2_fu_1812_p10 = src_kernel_win_0_va_33_fu_266;

assign mul_ln1118_2_fu_1812_p2 = ($signed(mul_ln1118_2_fu_1812_p0) * $signed({{1'b0}, {mul_ln1118_2_fu_1812_p1}}));

assign mul_ln1118_3_fu_1829_p0 = sext_ln1118_3_reg_2885;

assign mul_ln1118_3_fu_1829_p1 = mul_ln1118_3_fu_1829_p10;

assign mul_ln1118_3_fu_1829_p10 = src_kernel_win_0_va_41_fu_1672_p3;

assign mul_ln1118_3_fu_1829_p2 = ($signed(mul_ln1118_3_fu_1829_p0) * $signed({{1'b0}, {mul_ln1118_3_fu_1829_p1}}));

assign mul_ln1118_4_fu_1846_p0 = sext_ln1118_4_reg_2890;

assign mul_ln1118_4_fu_1846_p1 = mul_ln1118_4_fu_1846_p10;

assign mul_ln1118_4_fu_1846_p10 = src_kernel_win_0_va_32_fu_262;

assign mul_ln1118_4_fu_1846_p2 = ($signed(mul_ln1118_4_fu_1846_p0) * $signed({{1'b0}, {mul_ln1118_4_fu_1846_p1}}));

assign mul_ln1118_5_fu_1921_p0 = sext_ln1118_5_reg_2895;

assign mul_ln1118_5_fu_1921_p1 = mul_ln1118_5_fu_1921_p10;

assign mul_ln1118_5_fu_1921_p10 = src_kernel_win_0_va_30_fu_254;

assign mul_ln1118_5_fu_1921_p2 = ($signed(mul_ln1118_5_fu_1921_p0) * $signed({{1'b0}, {mul_ln1118_5_fu_1921_p1}}));

assign mul_ln1118_6_fu_1938_p0 = sext_ln1118_6_reg_2900;

assign mul_ln1118_6_fu_1938_p1 = mul_ln1118_6_fu_1938_p10;

assign mul_ln1118_6_fu_1938_p10 = src_kernel_win_0_va_29_fu_250;

assign mul_ln1118_6_fu_1938_p2 = ($signed(mul_ln1118_6_fu_1938_p0) * $signed({{1'b0}, {mul_ln1118_6_fu_1938_p1}}));

assign mul_ln1118_7_fu_1961_p0 = sext_ln1118_7_reg_2905;

assign mul_ln1118_7_fu_1961_p1 = mul_ln1118_7_fu_1961_p10;

assign mul_ln1118_7_fu_1961_p10 = src_kernel_win_0_va_40_fu_1650_p3;

assign mul_ln1118_7_fu_1961_p2 = ($signed(mul_ln1118_7_fu_1961_p0) * $signed({{1'b0}, {mul_ln1118_7_fu_1961_p1}}));

assign mul_ln1118_8_fu_1974_p0 = sext_ln1118_8_reg_2910;

assign mul_ln1118_8_fu_1974_p1 = mul_ln1118_8_fu_1974_p10;

assign mul_ln1118_8_fu_1974_p10 = src_kernel_win_0_va_28_fu_246;

assign mul_ln1118_8_fu_1974_p2 = ($signed(mul_ln1118_8_fu_1974_p0) * $signed({{1'b0}, {mul_ln1118_8_fu_1974_p1}}));

assign mul_ln1118_9_fu_1991_p0 = sext_ln1118_9_reg_2915;

assign mul_ln1118_9_fu_1991_p1 = mul_ln1118_9_fu_1991_p10;

assign mul_ln1118_9_fu_1991_p10 = src_kernel_win_0_va_27_fu_242;

assign mul_ln1118_9_fu_1991_p2 = ($signed(mul_ln1118_9_fu_1991_p0) * $signed({{1'b0}, {mul_ln1118_9_fu_1991_p1}}));

assign mul_ln1118_fu_1754_p0 = sext_ln1118_reg_2870;

assign mul_ln1118_fu_1754_p1 = mul_ln1118_fu_1754_p10;

assign mul_ln1118_fu_1754_p10 = src_kernel_win_0_va_35_fu_274;

assign mul_ln1118_fu_1754_p2 = ($signed(mul_ln1118_fu_1754_p0) * $signed({{1'b0}, {mul_ln1118_fu_1754_p1}}));

assign or_ln118_fu_1264_p2 = (xor_ln118_9_fu_1258_p2 | tmp_38_fu_1178_p3);

assign or_ln340_fu_2625_p2 = (p_Result_s_fu_2572_p3 | overflow_fu_2611_p2);

assign or_ln457_fu_1292_p2 = (xor_ln457_reg_2983 | icmp_ln118_1_fu_1192_p2);

assign overflow_fu_2611_p2 = (xor_ln785_fu_2599_p2 & icmp_ln785_fu_2605_p2);

assign p_Result_s_fu_2572_p3 = p_Val2_s_fu_2566_p2[32'd15];

assign p_Val2_5_fu_2584_p2 = (add_ln703_33_reg_3135 + add_ln703_44_fu_2580_p2);

assign p_Val2_s_fu_2566_p2 = ($signed(add_ln703_15_fu_2557_p2) + $signed(sext_ln703_23_fu_2563_p1));

assign p_dst_data_stream_V_din = ((or_ln340_fu_2625_p2[0:0] === 1'b1) ? select_ln340_fu_2617_p3 : p_Val2_5_fu_2584_p2);

assign select_ln118_1_fu_1084_p3 = ((tmp_33_fu_908_p3[0:0] === 1'b1) ? select_ln139_5_fu_1076_p3 : xor_ln118_1_fu_1060_p2);

assign select_ln118_2_fu_1122_p3 = ((tmp_35_fu_934_p3[0:0] === 1'b1) ? select_ln139_6_fu_1114_p3 : add_ln118_1_fu_1098_p2);

assign select_ln118_3_fu_1246_p3 = ((and_ln118_fu_1198_p2[0:0] === 1'b1) ? sext_ln451_fu_1174_p1 : sub_ln147_fu_1240_p2);

assign select_ln118_fu_1046_p3 = ((tmp_31_fu_882_p3[0:0] === 1'b1) ? select_ln139_4_fu_1038_p3 : add_ln118_fu_1022_p2);

assign select_ln139_1_fu_794_p3 = ((tmp_28_fu_780_p3[0:0] === 1'b1) ? sub_ln142_fu_788_p2 : add_ln506_fu_748_p2);

assign select_ln139_2_fu_858_p3 = ((tmp_30_fu_844_p3[0:0] === 1'b1) ? sub_ln142_1_fu_852_p2 : add_ln506_1_fu_812_p2);

assign select_ln139_4_fu_1038_p3 = ((tmp_32_fu_890_p3[0:0] === 1'b1) ? sub_ln118_fu_1028_p2 : trunc_ln118_fu_1034_p1);

assign select_ln139_5_fu_1076_p3 = ((tmp_34_fu_916_p3[0:0] === 1'b1) ? sub_ln118_1_fu_1066_p2 : trunc_ln118_2_fu_1072_p1);

assign select_ln139_6_fu_1114_p3 = ((tmp_36_fu_942_p3[0:0] === 1'b1) ? sub_ln118_2_fu_1104_p2 : trunc_ln118_3_fu_1110_p1);

assign select_ln139_fu_1218_p3 = ((tmp_39_fu_1204_p3[0:0] === 1'b1) ? sub_ln142_2_fu_1212_p2 : ImagLoc_x_fu_1168_p2);

assign select_ln340_fu_2617_p3 = ((xor_ln785_fu_2599_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign select_ln507_1_fu_974_p3 = ((and_ln118_1_fu_774_p2[0:0] === 1'b1) ? add_ln507_fu_968_p2 : select_ln507_fu_960_p3);

assign select_ln507_2_fu_994_p3 = ((icmp_ln144_2_fu_866_p2[0:0] === 1'b1) ? trunc_ln147_1_fu_872_p1 : sub_ln507_1_fu_988_p2);

assign select_ln507_3_fu_1008_p3 = ((and_ln118_2_fu_838_p2[0:0] === 1'b1) ? add_ln507_1_fu_1002_p2 : select_ln507_2_fu_994_p3);

assign select_ln507_fu_960_p3 = ((icmp_ln144_1_fu_802_p2[0:0] === 1'b1) ? trunc_ln147_fu_808_p1 : sub_ln507_fu_954_p2);

assign sext_ln1116_1_fu_2511_p1 = $signed(add_ln703_5_reg_3100);

assign sext_ln1116_fu_1746_p1 = sub_ln1118_fu_1740_p2;

assign sext_ln1118_10_fu_654_p1 = $signed(p_kernel_val_3_V_0_read);

assign sext_ln1118_11_fu_658_p1 = $signed(p_kernel_val_3_V_1_read);

assign sext_ln1118_12_fu_670_p1 = $signed(p_kernel_val_4_V_0_read);

assign sext_ln1118_13_fu_674_p1 = $signed(p_kernel_val_4_V_1_read);

assign sext_ln1118_1_fu_610_p1 = $signed(p_kernel_val_0_V_2_read);

assign sext_ln1118_2_fu_614_p1 = $signed(p_kernel_val_0_V_3_read);

assign sext_ln1118_3_fu_618_p1 = $signed(p_kernel_val_0_V_4_read);

assign sext_ln1118_4_fu_622_p1 = $signed(p_kernel_val_1_V_0_read);

assign sext_ln1118_5_fu_626_p1 = $signed(p_kernel_val_1_V_2_read);

assign sext_ln1118_6_fu_630_p1 = $signed(p_kernel_val_1_V_3_read);

assign sext_ln1118_7_fu_634_p1 = $signed(p_kernel_val_1_V_4_read);

assign sext_ln1118_8_fu_638_p1 = $signed(p_kernel_val_2_V_0_read);

assign sext_ln1118_9_fu_642_p1 = $signed(p_kernel_val_2_V_1_read);

assign sext_ln1118_fu_606_p1 = $signed(p_kernel_val_0_V_1_read);

assign sext_ln139_1_fu_1230_p1 = select_ln139_fu_1218_p3;

assign sext_ln139_fu_1226_p1 = select_ln139_fu_1218_p3;

assign sext_ln144_fu_1284_p1 = x_fu_1276_p3;

assign sext_ln451_fu_1174_p1 = ImagLoc_x_fu_1168_p2;

assign sext_ln703_10_fu_1926_p1 = mul_ln1118_5_fu_1921_p2;

assign sext_ln703_11_fu_1943_p1 = mul_ln1118_6_fu_1938_p2;

assign sext_ln703_12_fu_2514_p1 = $signed(add_ln703_6_reg_3105);

assign sext_ln703_13_fu_2523_p1 = mul_ln1118_9_reg_3110;

assign sext_ln703_14_fu_2532_p1 = $signed(add_ln703_8_fu_2526_p2);

assign sext_ln703_15_fu_2536_p1 = $signed(add_ln703_9_reg_3115);

assign sext_ln703_16_fu_2041_p1 = mul_ln1118_12_fu_2036_p2;

assign sext_ln703_17_fu_2058_p1 = mul_ln1118_13_fu_2053_p2;

assign sext_ln703_18_fu_2132_p1 = mul_ln1118_17_fu_2127_p2;

assign sext_ln703_19_fu_2545_p1 = $signed(add_ln703_11_reg_3120);

assign sext_ln703_1_fu_1777_p1 = $signed(add_ln703_fu_1771_p2);

assign sext_ln703_20_fu_2204_p1 = $signed(add_ln703_17_fu_2198_p2);

assign sext_ln703_21_fu_2220_p1 = $signed(add_ln703_19_fu_2214_p2);

assign sext_ln703_22_fu_2230_p1 = $signed(add_ln703_20_fu_2224_p2);

assign sext_ln703_23_fu_2563_p1 = $signed(add_ln703_21_reg_3130);

assign sext_ln703_2_fu_1790_p1 = mul_ln1118_1_fu_1785_p2;

assign sext_ln703_3_fu_1804_p1 = $signed(add_ln703_1_fu_1798_p2);

assign sext_ln703_4_fu_1817_p1 = mul_ln1118_2_fu_1812_p2;

assign sext_ln703_5_fu_1834_p1 = mul_ln1118_3_fu_1829_p2;

assign sext_ln703_6_fu_1851_p1 = mul_ln1118_4_fu_1846_p2;

assign sext_ln703_7_fu_1877_p1 = sub_ln1118_1_fu_1871_p2;

assign sext_ln703_8_fu_1897_p1 = $signed(add_ln703_3_fu_1891_p2);

assign sext_ln703_9_fu_1907_p1 = $signed(add_ln703_4_fu_1901_p2);

assign sext_ln703_fu_1759_p1 = mul_ln1118_fu_1754_p2;

assign shl_ln1118_1_fu_2079_p3 = {{src_kernel_win_0_va_21_fu_218}, {3'd0}};

assign shl_ln703_fu_2091_p2 = src_kernel_win_0_va_21_fu_218 << 8'd3;

assign src_kernel_win_0_va_37_fu_1584_p3 = ((icmp_ln899_1_reg_3005[0:0] === 1'b1) ? tmp_9_fu_1569_p7 : col_buf_0_val_0_0_fu_1377_p3);

assign src_kernel_win_0_va_38_fu_1606_p3 = ((icmp_ln899_1_reg_3005[0:0] === 1'b1) ? tmp_10_fu_1591_p7 : col_buf_0_val_1_0_fu_1400_p3);

assign src_kernel_win_0_va_39_fu_1628_p3 = ((icmp_ln899_1_reg_3005[0:0] === 1'b1) ? tmp_11_fu_1613_p7 : col_buf_0_val_2_0_fu_1423_p3);

assign src_kernel_win_0_va_40_fu_1650_p3 = ((icmp_ln899_1_reg_3005[0:0] === 1'b1) ? tmp_12_fu_1635_p7 : col_buf_0_val_3_0_fu_1446_p3);

assign src_kernel_win_0_va_41_fu_1672_p3 = ((icmp_ln899_1_reg_3005[0:0] === 1'b1) ? tmp_13_fu_1657_p7 : col_buf_0_val_4_0_fu_1469_p3);

assign sub_ln1118_1_fu_1871_p2 = (12'd0 - zext_ln1118_28_fu_1867_p1);

assign sub_ln1118_fu_1740_p2 = (9'd0 - zext_ln1118_fu_1736_p1);

assign sub_ln118_1_fu_1066_p2 = ($signed(3'd4) - $signed(trunc_ln142_2_fu_924_p1));

assign sub_ln118_2_fu_1104_p2 = ($signed(3'd5) - $signed(trunc_ln142_3_fu_950_p1));

assign sub_ln118_fu_1028_p2 = (3'd3 - trunc_ln142_fu_898_p1);

assign sub_ln142_1_fu_852_p2 = (12'd2 - zext_ln443_fu_686_p1);

assign sub_ln142_2_fu_1212_p2 = (12'd2 - zext_ln444_fu_1136_p1);

assign sub_ln142_fu_788_p2 = (12'd1 - zext_ln443_fu_686_p1);

assign sub_ln147_fu_1240_p2 = ($signed(13'd3838) - $signed(sext_ln139_1_fu_1230_p1));

assign sub_ln507_1_fu_988_p2 = ($signed(3'd6) - $signed(trunc_ln147_1_fu_872_p1));

assign sub_ln507_fu_954_p2 = ($signed(3'd6) - $signed(trunc_ln147_fu_808_p1));

assign tmp_14_fu_2589_p4 = {{p_Val2_s_fu_2566_p2[15:8]}};

assign tmp_15_fu_1859_p3 = {{src_kernel_win_0_va_31_fu_258}, {3'd0}};

assign tmp_28_fu_780_p3 = add_ln506_fu_748_p2[32'd11];

assign tmp_29_fu_818_p3 = add_ln506_1_fu_812_p2[32'd11];

assign tmp_30_fu_844_p3 = add_ln506_1_fu_812_p2[32'd11];

assign tmp_31_fu_882_p3 = add_ln506_2_fu_876_p2[32'd11];

assign tmp_32_fu_890_p3 = add_ln506_2_fu_876_p2[32'd11];

assign tmp_33_fu_908_p3 = add_ln506_3_fu_902_p2[32'd11];

assign tmp_34_fu_916_p3 = add_ln506_3_fu_902_p2[32'd11];

assign tmp_35_fu_934_p3 = add_ln506_4_fu_928_p2[32'd11];

assign tmp_36_fu_942_p3 = add_ln506_4_fu_928_p2[32'd11];

assign tmp_37_fu_1152_p4 = {{t_V_2_reg_595[10:2]}};

assign tmp_38_fu_1178_p3 = ImagLoc_x_fu_1168_p2[32'd11];

assign tmp_39_fu_1204_p3 = ImagLoc_x_fu_1168_p2[32'd11];

assign tmp_fu_754_p3 = add_ln506_fu_748_p2[32'd11];

assign trunc_ln118_2_fu_1072_p1 = add_ln506_3_fu_902_p2[2:0];

assign trunc_ln118_3_fu_1110_p1 = add_ln506_4_fu_928_p2[2:0];

assign trunc_ln118_fu_1034_p1 = add_ln506_2_fu_876_p2[2:0];

assign trunc_ln142_2_fu_924_p1 = t_V_reg_584[2:0];

assign trunc_ln142_3_fu_950_p1 = t_V_reg_584[2:0];

assign trunc_ln142_fu_898_p1 = t_V_reg_584[2:0];

assign trunc_ln147_1_fu_872_p1 = select_ln139_2_fu_858_p3[2:0];

assign trunc_ln147_fu_808_p1 = select_ln139_1_fu_794_p3[2:0];

assign trunc_ln458_fu_1288_p1 = x_fu_1276_p3[2:0];

assign trunc_ln506_fu_744_p1 = t_V_reg_584[2:0];

assign trunc_ln703_10_fu_1979_p1 = mul_ln1118_8_fu_1974_p2[11:0];

assign trunc_ln703_11_fu_1983_p1 = mul_ln1118_8_fu_1974_p2[7:0];

assign trunc_ln703_12_fu_1996_p1 = mul_ln1118_9_fu_1991_p2[7:0];

assign trunc_ln703_13_fu_2015_p1 = mul_ln1118_10_fu_2010_p2[7:0];

assign trunc_ln703_14_fu_2028_p1 = mul_ln1118_11_fu_2023_p2[7:0];

assign trunc_ln703_15_fu_2045_p1 = mul_ln1118_12_fu_2036_p2[7:0];

assign trunc_ln703_16_fu_2062_p1 = mul_ln1118_13_fu_2053_p2[7:0];

assign trunc_ln703_17_fu_2075_p1 = mul_ln1118_14_fu_2070_p2[7:0];

assign trunc_ln703_18_fu_2106_p1 = mul_ln1118_15_fu_2101_p2[7:0];

assign trunc_ln703_19_fu_2119_p1 = mul_ln1118_16_fu_2114_p2[7:0];

assign trunc_ln703_1_fu_1767_p1 = mul_ln1118_fu_1754_p2[7:0];

assign trunc_ln703_20_fu_2136_p1 = mul_ln1118_17_fu_2127_p2[7:0];

assign trunc_ln703_21_fu_2149_p1 = mul_ln1118_18_fu_2144_p2[7:0];

assign trunc_ln703_22_fu_2162_p1 = mul_ln1118_19_fu_2157_p2[7:0];

assign trunc_ln703_2_fu_1794_p1 = mul_ln1118_1_fu_1785_p2[7:0];

assign trunc_ln703_3_fu_1821_p1 = mul_ln1118_2_fu_1812_p2[7:0];

assign trunc_ln703_4_fu_1838_p1 = mul_ln1118_3_fu_1829_p2[7:0];

assign trunc_ln703_5_fu_1855_p1 = mul_ln1118_4_fu_1846_p2[7:0];

assign trunc_ln703_6_fu_1881_p1 = sub_ln1118_1_fu_1871_p2[7:0];

assign trunc_ln703_7_fu_1930_p1 = mul_ln1118_5_fu_1921_p2[7:0];

assign trunc_ln703_8_fu_1947_p1 = mul_ln1118_6_fu_1938_p2[7:0];

assign trunc_ln703_9_fu_1966_p1 = mul_ln1118_7_fu_1961_p2[7:0];

assign trunc_ln703_fu_1763_p1 = sub_ln1118_fu_1740_p2[7:0];

assign x_fu_1276_p3 = ((and_ln144_fu_1270_p2[0:0] === 1'b1) ? sext_ln139_fu_1226_p1 : zext_ln118_fu_1254_p1);

assign xor_ln118_1_fu_1060_p2 = (trunc_ln506_fu_744_p1 ^ 3'd4);

assign xor_ln118_6_fu_762_p2 = (tmp_fu_754_p3 ^ 1'd1);

assign xor_ln118_7_fu_826_p2 = (tmp_29_fu_818_p3 ^ 1'd1);

assign xor_ln118_8_fu_1186_p2 = (tmp_38_fu_1178_p3 ^ 1'd1);

assign xor_ln118_9_fu_1258_p2 = (icmp_ln118_1_fu_1192_p2 ^ 1'd1);

assign xor_ln457_fu_708_p2 = (icmp_ln887_fu_702_p2 ^ 1'd1);

assign xor_ln493_1_fu_982_p2 = (select_ln507_1_fu_974_p3 ^ 3'd7);

assign xor_ln493_2_fu_1016_p2 = (select_ln507_3_fu_1008_p3 ^ 3'd7);

assign xor_ln493_3_fu_1054_p2 = (select_ln118_fu_1046_p3 ^ 3'd7);

assign xor_ln493_4_fu_1092_p2 = (select_ln118_1_fu_1084_p3 ^ 3'd7);

assign xor_ln493_5_fu_1130_p2 = (select_ln118_2_fu_1122_p3 ^ 3'd7);

assign xor_ln493_fu_1356_p2 = (trunc_ln458_reg_3052 ^ 3'd7);

assign xor_ln785_fu_2599_p2 = (p_Result_s_fu_2572_p3 ^ 1'd1);

assign zext_ln1118_12_fu_646_p1 = p_kernel_val_2_V_3_read;

assign zext_ln1118_18_fu_650_p1 = p_kernel_val_2_V_4_read;

assign zext_ln1118_24_fu_662_p1 = p_kernel_val_3_V_2_read;

assign zext_ln1118_25_fu_666_p1 = p_kernel_val_3_V_4_read;

assign zext_ln1118_26_fu_678_p1 = p_kernel_val_4_V_2_read;

assign zext_ln1118_27_fu_682_p1 = p_kernel_val_4_V_3_read;

assign zext_ln1118_28_fu_1867_p1 = tmp_15_fu_1859_p3;

assign zext_ln1118_29_fu_2087_p1 = shl_ln1118_1_fu_2079_p3;

assign zext_ln1118_fu_1736_p1 = src_kernel_win_0_va_36_fu_278;

assign zext_ln118_fu_1254_p1 = select_ln118_3_fu_1246_p3;

assign zext_ln443_fu_686_p1 = t_V_reg_584;

assign zext_ln444_fu_1136_p1 = t_V_2_reg_595;

assign zext_ln703_1_fu_2554_p1 = add_ln703_14_reg_3125;

assign zext_ln703_2_fu_2194_p1 = add_ln703_16_fu_2188_p2;

assign zext_ln703_fu_2166_p1 = src_kernel_win_0_va_37_fu_1584_p3;

assign zext_ln835_fu_1297_p1 = $unsigned(sext_ln144_fu_1284_p1);

always @ (posedge ap_clk) begin
    zext_ln1118_12_reg_2920[13:6] <= 8'b00000000;
    zext_ln1118_18_reg_2925[12:5] <= 8'b00000000;
    zext_ln1118_24_reg_2940[12:5] <= 8'b00000000;
    zext_ln1118_25_reg_2945[11:4] <= 8'b00000000;
    zext_ln1118_26_reg_2960[11:4] <= 8'b00000000;
    zext_ln1118_27_reg_2965[11:4] <= 8'b00000000;
end

endmodule //Filter2D
