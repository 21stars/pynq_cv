// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sobel_accel,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.543647,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=9,HLS_SYN_DSP=43,HLS_SYN_FF=5255,HLS_SYN_LUT=13546,HLS_VERSION=2019_1}" *)

module sobel_accel (
        s_axi_CONTROL_BUS_AWVALID,
        s_axi_CONTROL_BUS_AWREADY,
        s_axi_CONTROL_BUS_AWADDR,
        s_axi_CONTROL_BUS_WVALID,
        s_axi_CONTROL_BUS_WREADY,
        s_axi_CONTROL_BUS_WDATA,
        s_axi_CONTROL_BUS_WSTRB,
        s_axi_CONTROL_BUS_ARVALID,
        s_axi_CONTROL_BUS_ARREADY,
        s_axi_CONTROL_BUS_ARADDR,
        s_axi_CONTROL_BUS_RVALID,
        s_axi_CONTROL_BUS_RREADY,
        s_axi_CONTROL_BUS_RDATA,
        s_axi_CONTROL_BUS_RRESP,
        s_axi_CONTROL_BUS_BVALID,
        s_axi_CONTROL_BUS_BREADY,
        s_axi_CONTROL_BUS_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        INPUT_STREAM_TDATA,
        INPUT_STREAM_TKEEP,
        INPUT_STREAM_TSTRB,
        INPUT_STREAM_TUSER,
        INPUT_STREAM_TLAST,
        INPUT_STREAM_TID,
        INPUT_STREAM_TDEST,
        OUTPUT_STREAM_TDATA,
        OUTPUT_STREAM_TKEEP,
        OUTPUT_STREAM_TSTRB,
        OUTPUT_STREAM_TUSER,
        OUTPUT_STREAM_TLAST,
        OUTPUT_STREAM_TID,
        OUTPUT_STREAM_TDEST,
        INPUT_STREAM_TVALID,
        INPUT_STREAM_TREADY,
        OUTPUT_STREAM_TVALID,
        OUTPUT_STREAM_TREADY
);

parameter    C_S_AXI_CONTROL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_BUS_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;

parameter C_S_AXI_CONTROL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_CONTROL_BUS_AWVALID;
output   s_axi_CONTROL_BUS_AWREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1:0] s_axi_CONTROL_BUS_AWADDR;
input   s_axi_CONTROL_BUS_WVALID;
output   s_axi_CONTROL_BUS_WREADY;
input  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1:0] s_axi_CONTROL_BUS_WDATA;
input  [C_S_AXI_CONTROL_BUS_WSTRB_WIDTH - 1:0] s_axi_CONTROL_BUS_WSTRB;
input   s_axi_CONTROL_BUS_ARVALID;
output   s_axi_CONTROL_BUS_ARREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1:0] s_axi_CONTROL_BUS_ARADDR;
output   s_axi_CONTROL_BUS_RVALID;
input   s_axi_CONTROL_BUS_RREADY;
output  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1:0] s_axi_CONTROL_BUS_RDATA;
output  [1:0] s_axi_CONTROL_BUS_RRESP;
output   s_axi_CONTROL_BUS_BVALID;
input   s_axi_CONTROL_BUS_BREADY;
output  [1:0] s_axi_CONTROL_BUS_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input  [23:0] INPUT_STREAM_TDATA;
input  [2:0] INPUT_STREAM_TKEEP;
input  [2:0] INPUT_STREAM_TSTRB;
input  [0:0] INPUT_STREAM_TUSER;
input  [0:0] INPUT_STREAM_TLAST;
input  [0:0] INPUT_STREAM_TID;
input  [0:0] INPUT_STREAM_TDEST;
output  [23:0] OUTPUT_STREAM_TDATA;
output  [2:0] OUTPUT_STREAM_TKEEP;
output  [2:0] OUTPUT_STREAM_TSTRB;
output  [0:0] OUTPUT_STREAM_TUSER;
output  [0:0] OUTPUT_STREAM_TLAST;
output  [0:0] OUTPUT_STREAM_TID;
output  [0:0] OUTPUT_STREAM_TDEST;
input   INPUT_STREAM_TVALID;
output   INPUT_STREAM_TREADY;
output   OUTPUT_STREAM_TVALID;
input   OUTPUT_STREAM_TREADY;

 reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire    Block_proc_U0_ap_start;
wire    Block_proc_U0_ap_done;
wire    Block_proc_U0_ap_continue;
wire    Block_proc_U0_ap_idle;
wire    Block_proc_U0_ap_ready;
wire    Block_proc_U0_start_out;
wire    Block_proc_U0_start_write;
wire   [11:0] Block_proc_U0_src_rows_V_out_din;
wire    Block_proc_U0_src_rows_V_out_write;
wire   [11:0] Block_proc_U0_src_cols_V_out_din;
wire    Block_proc_U0_src_cols_V_out_write;
wire   [11:0] Block_proc_U0_sobel_g_rows_V_out_din;
wire    Block_proc_U0_sobel_g_rows_V_out_write;
wire   [11:0] Block_proc_U0_sobel_g_cols_V_out_din;
wire    Block_proc_U0_sobel_g_cols_V_out_write;
wire    AXIvideo2Mat_U0_ap_start;
wire    AXIvideo2Mat_U0_ap_done;
wire    AXIvideo2Mat_U0_ap_continue;
wire    AXIvideo2Mat_U0_ap_idle;
wire    AXIvideo2Mat_U0_ap_ready;
wire    AXIvideo2Mat_U0_start_out;
wire    AXIvideo2Mat_U0_start_write;
wire    AXIvideo2Mat_U0_INPUT_STREAM_TREADY;
wire    AXIvideo2Mat_U0_img_rows_V_read;
wire    AXIvideo2Mat_U0_img_cols_V_read;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_0_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_0_V_write;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_1_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_1_V_write;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_2_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_2_V_write;
wire   [11:0] AXIvideo2Mat_U0_img_rows_V_out_din;
wire    AXIvideo2Mat_U0_img_rows_V_out_write;
wire   [11:0] AXIvideo2Mat_U0_img_cols_V_out_din;
wire    AXIvideo2Mat_U0_img_cols_V_out_write;
wire    CvtColor_1_U0_ap_start;
wire    CvtColor_1_U0_ap_done;
wire    CvtColor_1_U0_ap_continue;
wire    CvtColor_1_U0_ap_idle;
wire    CvtColor_1_U0_ap_ready;
wire    CvtColor_1_U0_start_out;
wire    CvtColor_1_U0_start_write;
wire    CvtColor_1_U0_p_src_rows_V_read;
wire    CvtColor_1_U0_p_src_cols_V_read;
wire    CvtColor_1_U0_p_src_data_stream_0_V_read;
wire    CvtColor_1_U0_p_src_data_stream_1_V_read;
wire    CvtColor_1_U0_p_src_data_stream_2_V_read;
wire   [7:0] CvtColor_1_U0_p_dst_data_stream_V_din;
wire    CvtColor_1_U0_p_dst_data_stream_V_write;
wire    GaussianBlur_U0_ap_start;
wire    GaussianBlur_U0_ap_done;
wire    GaussianBlur_U0_ap_continue;
wire    GaussianBlur_U0_ap_idle;
wire    GaussianBlur_U0_ap_ready;
wire    GaussianBlur_U0_start_out;
wire    GaussianBlur_U0_start_write;
wire    GaussianBlur_U0_p_src_data_stream_V_read;
wire   [7:0] GaussianBlur_U0_p_dst_data_stream_V_din;
wire    GaussianBlur_U0_p_dst_data_stream_V_write;
wire    Duplicate_U0_ap_start;
wire    Duplicate_U0_start_full_n;
wire    Duplicate_U0_ap_done;
wire    Duplicate_U0_ap_continue;
wire    Duplicate_U0_ap_idle;
wire    Duplicate_U0_ap_ready;
wire    Duplicate_U0_start_out;
wire    Duplicate_U0_start_write;
wire    Duplicate_U0_src_data_stream_V_read;
wire   [7:0] Duplicate_U0_dst1_data_stream_V_din;
wire    Duplicate_U0_dst1_data_stream_V_write;
wire   [7:0] Duplicate_U0_dst2_data_stream_V_din;
wire    Duplicate_U0_dst2_data_stream_V_write;
wire    Sobel_U0_ap_start;
wire    Sobel_U0_ap_done;
wire    Sobel_U0_ap_continue;
wire    Sobel_U0_ap_idle;
wire    Sobel_U0_ap_ready;
wire    Sobel_U0_start_out;
wire    Sobel_U0_start_write;
wire    Sobel_U0_p_src_data_stream_V_read;
wire   [15:0] Sobel_U0_p_dst_data_stream_V_din;
wire    Sobel_U0_p_dst_data_stream_V_write;
wire    Sobel_1_U0_ap_start;
wire    Sobel_1_U0_ap_done;
wire    Sobel_1_U0_ap_continue;
wire    Sobel_1_U0_ap_idle;
wire    Sobel_1_U0_ap_ready;
wire    Sobel_1_U0_start_out;
wire    Sobel_1_U0_start_write;
wire    Sobel_1_U0_p_src_data_stream_V_read;
wire   [15:0] Sobel_1_U0_p_dst_data_stream_V_din;
wire    Sobel_1_U0_p_dst_data_stream_V_write;
wire    ConvertScaleAbs273_U0_ap_start;
wire    ConvertScaleAbs273_U0_ap_done;
wire    ConvertScaleAbs273_U0_ap_continue;
wire    ConvertScaleAbs273_U0_ap_idle;
wire    ConvertScaleAbs273_U0_ap_ready;
wire    ConvertScaleAbs273_U0_p_src_data_stream_V_read;
wire   [7:0] ConvertScaleAbs273_U0_p_dst_data_stream_V_din;
wire    ConvertScaleAbs273_U0_p_dst_data_stream_V_write;
wire    ConvertScaleAbs_U0_ap_start;
wire    ConvertScaleAbs_U0_ap_done;
wire    ConvertScaleAbs_U0_ap_continue;
wire    ConvertScaleAbs_U0_ap_idle;
wire    ConvertScaleAbs_U0_ap_ready;
wire    ConvertScaleAbs_U0_p_src_data_stream_V_read;
wire   [7:0] ConvertScaleAbs_U0_p_dst_data_stream_V_din;
wire    ConvertScaleAbs_U0_p_dst_data_stream_V_write;
wire    AddWeighted_U0_ap_start;
wire    AddWeighted_U0_ap_done;
wire    AddWeighted_U0_ap_continue;
wire    AddWeighted_U0_ap_idle;
wire    AddWeighted_U0_ap_ready;
wire    AddWeighted_U0_start_out;
wire    AddWeighted_U0_start_write;
wire    AddWeighted_U0_src1_data_stream_V_read;
wire    AddWeighted_U0_src2_data_stream_V_read;
wire    AddWeighted_U0_dst_rows_V_read;
wire    AddWeighted_U0_dst_cols_V_read;
wire   [7:0] AddWeighted_U0_dst_data_stream_V_din;
wire    AddWeighted_U0_dst_data_stream_V_write;
wire   [11:0] AddWeighted_U0_dst_rows_V_out_din;
wire    AddWeighted_U0_dst_rows_V_out_write;
wire   [11:0] AddWeighted_U0_dst_cols_V_out_din;
wire    AddWeighted_U0_dst_cols_V_out_write;
wire    CvtColor_U0_ap_start;
wire    CvtColor_U0_ap_done;
wire    CvtColor_U0_ap_continue;
wire    CvtColor_U0_ap_idle;
wire    CvtColor_U0_ap_ready;
wire    CvtColor_U0_start_out;
wire    CvtColor_U0_start_write;
wire    CvtColor_U0_p_src_rows_V_read;
wire    CvtColor_U0_p_src_cols_V_read;
wire    CvtColor_U0_p_src_data_stream_V_read;
wire   [7:0] CvtColor_U0_p_dst_data_stream_0_V_din;
wire    CvtColor_U0_p_dst_data_stream_0_V_write;
wire   [7:0] CvtColor_U0_p_dst_data_stream_1_V_din;
wire    CvtColor_U0_p_dst_data_stream_1_V_write;
wire   [7:0] CvtColor_U0_p_dst_data_stream_2_V_din;
wire    CvtColor_U0_p_dst_data_stream_2_V_write;
wire    Mat2AXIvideo_U0_ap_start;
wire    Mat2AXIvideo_U0_ap_done;
wire    Mat2AXIvideo_U0_ap_continue;
wire    Mat2AXIvideo_U0_ap_idle;
wire    Mat2AXIvideo_U0_ap_ready;
wire    Mat2AXIvideo_U0_img_data_stream_0_V_read;
wire    Mat2AXIvideo_U0_img_data_stream_1_V_read;
wire    Mat2AXIvideo_U0_img_data_stream_2_V_read;
wire   [23:0] Mat2AXIvideo_U0_OUTPUT_STREAM_TDATA;
wire    Mat2AXIvideo_U0_OUTPUT_STREAM_TVALID;
wire   [2:0] Mat2AXIvideo_U0_OUTPUT_STREAM_TKEEP;
wire   [2:0] Mat2AXIvideo_U0_OUTPUT_STREAM_TSTRB;
wire   [0:0] Mat2AXIvideo_U0_OUTPUT_STREAM_TUSER;
wire   [0:0] Mat2AXIvideo_U0_OUTPUT_STREAM_TLAST;
wire   [0:0] Mat2AXIvideo_U0_OUTPUT_STREAM_TID;
wire   [0:0] Mat2AXIvideo_U0_OUTPUT_STREAM_TDEST;
wire    ap_sync_continue;
wire    src_rows_V_c_full_n;
wire   [11:0] src_rows_V_c_dout;
wire    src_rows_V_c_empty_n;
wire    src_cols_V_c_full_n;
wire   [11:0] src_cols_V_c_dout;
wire    src_cols_V_c_empty_n;
wire    sobel_g_rows_V_c_full_n;
wire   [11:0] sobel_g_rows_V_c_dout;
wire    sobel_g_rows_V_c_empty_n;
wire    sobel_g_cols_V_c_full_n;
wire   [11:0] sobel_g_cols_V_c_dout;
wire    sobel_g_cols_V_c_empty_n;
wire    src_data_stream_0_V_full_n;
wire   [7:0] src_data_stream_0_V_dout;
wire    src_data_stream_0_V_empty_n;
wire    src_data_stream_1_V_full_n;
wire   [7:0] src_data_stream_1_V_dout;
wire    src_data_stream_1_V_empty_n;
wire    src_data_stream_2_V_full_n;
wire   [7:0] src_data_stream_2_V_dout;
wire    src_data_stream_2_V_empty_n;
wire    src_rows_V_c26_full_n;
wire   [11:0] src_rows_V_c26_dout;
wire    src_rows_V_c26_empty_n;
wire    src_cols_V_c27_full_n;
wire   [11:0] src_cols_V_c27_dout;
wire    src_cols_V_c27_empty_n;
wire    gray_data_stream_0_s_full_n;
wire   [7:0] gray_data_stream_0_s_dout;
wire    gray_data_stream_0_s_empty_n;
wire    blurred_data_stream_s_full_n;
wire   [7:0] blurred_data_stream_s_dout;
wire    blurred_data_stream_s_empty_n;
wire    gray1_data_stream_0_full_n;
wire   [7:0] gray1_data_stream_0_dout;
wire    gray1_data_stream_0_empty_n;
wire    gray2_data_stream_0_full_n;
wire   [7:0] gray2_data_stream_0_dout;
wire    gray2_data_stream_0_empty_n;
wire    sobel_x64_data_strea_full_n;
wire   [15:0] sobel_x64_data_strea_dout;
wire    sobel_x64_data_strea_empty_n;
wire    sobel_y64_data_strea_full_n;
wire   [15:0] sobel_y64_data_strea_dout;
wire    sobel_y64_data_strea_empty_n;
wire    sobel_x_data_stream_s_full_n;
wire   [7:0] sobel_x_data_stream_s_dout;
wire    sobel_x_data_stream_s_empty_n;
wire    sobel_y_data_stream_s_full_n;
wire   [7:0] sobel_y_data_stream_s_dout;
wire    sobel_y_data_stream_s_empty_n;
wire    sobel_g_data_stream_s_full_n;
wire   [7:0] sobel_g_data_stream_s_dout;
wire    sobel_g_data_stream_s_empty_n;
wire    sobel_g_rows_V_c28_full_n;
wire   [11:0] sobel_g_rows_V_c28_dout;
wire    sobel_g_rows_V_c28_empty_n;
wire    sobel_g_cols_V_c29_full_n;
wire   [11:0] sobel_g_cols_V_c29_dout;
wire    sobel_g_cols_V_c29_empty_n;
wire    dst_data_stream_0_V_full_n;
wire   [7:0] dst_data_stream_0_V_dout;
wire    dst_data_stream_0_V_empty_n;
wire    dst_data_stream_1_V_full_n;
wire   [7:0] dst_data_stream_1_V_dout;
wire    dst_data_stream_1_V_empty_n;
wire    dst_data_stream_2_V_full_n;
wire   [7:0] dst_data_stream_2_V_dout;
wire    dst_data_stream_2_V_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_Block_proc_U0_ap_ready;
wire    ap_sync_Block_proc_U0_ap_ready;
reg   [1:0] Block_proc_U0_ap_ready_count;
reg    ap_sync_reg_AXIvideo2Mat_U0_ap_ready;
wire    ap_sync_AXIvideo2Mat_U0_ap_ready;
reg   [1:0] AXIvideo2Mat_U0_ap_ready_count;
wire   [0:0] start_for_AddWeighted_U0_din;
wire    start_for_AddWeighted_U0_full_n;
wire   [0:0] start_for_AddWeighted_U0_dout;
wire    start_for_AddWeighted_U0_empty_n;
wire   [0:0] start_for_CvtColor_1_U0_din;
wire    start_for_CvtColor_1_U0_full_n;
wire   [0:0] start_for_CvtColor_1_U0_dout;
wire    start_for_CvtColor_1_U0_empty_n;
wire   [0:0] start_for_GaussianBlur_U0_din;
wire    start_for_GaussianBlur_U0_full_n;
wire   [0:0] start_for_GaussianBlur_U0_dout;
wire    start_for_GaussianBlur_U0_empty_n;
wire   [0:0] start_for_Duplicate_U0_din;
wire    start_for_Duplicate_U0_full_n;
wire   [0:0] start_for_Duplicate_U0_dout;
wire    start_for_Duplicate_U0_empty_n;
wire   [0:0] start_for_Sobel_U0_din;
wire    start_for_Sobel_U0_full_n;
wire   [0:0] start_for_Sobel_U0_dout;
wire    start_for_Sobel_U0_empty_n;
wire   [0:0] start_for_Sobel_1_U0_din;
wire    start_for_Sobel_1_U0_full_n;
wire   [0:0] start_for_Sobel_1_U0_dout;
wire    start_for_Sobel_1_U0_empty_n;
wire   [0:0] start_for_ConvertScaleAbs273_U0_din;
wire    start_for_ConvertScaleAbs273_U0_full_n;
wire   [0:0] start_for_ConvertScaleAbs273_U0_dout;
wire    start_for_ConvertScaleAbs273_U0_empty_n;
wire   [0:0] start_for_ConvertScaleAbs_U0_din;
wire    start_for_ConvertScaleAbs_U0_full_n;
wire   [0:0] start_for_ConvertScaleAbs_U0_dout;
wire    start_for_ConvertScaleAbs_U0_empty_n;
wire    ConvertScaleAbs273_U0_start_full_n;
wire    ConvertScaleAbs273_U0_start_write;
wire    ConvertScaleAbs_U0_start_full_n;
wire    ConvertScaleAbs_U0_start_write;
wire   [0:0] start_for_CvtColor_U0_din;
wire    start_for_CvtColor_U0_full_n;
wire   [0:0] start_for_CvtColor_U0_dout;
wire    start_for_CvtColor_U0_empty_n;
wire   [0:0] start_for_Mat2AXIvideo_U0_din;
wire    start_for_Mat2AXIvideo_U0_full_n;
wire   [0:0] start_for_Mat2AXIvideo_U0_dout;
wire    start_for_Mat2AXIvideo_U0_empty_n;
wire    Mat2AXIvideo_U0_start_full_n;
wire    Mat2AXIvideo_U0_start_write;

// power-on initialization
initial begin
#0 ap_sync_reg_Block_proc_U0_ap_ready = 1'b0;
#0 Block_proc_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_AXIvideo2Mat_U0_ap_ready = 1'b0;
#0 AXIvideo2Mat_U0_ap_ready_count = 2'd0;
end

sobel_accel_CONTROL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_BUS_DATA_WIDTH ))
sobel_accel_CONTROL_BUS_s_axi_U(
    .AWVALID(s_axi_CONTROL_BUS_AWVALID),
    .AWREADY(s_axi_CONTROL_BUS_AWREADY),
    .AWADDR(s_axi_CONTROL_BUS_AWADDR),
    .WVALID(s_axi_CONTROL_BUS_WVALID),
    .WREADY(s_axi_CONTROL_BUS_WREADY),
    .WDATA(s_axi_CONTROL_BUS_WDATA),
    .WSTRB(s_axi_CONTROL_BUS_WSTRB),
    .ARVALID(s_axi_CONTROL_BUS_ARVALID),
    .ARREADY(s_axi_CONTROL_BUS_ARREADY),
    .ARADDR(s_axi_CONTROL_BUS_ARADDR),
    .RVALID(s_axi_CONTROL_BUS_RVALID),
    .RREADY(s_axi_CONTROL_BUS_RREADY),
    .RDATA(s_axi_CONTROL_BUS_RDATA),
    .RRESP(s_axi_CONTROL_BUS_RRESP),
    .BVALID(s_axi_CONTROL_BUS_BVALID),
    .BREADY(s_axi_CONTROL_BUS_BREADY),
    .BRESP(s_axi_CONTROL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

Block_proc Block_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_proc_U0_ap_start),
    .start_full_n(start_for_AddWeighted_U0_full_n),
    .ap_done(Block_proc_U0_ap_done),
    .ap_continue(Block_proc_U0_ap_continue),
    .ap_idle(Block_proc_U0_ap_idle),
    .ap_ready(Block_proc_U0_ap_ready),
    .start_out(Block_proc_U0_start_out),
    .start_write(Block_proc_U0_start_write),
    .src_rows_V_out_din(Block_proc_U0_src_rows_V_out_din),
    .src_rows_V_out_full_n(src_rows_V_c_full_n),
    .src_rows_V_out_write(Block_proc_U0_src_rows_V_out_write),
    .src_cols_V_out_din(Block_proc_U0_src_cols_V_out_din),
    .src_cols_V_out_full_n(src_cols_V_c_full_n),
    .src_cols_V_out_write(Block_proc_U0_src_cols_V_out_write),
    .sobel_g_rows_V_out_din(Block_proc_U0_sobel_g_rows_V_out_din),
    .sobel_g_rows_V_out_full_n(sobel_g_rows_V_c_full_n),
    .sobel_g_rows_V_out_write(Block_proc_U0_sobel_g_rows_V_out_write),
    .sobel_g_cols_V_out_din(Block_proc_U0_sobel_g_cols_V_out_din),
    .sobel_g_cols_V_out_full_n(sobel_g_cols_V_c_full_n),
    .sobel_g_cols_V_out_write(Block_proc_U0_sobel_g_cols_V_out_write)
);

AXIvideo2Mat AXIvideo2Mat_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(AXIvideo2Mat_U0_ap_start),
    .start_full_n(start_for_CvtColor_1_U0_full_n),
    .ap_done(AXIvideo2Mat_U0_ap_done),
    .ap_continue(AXIvideo2Mat_U0_ap_continue),
    .ap_idle(AXIvideo2Mat_U0_ap_idle),
    .ap_ready(AXIvideo2Mat_U0_ap_ready),
    .start_out(AXIvideo2Mat_U0_start_out),
    .start_write(AXIvideo2Mat_U0_start_write),
    .INPUT_STREAM_TDATA(INPUT_STREAM_TDATA),
    .INPUT_STREAM_TVALID(INPUT_STREAM_TVALID),
    .INPUT_STREAM_TREADY(AXIvideo2Mat_U0_INPUT_STREAM_TREADY),
    .INPUT_STREAM_TKEEP(INPUT_STREAM_TKEEP),
    .INPUT_STREAM_TSTRB(INPUT_STREAM_TSTRB),
    .INPUT_STREAM_TUSER(INPUT_STREAM_TUSER),
    .INPUT_STREAM_TLAST(INPUT_STREAM_TLAST),
    .INPUT_STREAM_TID(INPUT_STREAM_TID),
    .INPUT_STREAM_TDEST(INPUT_STREAM_TDEST),
    .img_rows_V_dout(src_rows_V_c_dout),
    .img_rows_V_empty_n(src_rows_V_c_empty_n),
    .img_rows_V_read(AXIvideo2Mat_U0_img_rows_V_read),
    .img_cols_V_dout(src_cols_V_c_dout),
    .img_cols_V_empty_n(src_cols_V_c_empty_n),
    .img_cols_V_read(AXIvideo2Mat_U0_img_cols_V_read),
    .img_data_stream_0_V_din(AXIvideo2Mat_U0_img_data_stream_0_V_din),
    .img_data_stream_0_V_full_n(src_data_stream_0_V_full_n),
    .img_data_stream_0_V_write(AXIvideo2Mat_U0_img_data_stream_0_V_write),
    .img_data_stream_1_V_din(AXIvideo2Mat_U0_img_data_stream_1_V_din),
    .img_data_stream_1_V_full_n(src_data_stream_1_V_full_n),
    .img_data_stream_1_V_write(AXIvideo2Mat_U0_img_data_stream_1_V_write),
    .img_data_stream_2_V_din(AXIvideo2Mat_U0_img_data_stream_2_V_din),
    .img_data_stream_2_V_full_n(src_data_stream_2_V_full_n),
    .img_data_stream_2_V_write(AXIvideo2Mat_U0_img_data_stream_2_V_write),
    .img_rows_V_out_din(AXIvideo2Mat_U0_img_rows_V_out_din),
    .img_rows_V_out_full_n(src_rows_V_c26_full_n),
    .img_rows_V_out_write(AXIvideo2Mat_U0_img_rows_V_out_write),
    .img_cols_V_out_din(AXIvideo2Mat_U0_img_cols_V_out_din),
    .img_cols_V_out_full_n(src_cols_V_c27_full_n),
    .img_cols_V_out_write(AXIvideo2Mat_U0_img_cols_V_out_write)
);

CvtColor_1 CvtColor_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(CvtColor_1_U0_ap_start),
    .start_full_n(start_for_GaussianBlur_U0_full_n),
    .ap_done(CvtColor_1_U0_ap_done),
    .ap_continue(CvtColor_1_U0_ap_continue),
    .ap_idle(CvtColor_1_U0_ap_idle),
    .ap_ready(CvtColor_1_U0_ap_ready),
    .start_out(CvtColor_1_U0_start_out),
    .start_write(CvtColor_1_U0_start_write),
    .p_src_rows_V_dout(src_rows_V_c26_dout),
    .p_src_rows_V_empty_n(src_rows_V_c26_empty_n),
    .p_src_rows_V_read(CvtColor_1_U0_p_src_rows_V_read),
    .p_src_cols_V_dout(src_cols_V_c27_dout),
    .p_src_cols_V_empty_n(src_cols_V_c27_empty_n),
    .p_src_cols_V_read(CvtColor_1_U0_p_src_cols_V_read),
    .p_src_data_stream_0_V_dout(src_data_stream_0_V_dout),
    .p_src_data_stream_0_V_empty_n(src_data_stream_0_V_empty_n),
    .p_src_data_stream_0_V_read(CvtColor_1_U0_p_src_data_stream_0_V_read),
    .p_src_data_stream_1_V_dout(src_data_stream_1_V_dout),
    .p_src_data_stream_1_V_empty_n(src_data_stream_1_V_empty_n),
    .p_src_data_stream_1_V_read(CvtColor_1_U0_p_src_data_stream_1_V_read),
    .p_src_data_stream_2_V_dout(src_data_stream_2_V_dout),
    .p_src_data_stream_2_V_empty_n(src_data_stream_2_V_empty_n),
    .p_src_data_stream_2_V_read(CvtColor_1_U0_p_src_data_stream_2_V_read),
    .p_dst_data_stream_V_din(CvtColor_1_U0_p_dst_data_stream_V_din),
    .p_dst_data_stream_V_full_n(gray_data_stream_0_s_full_n),
    .p_dst_data_stream_V_write(CvtColor_1_U0_p_dst_data_stream_V_write)
);

GaussianBlur GaussianBlur_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(GaussianBlur_U0_ap_start),
    .start_full_n(start_for_Duplicate_U0_full_n),
    .ap_done(GaussianBlur_U0_ap_done),
    .ap_continue(GaussianBlur_U0_ap_continue),
    .ap_idle(GaussianBlur_U0_ap_idle),
    .ap_ready(GaussianBlur_U0_ap_ready),
    .start_out(GaussianBlur_U0_start_out),
    .start_write(GaussianBlur_U0_start_write),
    .p_src_data_stream_V_dout(gray_data_stream_0_s_dout),
    .p_src_data_stream_V_empty_n(gray_data_stream_0_s_empty_n),
    .p_src_data_stream_V_read(GaussianBlur_U0_p_src_data_stream_V_read),
    .p_dst_data_stream_V_din(GaussianBlur_U0_p_dst_data_stream_V_din),
    .p_dst_data_stream_V_full_n(blurred_data_stream_s_full_n),
    .p_dst_data_stream_V_write(GaussianBlur_U0_p_dst_data_stream_V_write)
);

Duplicate Duplicate_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Duplicate_U0_ap_start),
    .start_full_n(Duplicate_U0_start_full_n),
    .ap_done(Duplicate_U0_ap_done),
    .ap_continue(Duplicate_U0_ap_continue),
    .ap_idle(Duplicate_U0_ap_idle),
    .ap_ready(Duplicate_U0_ap_ready),
    .start_out(Duplicate_U0_start_out),
    .start_write(Duplicate_U0_start_write),
    .src_data_stream_V_dout(blurred_data_stream_s_dout),
    .src_data_stream_V_empty_n(blurred_data_stream_s_empty_n),
    .src_data_stream_V_read(Duplicate_U0_src_data_stream_V_read),
    .dst1_data_stream_V_din(Duplicate_U0_dst1_data_stream_V_din),
    .dst1_data_stream_V_full_n(gray1_data_stream_0_full_n),
    .dst1_data_stream_V_write(Duplicate_U0_dst1_data_stream_V_write),
    .dst2_data_stream_V_din(Duplicate_U0_dst2_data_stream_V_din),
    .dst2_data_stream_V_full_n(gray2_data_stream_0_full_n),
    .dst2_data_stream_V_write(Duplicate_U0_dst2_data_stream_V_write)
);

Sobel Sobel_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Sobel_U0_ap_start),
    .start_full_n(start_for_ConvertScaleAbs273_U0_full_n),
    .ap_done(Sobel_U0_ap_done),
    .ap_continue(Sobel_U0_ap_continue),
    .ap_idle(Sobel_U0_ap_idle),
    .ap_ready(Sobel_U0_ap_ready),
    .start_out(Sobel_U0_start_out),
    .start_write(Sobel_U0_start_write),
    .p_src_data_stream_V_dout(gray1_data_stream_0_dout),
    .p_src_data_stream_V_empty_n(gray1_data_stream_0_empty_n),
    .p_src_data_stream_V_read(Sobel_U0_p_src_data_stream_V_read),
    .p_dst_data_stream_V_din(Sobel_U0_p_dst_data_stream_V_din),
    .p_dst_data_stream_V_full_n(sobel_x64_data_strea_full_n),
    .p_dst_data_stream_V_write(Sobel_U0_p_dst_data_stream_V_write)
);

Sobel_1 Sobel_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Sobel_1_U0_ap_start),
    .start_full_n(start_for_ConvertScaleAbs_U0_full_n),
    .ap_done(Sobel_1_U0_ap_done),
    .ap_continue(Sobel_1_U0_ap_continue),
    .ap_idle(Sobel_1_U0_ap_idle),
    .ap_ready(Sobel_1_U0_ap_ready),
    .start_out(Sobel_1_U0_start_out),
    .start_write(Sobel_1_U0_start_write),
    .p_src_data_stream_V_dout(gray2_data_stream_0_dout),
    .p_src_data_stream_V_empty_n(gray2_data_stream_0_empty_n),
    .p_src_data_stream_V_read(Sobel_1_U0_p_src_data_stream_V_read),
    .p_dst_data_stream_V_din(Sobel_1_U0_p_dst_data_stream_V_din),
    .p_dst_data_stream_V_full_n(sobel_y64_data_strea_full_n),
    .p_dst_data_stream_V_write(Sobel_1_U0_p_dst_data_stream_V_write)
);

ConvertScaleAbs273 ConvertScaleAbs273_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ConvertScaleAbs273_U0_ap_start),
    .ap_done(ConvertScaleAbs273_U0_ap_done),
    .ap_continue(ConvertScaleAbs273_U0_ap_continue),
    .ap_idle(ConvertScaleAbs273_U0_ap_idle),
    .ap_ready(ConvertScaleAbs273_U0_ap_ready),
    .p_src_data_stream_V_dout(sobel_x64_data_strea_dout),
    .p_src_data_stream_V_empty_n(sobel_x64_data_strea_empty_n),
    .p_src_data_stream_V_read(ConvertScaleAbs273_U0_p_src_data_stream_V_read),
    .p_dst_data_stream_V_din(ConvertScaleAbs273_U0_p_dst_data_stream_V_din),
    .p_dst_data_stream_V_full_n(sobel_x_data_stream_s_full_n),
    .p_dst_data_stream_V_write(ConvertScaleAbs273_U0_p_dst_data_stream_V_write)
);

ConvertScaleAbs ConvertScaleAbs_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ConvertScaleAbs_U0_ap_start),
    .ap_done(ConvertScaleAbs_U0_ap_done),
    .ap_continue(ConvertScaleAbs_U0_ap_continue),
    .ap_idle(ConvertScaleAbs_U0_ap_idle),
    .ap_ready(ConvertScaleAbs_U0_ap_ready),
    .p_src_data_stream_V_dout(sobel_y64_data_strea_dout),
    .p_src_data_stream_V_empty_n(sobel_y64_data_strea_empty_n),
    .p_src_data_stream_V_read(ConvertScaleAbs_U0_p_src_data_stream_V_read),
    .p_dst_data_stream_V_din(ConvertScaleAbs_U0_p_dst_data_stream_V_din),
    .p_dst_data_stream_V_full_n(sobel_y_data_stream_s_full_n),
    .p_dst_data_stream_V_write(ConvertScaleAbs_U0_p_dst_data_stream_V_write)
);

AddWeighted AddWeighted_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(AddWeighted_U0_ap_start),
    .start_full_n(start_for_CvtColor_U0_full_n),
    .ap_done(AddWeighted_U0_ap_done),
    .ap_continue(AddWeighted_U0_ap_continue),
    .ap_idle(AddWeighted_U0_ap_idle),
    .ap_ready(AddWeighted_U0_ap_ready),
    .start_out(AddWeighted_U0_start_out),
    .start_write(AddWeighted_U0_start_write),
    .src1_data_stream_V_dout(sobel_x_data_stream_s_dout),
    .src1_data_stream_V_empty_n(sobel_x_data_stream_s_empty_n),
    .src1_data_stream_V_read(AddWeighted_U0_src1_data_stream_V_read),
    .src2_data_stream_V_dout(sobel_y_data_stream_s_dout),
    .src2_data_stream_V_empty_n(sobel_y_data_stream_s_empty_n),
    .src2_data_stream_V_read(AddWeighted_U0_src2_data_stream_V_read),
    .dst_rows_V_dout(sobel_g_rows_V_c_dout),
    .dst_rows_V_empty_n(sobel_g_rows_V_c_empty_n),
    .dst_rows_V_read(AddWeighted_U0_dst_rows_V_read),
    .dst_cols_V_dout(sobel_g_cols_V_c_dout),
    .dst_cols_V_empty_n(sobel_g_cols_V_c_empty_n),
    .dst_cols_V_read(AddWeighted_U0_dst_cols_V_read),
    .dst_data_stream_V_din(AddWeighted_U0_dst_data_stream_V_din),
    .dst_data_stream_V_full_n(sobel_g_data_stream_s_full_n),
    .dst_data_stream_V_write(AddWeighted_U0_dst_data_stream_V_write),
    .dst_rows_V_out_din(AddWeighted_U0_dst_rows_V_out_din),
    .dst_rows_V_out_full_n(sobel_g_rows_V_c28_full_n),
    .dst_rows_V_out_write(AddWeighted_U0_dst_rows_V_out_write),
    .dst_cols_V_out_din(AddWeighted_U0_dst_cols_V_out_din),
    .dst_cols_V_out_full_n(sobel_g_cols_V_c29_full_n),
    .dst_cols_V_out_write(AddWeighted_U0_dst_cols_V_out_write)
);

CvtColor CvtColor_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(CvtColor_U0_ap_start),
    .start_full_n(start_for_Mat2AXIvideo_U0_full_n),
    .ap_done(CvtColor_U0_ap_done),
    .ap_continue(CvtColor_U0_ap_continue),
    .ap_idle(CvtColor_U0_ap_idle),
    .ap_ready(CvtColor_U0_ap_ready),
    .start_out(CvtColor_U0_start_out),
    .start_write(CvtColor_U0_start_write),
    .p_src_rows_V_dout(sobel_g_rows_V_c28_dout),
    .p_src_rows_V_empty_n(sobel_g_rows_V_c28_empty_n),
    .p_src_rows_V_read(CvtColor_U0_p_src_rows_V_read),
    .p_src_cols_V_dout(sobel_g_cols_V_c29_dout),
    .p_src_cols_V_empty_n(sobel_g_cols_V_c29_empty_n),
    .p_src_cols_V_read(CvtColor_U0_p_src_cols_V_read),
    .p_src_data_stream_V_dout(sobel_g_data_stream_s_dout),
    .p_src_data_stream_V_empty_n(sobel_g_data_stream_s_empty_n),
    .p_src_data_stream_V_read(CvtColor_U0_p_src_data_stream_V_read),
    .p_dst_data_stream_0_V_din(CvtColor_U0_p_dst_data_stream_0_V_din),
    .p_dst_data_stream_0_V_full_n(dst_data_stream_0_V_full_n),
    .p_dst_data_stream_0_V_write(CvtColor_U0_p_dst_data_stream_0_V_write),
    .p_dst_data_stream_1_V_din(CvtColor_U0_p_dst_data_stream_1_V_din),
    .p_dst_data_stream_1_V_full_n(dst_data_stream_1_V_full_n),
    .p_dst_data_stream_1_V_write(CvtColor_U0_p_dst_data_stream_1_V_write),
    .p_dst_data_stream_2_V_din(CvtColor_U0_p_dst_data_stream_2_V_din),
    .p_dst_data_stream_2_V_full_n(dst_data_stream_2_V_full_n),
    .p_dst_data_stream_2_V_write(CvtColor_U0_p_dst_data_stream_2_V_write)
);

Mat2AXIvideo Mat2AXIvideo_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Mat2AXIvideo_U0_ap_start),
    .ap_done(Mat2AXIvideo_U0_ap_done),
    .ap_continue(Mat2AXIvideo_U0_ap_continue),
    .ap_idle(Mat2AXIvideo_U0_ap_idle),
    .ap_ready(Mat2AXIvideo_U0_ap_ready),
    .img_data_stream_0_V_dout(dst_data_stream_0_V_dout),
    .img_data_stream_0_V_empty_n(dst_data_stream_0_V_empty_n),
    .img_data_stream_0_V_read(Mat2AXIvideo_U0_img_data_stream_0_V_read),
    .img_data_stream_1_V_dout(dst_data_stream_1_V_dout),
    .img_data_stream_1_V_empty_n(dst_data_stream_1_V_empty_n),
    .img_data_stream_1_V_read(Mat2AXIvideo_U0_img_data_stream_1_V_read),
    .img_data_stream_2_V_dout(dst_data_stream_2_V_dout),
    .img_data_stream_2_V_empty_n(dst_data_stream_2_V_empty_n),
    .img_data_stream_2_V_read(Mat2AXIvideo_U0_img_data_stream_2_V_read),
    .OUTPUT_STREAM_TDATA(Mat2AXIvideo_U0_OUTPUT_STREAM_TDATA),
    .OUTPUT_STREAM_TVALID(Mat2AXIvideo_U0_OUTPUT_STREAM_TVALID),
    .OUTPUT_STREAM_TREADY(OUTPUT_STREAM_TREADY),
    .OUTPUT_STREAM_TKEEP(Mat2AXIvideo_U0_OUTPUT_STREAM_TKEEP),
    .OUTPUT_STREAM_TSTRB(Mat2AXIvideo_U0_OUTPUT_STREAM_TSTRB),
    .OUTPUT_STREAM_TUSER(Mat2AXIvideo_U0_OUTPUT_STREAM_TUSER),
    .OUTPUT_STREAM_TLAST(Mat2AXIvideo_U0_OUTPUT_STREAM_TLAST),
    .OUTPUT_STREAM_TID(Mat2AXIvideo_U0_OUTPUT_STREAM_TID),
    .OUTPUT_STREAM_TDEST(Mat2AXIvideo_U0_OUTPUT_STREAM_TDEST)
);

fifo_w12_d2_A src_rows_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_proc_U0_src_rows_V_out_din),
    .if_full_n(src_rows_V_c_full_n),
    .if_write(Block_proc_U0_src_rows_V_out_write),
    .if_dout(src_rows_V_c_dout),
    .if_empty_n(src_rows_V_c_empty_n),
    .if_read(AXIvideo2Mat_U0_img_rows_V_read)
);

fifo_w12_d2_A src_cols_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_proc_U0_src_cols_V_out_din),
    .if_full_n(src_cols_V_c_full_n),
    .if_write(Block_proc_U0_src_cols_V_out_write),
    .if_dout(src_cols_V_c_dout),
    .if_empty_n(src_cols_V_c_empty_n),
    .if_read(AXIvideo2Mat_U0_img_cols_V_read)
);

fifo_w12_d8_A sobel_g_rows_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_proc_U0_sobel_g_rows_V_out_din),
    .if_full_n(sobel_g_rows_V_c_full_n),
    .if_write(Block_proc_U0_sobel_g_rows_V_out_write),
    .if_dout(sobel_g_rows_V_c_dout),
    .if_empty_n(sobel_g_rows_V_c_empty_n),
    .if_read(AddWeighted_U0_dst_rows_V_read)
);

fifo_w12_d8_A sobel_g_cols_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_proc_U0_sobel_g_cols_V_out_din),
    .if_full_n(sobel_g_cols_V_c_full_n),
    .if_write(Block_proc_U0_sobel_g_cols_V_out_write),
    .if_dout(sobel_g_cols_V_c_dout),
    .if_empty_n(sobel_g_cols_V_c_empty_n),
    .if_read(AddWeighted_U0_dst_cols_V_read)
);

fifo_w8_d2_A src_data_stream_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_0_V_din),
    .if_full_n(src_data_stream_0_V_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_0_V_write),
    .if_dout(src_data_stream_0_V_dout),
    .if_empty_n(src_data_stream_0_V_empty_n),
    .if_read(CvtColor_1_U0_p_src_data_stream_0_V_read)
);

fifo_w8_d2_A src_data_stream_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_1_V_din),
    .if_full_n(src_data_stream_1_V_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_1_V_write),
    .if_dout(src_data_stream_1_V_dout),
    .if_empty_n(src_data_stream_1_V_empty_n),
    .if_read(CvtColor_1_U0_p_src_data_stream_1_V_read)
);

fifo_w8_d2_A src_data_stream_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_2_V_din),
    .if_full_n(src_data_stream_2_V_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_2_V_write),
    .if_dout(src_data_stream_2_V_dout),
    .if_empty_n(src_data_stream_2_V_empty_n),
    .if_read(CvtColor_1_U0_p_src_data_stream_2_V_read)
);

fifo_w12_d2_A src_rows_V_c26_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_rows_V_out_din),
    .if_full_n(src_rows_V_c26_full_n),
    .if_write(AXIvideo2Mat_U0_img_rows_V_out_write),
    .if_dout(src_rows_V_c26_dout),
    .if_empty_n(src_rows_V_c26_empty_n),
    .if_read(CvtColor_1_U0_p_src_rows_V_read)
);

fifo_w12_d2_A src_cols_V_c27_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_cols_V_out_din),
    .if_full_n(src_cols_V_c27_full_n),
    .if_write(AXIvideo2Mat_U0_img_cols_V_out_write),
    .if_dout(src_cols_V_c27_dout),
    .if_empty_n(src_cols_V_c27_empty_n),
    .if_read(CvtColor_1_U0_p_src_cols_V_read)
);

fifo_w8_d2_A gray_data_stream_0_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(CvtColor_1_U0_p_dst_data_stream_V_din),
    .if_full_n(gray_data_stream_0_s_full_n),
    .if_write(CvtColor_1_U0_p_dst_data_stream_V_write),
    .if_dout(gray_data_stream_0_s_dout),
    .if_empty_n(gray_data_stream_0_s_empty_n),
    .if_read(GaussianBlur_U0_p_src_data_stream_V_read)
);

fifo_w8_d2_A blurred_data_stream_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(GaussianBlur_U0_p_dst_data_stream_V_din),
    .if_full_n(blurred_data_stream_s_full_n),
    .if_write(GaussianBlur_U0_p_dst_data_stream_V_write),
    .if_dout(blurred_data_stream_s_dout),
    .if_empty_n(blurred_data_stream_s_empty_n),
    .if_read(Duplicate_U0_src_data_stream_V_read)
);

fifo_w8_d2_A gray1_data_stream_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Duplicate_U0_dst1_data_stream_V_din),
    .if_full_n(gray1_data_stream_0_full_n),
    .if_write(Duplicate_U0_dst1_data_stream_V_write),
    .if_dout(gray1_data_stream_0_dout),
    .if_empty_n(gray1_data_stream_0_empty_n),
    .if_read(Sobel_U0_p_src_data_stream_V_read)
);

fifo_w8_d2_A gray2_data_stream_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Duplicate_U0_dst2_data_stream_V_din),
    .if_full_n(gray2_data_stream_0_full_n),
    .if_write(Duplicate_U0_dst2_data_stream_V_write),
    .if_dout(gray2_data_stream_0_dout),
    .if_empty_n(gray2_data_stream_0_empty_n),
    .if_read(Sobel_1_U0_p_src_data_stream_V_read)
);

fifo_w16_d2_A sobel_x64_data_strea_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Sobel_U0_p_dst_data_stream_V_din),
    .if_full_n(sobel_x64_data_strea_full_n),
    .if_write(Sobel_U0_p_dst_data_stream_V_write),
    .if_dout(sobel_x64_data_strea_dout),
    .if_empty_n(sobel_x64_data_strea_empty_n),
    .if_read(ConvertScaleAbs273_U0_p_src_data_stream_V_read)
);

fifo_w16_d2_A sobel_y64_data_strea_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Sobel_1_U0_p_dst_data_stream_V_din),
    .if_full_n(sobel_y64_data_strea_full_n),
    .if_write(Sobel_1_U0_p_dst_data_stream_V_write),
    .if_dout(sobel_y64_data_strea_dout),
    .if_empty_n(sobel_y64_data_strea_empty_n),
    .if_read(ConvertScaleAbs_U0_p_src_data_stream_V_read)
);

fifo_w8_d2_A sobel_x_data_stream_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ConvertScaleAbs273_U0_p_dst_data_stream_V_din),
    .if_full_n(sobel_x_data_stream_s_full_n),
    .if_write(ConvertScaleAbs273_U0_p_dst_data_stream_V_write),
    .if_dout(sobel_x_data_stream_s_dout),
    .if_empty_n(sobel_x_data_stream_s_empty_n),
    .if_read(AddWeighted_U0_src1_data_stream_V_read)
);

fifo_w8_d2_A sobel_y_data_stream_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ConvertScaleAbs_U0_p_dst_data_stream_V_din),
    .if_full_n(sobel_y_data_stream_s_full_n),
    .if_write(ConvertScaleAbs_U0_p_dst_data_stream_V_write),
    .if_dout(sobel_y_data_stream_s_dout),
    .if_empty_n(sobel_y_data_stream_s_empty_n),
    .if_read(AddWeighted_U0_src2_data_stream_V_read)
);

fifo_w8_d2_A sobel_g_data_stream_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AddWeighted_U0_dst_data_stream_V_din),
    .if_full_n(sobel_g_data_stream_s_full_n),
    .if_write(AddWeighted_U0_dst_data_stream_V_write),
    .if_dout(sobel_g_data_stream_s_dout),
    .if_empty_n(sobel_g_data_stream_s_empty_n),
    .if_read(CvtColor_U0_p_src_data_stream_V_read)
);

fifo_w12_d2_A sobel_g_rows_V_c28_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AddWeighted_U0_dst_rows_V_out_din),
    .if_full_n(sobel_g_rows_V_c28_full_n),
    .if_write(AddWeighted_U0_dst_rows_V_out_write),
    .if_dout(sobel_g_rows_V_c28_dout),
    .if_empty_n(sobel_g_rows_V_c28_empty_n),
    .if_read(CvtColor_U0_p_src_rows_V_read)
);

fifo_w12_d2_A sobel_g_cols_V_c29_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AddWeighted_U0_dst_cols_V_out_din),
    .if_full_n(sobel_g_cols_V_c29_full_n),
    .if_write(AddWeighted_U0_dst_cols_V_out_write),
    .if_dout(sobel_g_cols_V_c29_dout),
    .if_empty_n(sobel_g_cols_V_c29_empty_n),
    .if_read(CvtColor_U0_p_src_cols_V_read)
);

fifo_w8_d2_A dst_data_stream_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(CvtColor_U0_p_dst_data_stream_0_V_din),
    .if_full_n(dst_data_stream_0_V_full_n),
    .if_write(CvtColor_U0_p_dst_data_stream_0_V_write),
    .if_dout(dst_data_stream_0_V_dout),
    .if_empty_n(dst_data_stream_0_V_empty_n),
    .if_read(Mat2AXIvideo_U0_img_data_stream_0_V_read)
);

fifo_w8_d2_A dst_data_stream_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(CvtColor_U0_p_dst_data_stream_1_V_din),
    .if_full_n(dst_data_stream_1_V_full_n),
    .if_write(CvtColor_U0_p_dst_data_stream_1_V_write),
    .if_dout(dst_data_stream_1_V_dout),
    .if_empty_n(dst_data_stream_1_V_empty_n),
    .if_read(Mat2AXIvideo_U0_img_data_stream_1_V_read)
);

fifo_w8_d2_A dst_data_stream_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(CvtColor_U0_p_dst_data_stream_2_V_din),
    .if_full_n(dst_data_stream_2_V_full_n),
    .if_write(CvtColor_U0_p_dst_data_stream_2_V_write),
    .if_dout(dst_data_stream_2_V_dout),
    .if_empty_n(dst_data_stream_2_V_empty_n),
    .if_read(Mat2AXIvideo_U0_img_data_stream_2_V_read)
);

start_for_AddWeigxdS start_for_AddWeigxdS_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_AddWeighted_U0_din),
    .if_full_n(start_for_AddWeighted_U0_full_n),
    .if_write(Block_proc_U0_start_write),
    .if_dout(start_for_AddWeighted_U0_dout),
    .if_empty_n(start_for_AddWeighted_U0_empty_n),
    .if_read(AddWeighted_U0_ap_ready)
);

start_for_CvtColoyd2 start_for_CvtColoyd2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_CvtColor_1_U0_din),
    .if_full_n(start_for_CvtColor_1_U0_full_n),
    .if_write(AXIvideo2Mat_U0_start_write),
    .if_dout(start_for_CvtColor_1_U0_dout),
    .if_empty_n(start_for_CvtColor_1_U0_empty_n),
    .if_read(CvtColor_1_U0_ap_ready)
);

start_for_Gaussiazec start_for_Gaussiazec_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_GaussianBlur_U0_din),
    .if_full_n(start_for_GaussianBlur_U0_full_n),
    .if_write(CvtColor_1_U0_start_write),
    .if_dout(start_for_GaussianBlur_U0_dout),
    .if_empty_n(start_for_GaussianBlur_U0_empty_n),
    .if_read(GaussianBlur_U0_ap_ready)
);

start_for_DuplicaAem start_for_DuplicaAem_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Duplicate_U0_din),
    .if_full_n(start_for_Duplicate_U0_full_n),
    .if_write(GaussianBlur_U0_start_write),
    .if_dout(start_for_Duplicate_U0_dout),
    .if_empty_n(start_for_Duplicate_U0_empty_n),
    .if_read(Duplicate_U0_ap_ready)
);

start_for_Sobel_U0 start_for_Sobel_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Sobel_U0_din),
    .if_full_n(start_for_Sobel_U0_full_n),
    .if_write(Duplicate_U0_start_write),
    .if_dout(start_for_Sobel_U0_dout),
    .if_empty_n(start_for_Sobel_U0_empty_n),
    .if_read(Sobel_U0_ap_ready)
);

start_for_Sobel_1Bew start_for_Sobel_1Bew_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Sobel_1_U0_din),
    .if_full_n(start_for_Sobel_1_U0_full_n),
    .if_write(Duplicate_U0_start_write),
    .if_dout(start_for_Sobel_1_U0_dout),
    .if_empty_n(start_for_Sobel_1_U0_empty_n),
    .if_read(Sobel_1_U0_ap_ready)
);

start_for_ConvertCeG start_for_ConvertCeG_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_ConvertScaleAbs273_U0_din),
    .if_full_n(start_for_ConvertScaleAbs273_U0_full_n),
    .if_write(Sobel_U0_start_write),
    .if_dout(start_for_ConvertScaleAbs273_U0_dout),
    .if_empty_n(start_for_ConvertScaleAbs273_U0_empty_n),
    .if_read(ConvertScaleAbs273_U0_ap_ready)
);

start_for_ConvertDeQ start_for_ConvertDeQ_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_ConvertScaleAbs_U0_din),
    .if_full_n(start_for_ConvertScaleAbs_U0_full_n),
    .if_write(Sobel_1_U0_start_write),
    .if_dout(start_for_ConvertScaleAbs_U0_dout),
    .if_empty_n(start_for_ConvertScaleAbs_U0_empty_n),
    .if_read(ConvertScaleAbs_U0_ap_ready)
);

start_for_CvtColoEe0 start_for_CvtColoEe0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_CvtColor_U0_din),
    .if_full_n(start_for_CvtColor_U0_full_n),
    .if_write(AddWeighted_U0_start_write),
    .if_dout(start_for_CvtColor_U0_dout),
    .if_empty_n(start_for_CvtColor_U0_empty_n),
    .if_read(CvtColor_U0_ap_ready)
);

start_for_Mat2AXIFfa start_for_Mat2AXIFfa_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Mat2AXIvideo_U0_din),
    .if_full_n(start_for_Mat2AXIvideo_U0_full_n),
    .if_write(CvtColor_U0_start_write),
    .if_dout(start_for_Mat2AXIvideo_U0_dout),
    .if_empty_n(start_for_Mat2AXIvideo_U0_empty_n),
    .if_read(Mat2AXIvideo_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= ap_sync_AXIvideo2Mat_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Block_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Block_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Block_proc_U0_ap_ready <= ap_sync_Block_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == AXIvideo2Mat_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        AXIvideo2Mat_U0_ap_ready_count <= (AXIvideo2Mat_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == AXIvideo2Mat_U0_ap_ready))) begin
        AXIvideo2Mat_U0_ap_ready_count <= (AXIvideo2Mat_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == Block_proc_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        Block_proc_U0_ap_ready_count <= (Block_proc_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == Block_proc_U0_ap_ready))) begin
        Block_proc_U0_ap_ready_count <= (Block_proc_U0_ap_ready_count + 2'd1);
    end
end

assign AXIvideo2Mat_U0_ap_continue = 1'b1;

assign AXIvideo2Mat_U0_ap_start = ((ap_sync_reg_AXIvideo2Mat_U0_ap_ready ^ 1'b1) & ap_start);

assign AddWeighted_U0_ap_continue = 1'b1;

assign AddWeighted_U0_ap_start = start_for_AddWeighted_U0_empty_n;

assign Block_proc_U0_ap_continue = 1'b1;

assign Block_proc_U0_ap_start = ((ap_sync_reg_Block_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign ConvertScaleAbs273_U0_ap_continue = 1'b1;

assign ConvertScaleAbs273_U0_ap_start = start_for_ConvertScaleAbs273_U0_empty_n;

assign ConvertScaleAbs273_U0_start_full_n = 1'b1;

assign ConvertScaleAbs273_U0_start_write = 1'b0;

assign ConvertScaleAbs_U0_ap_continue = 1'b1;

assign ConvertScaleAbs_U0_ap_start = start_for_ConvertScaleAbs_U0_empty_n;

assign ConvertScaleAbs_U0_start_full_n = 1'b1;

assign ConvertScaleAbs_U0_start_write = 1'b0;

assign CvtColor_1_U0_ap_continue = 1'b1;

assign CvtColor_1_U0_ap_start = start_for_CvtColor_1_U0_empty_n;

assign CvtColor_U0_ap_continue = 1'b1;

assign CvtColor_U0_ap_start = start_for_CvtColor_U0_empty_n;

assign Duplicate_U0_ap_continue = 1'b1;

assign Duplicate_U0_ap_start = start_for_Duplicate_U0_empty_n;

assign Duplicate_U0_start_full_n = (start_for_Sobel_U0_full_n & start_for_Sobel_1_U0_full_n);

assign GaussianBlur_U0_ap_continue = 1'b1;

assign GaussianBlur_U0_ap_start = start_for_GaussianBlur_U0_empty_n;

assign INPUT_STREAM_TREADY = AXIvideo2Mat_U0_INPUT_STREAM_TREADY;

assign Mat2AXIvideo_U0_ap_continue = 1'b1;

assign Mat2AXIvideo_U0_ap_start = start_for_Mat2AXIvideo_U0_empty_n;

assign Mat2AXIvideo_U0_start_full_n = 1'b1;

assign Mat2AXIvideo_U0_start_write = 1'b0;

assign OUTPUT_STREAM_TDATA = Mat2AXIvideo_U0_OUTPUT_STREAM_TDATA;

assign OUTPUT_STREAM_TDEST = Mat2AXIvideo_U0_OUTPUT_STREAM_TDEST;

assign OUTPUT_STREAM_TID = Mat2AXIvideo_U0_OUTPUT_STREAM_TID;

assign OUTPUT_STREAM_TKEEP = Mat2AXIvideo_U0_OUTPUT_STREAM_TKEEP;

assign OUTPUT_STREAM_TLAST = Mat2AXIvideo_U0_OUTPUT_STREAM_TLAST;

assign OUTPUT_STREAM_TSTRB = Mat2AXIvideo_U0_OUTPUT_STREAM_TSTRB;

assign OUTPUT_STREAM_TUSER = Mat2AXIvideo_U0_OUTPUT_STREAM_TUSER;

assign OUTPUT_STREAM_TVALID = Mat2AXIvideo_U0_OUTPUT_STREAM_TVALID;

assign Sobel_1_U0_ap_continue = 1'b1;

assign Sobel_1_U0_ap_start = start_for_Sobel_1_U0_empty_n;

assign Sobel_U0_ap_continue = 1'b1;

assign Sobel_U0_ap_start = start_for_Sobel_U0_empty_n;

assign ap_done = Mat2AXIvideo_U0_ap_done;

assign ap_idle = (Sobel_U0_ap_idle & Sobel_1_U0_ap_idle & Mat2AXIvideo_U0_ap_idle & GaussianBlur_U0_ap_idle & Duplicate_U0_ap_idle & CvtColor_U0_ap_idle & CvtColor_1_U0_ap_idle & ConvertScaleAbs_U0_ap_idle & ConvertScaleAbs273_U0_ap_idle & Block_proc_U0_ap_idle & AddWeighted_U0_ap_idle & AXIvideo2Mat_U0_ap_idle);

assign ap_ready = ap_sync_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_AXIvideo2Mat_U0_ap_ready = (ap_sync_reg_AXIvideo2Mat_U0_ap_ready | AXIvideo2Mat_U0_ap_ready);

assign ap_sync_Block_proc_U0_ap_ready = (ap_sync_reg_Block_proc_U0_ap_ready | Block_proc_U0_ap_ready);

assign ap_sync_continue = 1'b1;

assign ap_sync_done = Mat2AXIvideo_U0_ap_done;

assign ap_sync_ready = (ap_sync_Block_proc_U0_ap_ready & ap_sync_AXIvideo2Mat_U0_ap_ready);

assign start_for_AddWeighted_U0_din = 1'b1;

assign start_for_ConvertScaleAbs273_U0_din = 1'b1;

assign start_for_ConvertScaleAbs_U0_din = 1'b1;

assign start_for_CvtColor_1_U0_din = 1'b1;

assign start_for_CvtColor_U0_din = 1'b1;

assign start_for_Duplicate_U0_din = 1'b1;

assign start_for_GaussianBlur_U0_din = 1'b1;

assign start_for_Mat2AXIvideo_U0_din = 1'b1;

assign start_for_Sobel_1_U0_din = 1'b1;

assign start_for_Sobel_U0_din = 1'b1;

endmodule //sobel_accel
