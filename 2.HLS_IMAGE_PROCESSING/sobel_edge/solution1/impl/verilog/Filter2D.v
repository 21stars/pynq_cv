// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write,
        p_kernel_val_0_V_1_read,
        p_kernel_val_0_V_2_read,
        p_kernel_val_1_V_0_read,
        p_kernel_val_1_V_2_read,
        p_kernel_val_2_V_0_read,
        p_kernel_val_2_V_1_read
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state6 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [15:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;
input  [1:0] p_kernel_val_0_V_1_read;
input  [1:0] p_kernel_val_0_V_2_read;
input  [2:0] p_kernel_val_1_V_0_read;
input  [3:0] p_kernel_val_1_V_2_read;
input  [1:0] p_kernel_val_2_V_0_read;
input  [2:0] p_kernel_val_2_V_1_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln444_reg_1436;
reg   [0:0] and_ln118_reg_1445;
reg   [0:0] icmp_ln899_reg_1401;
reg   [0:0] icmp_ln887_reg_1392;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] and_ln512_reg_1479;
reg   [0:0] and_ln512_reg_1479_pp0_iter1_reg;
reg   [10:0] t_V_2_reg_317;
wire  signed [9:0] sext_ln1118_fu_328_p1;
reg  signed [9:0] sext_ln1118_reg_1353;
wire  signed [9:0] sext_ln1118_1_fu_332_p1;
reg  signed [9:0] sext_ln1118_1_reg_1358;
wire  signed [10:0] sext_ln1118_2_fu_336_p1;
reg  signed [10:0] sext_ln1118_2_reg_1363;
wire   [11:0] zext_ln1118_4_fu_340_p1;
reg   [11:0] zext_ln1118_4_reg_1368;
wire  signed [9:0] sext_ln1118_3_fu_344_p1;
reg  signed [9:0] sext_ln1118_3_reg_1373;
wire   [10:0] zext_ln1118_5_fu_348_p1;
reg   [10:0] zext_ln1118_5_reg_1378;
wire   [0:0] icmp_ln443_fu_356_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] i_V_fu_362_p2;
reg   [10:0] i_V_reg_1387;
wire   [0:0] icmp_ln887_fu_368_p2;
wire   [0:0] xor_ln457_fu_374_p2;
reg   [0:0] xor_ln457_reg_1396;
wire   [0:0] icmp_ln899_fu_390_p2;
wire   [0:0] icmp_ln879_fu_396_p2;
reg   [0:0] icmp_ln879_reg_1406;
wire   [0:0] icmp_ln879_1_fu_402_p2;
reg   [0:0] icmp_ln879_1_reg_1410;
wire   [0:0] icmp_ln899_1_fu_408_p2;
reg   [0:0] icmp_ln899_1_reg_1414;
wire   [1:0] xor_ln493_1_fu_562_p2;
reg   [1:0] xor_ln493_1_reg_1421;
wire   [1:0] xor_ln493_2_fu_600_p2;
reg   [1:0] xor_ln493_2_reg_1426;
wire   [1:0] xor_ln493_3_fu_638_p2;
reg   [1:0] xor_ln493_3_reg_1431;
wire   [0:0] icmp_ln444_fu_648_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op158_read_state4;
reg    ap_predicate_op169_read_state4;
reg    ap_block_state4_pp0_stage0_iter1;
reg    ap_block_state5_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln444_reg_1436_pp0_iter1_reg;
wire   [10:0] j_V_fu_654_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] and_ln118_fu_706_p2;
wire   [1:0] trunc_ln458_fu_796_p1;
reg   [1:0] trunc_ln458_reg_1449;
wire   [0:0] or_ln457_fu_800_p2;
reg   [0:0] or_ln457_reg_1454;
reg   [10:0] k_buf_0_val_3_addr_reg_1461;
reg   [10:0] k_buf_0_val_4_addr_reg_1467;
reg   [10:0] k_buf_0_val_5_addr_reg_1473;
wire   [0:0] and_ln512_fu_812_p2;
wire   [7:0] src_kernel_win_0_va_23_fu_944_p3;
reg   [7:0] src_kernel_win_0_va_23_reg_1483;
wire   [7:0] src_kernel_win_0_va_24_fu_962_p3;
reg   [7:0] src_kernel_win_0_va_24_reg_1490;
wire  signed [11:0] grp_fu_1262_p3;
reg  signed [11:0] add_ln703_2_reg_1495;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter1_state4;
wire   [10:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
wire   [7:0] k_buf_0_val_3_q0;
wire   [10:0] k_buf_0_val_3_address1;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [10:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
wire   [7:0] k_buf_0_val_4_q0;
wire   [10:0] k_buf_0_val_4_address1;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [10:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
wire   [10:0] k_buf_0_val_5_address1;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [10:0] t_V_reg_306;
wire    ap_CS_fsm_state6;
wire   [63:0] zext_ln835_fu_805_p1;
reg   [7:0] src_kernel_win_0_va_fu_144;
reg   [7:0] src_kernel_win_0_va_18_fu_148;
reg   [7:0] src_kernel_win_0_va_19_fu_152;
reg   [7:0] src_kernel_win_0_va_20_fu_156;
reg   [7:0] src_kernel_win_0_va_21_fu_160;
wire   [7:0] src_kernel_win_0_va_25_fu_980_p3;
reg   [7:0] src_kernel_win_0_va_22_fu_164;
reg   [7:0] right_border_buf_0_s_fu_168;
wire   [7:0] col_buf_0_val_0_0_fu_852_p3;
reg   [7:0] right_border_buf_0_14_fu_172;
reg   [7:0] right_border_buf_0_15_fu_176;
reg   [7:0] right_border_buf_0_16_fu_180;
wire   [7:0] col_buf_0_val_1_0_fu_871_p3;
reg   [7:0] right_border_buf_0_17_fu_184;
reg   [7:0] right_border_buf_0_18_fu_188;
wire   [7:0] col_buf_0_val_2_0_fu_890_p3;
reg    ap_block_pp0_stage0_01001;
wire   [9:0] tmp_fu_380_p4;
wire   [11:0] zext_ln443_fu_352_p1;
wire   [11:0] add_ln506_fu_418_p2;
wire   [0:0] tmp_28_fu_424_p3;
wire   [0:0] icmp_ln118_fu_438_p2;
wire   [0:0] xor_ln118_6_fu_432_p2;
wire   [0:0] tmp_29_fu_450_p3;
wire   [11:0] sub_ln142_fu_458_p2;
wire   [11:0] select_ln139_1_fu_464_p3;
wire   [11:0] add_ln506_1_fu_482_p2;
wire   [11:0] add_ln506_2_fu_508_p2;
wire   [1:0] trunc_ln147_fu_478_p1;
wire   [0:0] icmp_ln144_1_fu_472_p2;
wire   [1:0] sub_ln507_fu_534_p2;
wire   [1:0] trunc_ln506_fu_414_p1;
wire   [0:0] and_ln118_1_fu_444_p2;
wire   [1:0] add_ln507_fu_548_p2;
wire   [1:0] select_ln507_fu_540_p3;
wire   [1:0] select_ln507_1_fu_554_p3;
wire   [1:0] trunc_ln142_fu_504_p1;
wire   [0:0] tmp_31_fu_496_p3;
wire   [1:0] sub_ln118_fu_574_p2;
wire   [1:0] trunc_ln118_fu_580_p1;
wire   [0:0] tmp_30_fu_488_p3;
wire   [1:0] select_ln139_4_fu_584_p3;
wire   [1:0] xor_ln118_1_fu_568_p2;
wire   [1:0] select_ln118_fu_592_p3;
wire   [1:0] trunc_ln142_2_fu_530_p1;
wire   [0:0] tmp_33_fu_522_p3;
wire   [1:0] xor_ln118_7_fu_612_p2;
wire   [1:0] trunc_ln118_2_fu_618_p1;
wire   [0:0] tmp_32_fu_514_p3;
wire   [1:0] select_ln139_5_fu_622_p3;
wire   [1:0] add_ln118_fu_606_p2;
wire   [1:0] select_ln118_1_fu_630_p3;
wire   [9:0] tmp_34_fu_660_p4;
wire   [11:0] zext_ln444_fu_644_p1;
wire  signed [11:0] ImagLoc_x_fu_676_p2;
wire   [0:0] tmp_35_fu_686_p3;
wire   [0:0] icmp_ln118_1_fu_700_p2;
wire   [0:0] xor_ln118_8_fu_694_p2;
wire   [0:0] tmp_36_fu_712_p3;
wire   [11:0] sub_ln142_2_fu_720_p2;
wire  signed [11:0] select_ln139_fu_726_p3;
wire  signed [12:0] sext_ln139_1_fu_738_p1;
wire  signed [12:0] sext_ln451_fu_682_p1;
wire   [12:0] sub_ln147_fu_748_p2;
wire   [12:0] select_ln118_3_fu_754_p3;
wire   [0:0] xor_ln118_9_fu_766_p2;
wire   [0:0] icmp_ln144_fu_742_p2;
wire   [0:0] or_ln118_fu_772_p2;
wire   [0:0] and_ln144_fu_778_p2;
wire  signed [13:0] sext_ln139_fu_734_p1;
wire   [13:0] zext_ln118_fu_762_p1;
wire  signed [13:0] x_fu_784_p3;
wire  signed [31:0] sext_ln144_fu_792_p1;
wire   [0:0] icmp_ln891_fu_670_p2;
wire   [1:0] xor_ln493_fu_835_p2;
wire   [7:0] tmp_4_fu_840_p5;
wire   [7:0] tmp_5_fu_859_p5;
wire   [7:0] tmp_6_fu_878_p5;
wire   [7:0] tmp_7_fu_933_p5;
wire   [7:0] tmp_8_fu_951_p5;
wire   [7:0] tmp_9_fu_969_p5;
wire   [8:0] zext_ln1118_fu_996_p1;
wire  signed [8:0] sub_ln1118_fu_1000_p2;
wire  signed [10:0] grp_fu_1254_p3;
wire   [7:0] mul_ln1118_4_fu_1064_p0;
wire  signed [1:0] mul_ln1118_4_fu_1064_p1;
wire  signed [9:0] mul_ln1118_4_fu_1064_p2;
wire   [7:0] mul_ln1118_5_fu_1077_p0;
wire   [2:0] mul_ln1118_5_fu_1077_p1;
wire   [10:0] mul_ln1118_5_fu_1077_p2;
wire  signed [10:0] sext_ln703_3_fu_1069_p1;
wire   [10:0] add_ln703_5_fu_1086_p2;
wire  signed [11:0] sext_ln703_4_fu_1092_p1;
wire  signed [11:0] grp_fu_1269_p3;
(* use_dsp48 = "no" *) wire   [11:0] add_ln703_6_fu_1096_p2;
wire   [11:0] zext_ln703_2_fu_1104_p1;
wire   [11:0] p_Val2_s_fu_1107_p2;
wire   [11:0] zext_ln703_fu_1082_p1;
wire   [9:0] zext_ln703_1_fu_1101_p1;
wire   [9:0] add_ln703_9_fu_1126_p2;
wire  signed [11:0] sext_ln703_5_fu_1132_p1;
(* use_dsp48 = "no" *) wire   [11:0] add_ln703_8_fu_1121_p2;
wire  signed [11:0] p_Val2_5_fu_1136_p2;
wire   [0:0] p_Result_1_fu_1146_p3;
wire   [0:0] tmp_41_fu_1154_p3;
wire   [0:0] p_Result_s_fu_1113_p3;
wire   [0:0] or_ln785_fu_1162_p2;
wire   [0:0] xor_ln785_fu_1168_p2;
wire   [0:0] and_ln786_fu_1180_p2;
wire   [0:0] xor_ln786_fu_1186_p2;
wire   [0:0] underflow_fu_1192_p2;
wire   [0:0] overflow_fu_1174_p2;
wire   [0:0] or_ln340_fu_1198_p2;
wire  signed [15:0] sext_ln703_6_fu_1142_p1;
wire   [0:0] or_ln340_1_fu_1204_p2;
wire   [15:0] select_ln340_fu_1210_p3;
wire   [15:0] select_ln388_fu_1218_p3;
wire   [7:0] grp_fu_1247_p0;
wire  signed [1:0] grp_fu_1247_p1;
wire   [7:0] grp_fu_1254_p0;
wire  signed [1:0] grp_fu_1254_p1;
wire  signed [10:0] grp_fu_1247_p3;
wire   [7:0] grp_fu_1262_p0;
wire  signed [2:0] grp_fu_1262_p1;
wire   [7:0] grp_fu_1269_p0;
wire   [3:0] grp_fu_1269_p1;
reg   [3:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_122;
reg    ap_enable_state3_pp0_iter0_stage0;
reg    ap_enable_operation_148;
reg    ap_enable_state4_pp0_iter1_stage0;
reg    ap_predicate_op163_store_state4;
reg    ap_enable_operation_163;
reg    ap_predicate_op170_store_state4;
reg    ap_enable_operation_170;
reg    ap_enable_operation_124;
reg    ap_enable_operation_152;
reg    ap_predicate_op161_store_state4;
reg    ap_enable_operation_161;
reg    ap_predicate_op168_store_state4;
reg    ap_enable_operation_168;
reg    ap_enable_operation_126;
reg    ap_enable_operation_155;
reg    ap_predicate_op159_store_state4;
reg    ap_enable_operation_159;
reg    ap_predicate_op167_store_state4;
reg    ap_enable_operation_167;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_1247_p00;
wire   [9:0] grp_fu_1254_p00;
wire   [10:0] grp_fu_1262_p00;
wire   [11:0] grp_fu_1269_p00;
wire   [9:0] mul_ln1118_4_fu_1064_p00;
wire   [10:0] mul_ln1118_5_fu_1077_p00;
reg    ap_condition_947;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_address1),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(p_src_data_stream_V_dout)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_address1),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_address1),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

sobel_accel_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_3hbi_U54(
    .din0(right_border_buf_0_s_fu_168),
    .din1(right_border_buf_0_14_fu_172),
    .din2(8'd0),
    .din3(xor_ln493_fu_835_p2),
    .dout(tmp_4_fu_840_p5)
);

sobel_accel_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_3hbi_U55(
    .din0(right_border_buf_0_16_fu_180),
    .din1(right_border_buf_0_17_fu_184),
    .din2(8'd0),
    .din3(xor_ln493_fu_835_p2),
    .dout(tmp_5_fu_859_p5)
);

sobel_accel_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_3hbi_U56(
    .din0(right_border_buf_0_18_fu_188),
    .din1(right_border_buf_0_15_fu_176),
    .din2(8'd0),
    .din3(xor_ln493_fu_835_p2),
    .dout(tmp_6_fu_878_p5)
);

sobel_accel_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_3hbi_U57(
    .din0(col_buf_0_val_0_0_fu_852_p3),
    .din1(col_buf_0_val_1_0_fu_871_p3),
    .din2(col_buf_0_val_2_0_fu_890_p3),
    .din3(xor_ln493_1_reg_1421),
    .dout(tmp_7_fu_933_p5)
);

sobel_accel_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_3hbi_U58(
    .din0(col_buf_0_val_0_0_fu_852_p3),
    .din1(col_buf_0_val_1_0_fu_871_p3),
    .din2(col_buf_0_val_2_0_fu_890_p3),
    .din3(xor_ln493_2_reg_1426),
    .dout(tmp_8_fu_951_p5)
);

sobel_accel_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_3hbi_U59(
    .din0(col_buf_0_val_0_0_fu_852_p3),
    .din1(col_buf_0_val_1_0_fu_871_p3),
    .din2(col_buf_0_val_2_0_fu_890_p3),
    .din3(xor_ln493_3_reg_1431),
    .dout(tmp_9_fu_969_p5)
);

sobel_accel_mac_mpcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 11 ))
sobel_accel_mac_mpcA_U60(
    .din0(grp_fu_1247_p0),
    .din1(grp_fu_1247_p1),
    .din2(sub_ln1118_fu_1000_p2),
    .dout(grp_fu_1247_p3)
);

sobel_accel_mac_mqcK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
sobel_accel_mac_mqcK_U61(
    .din0(grp_fu_1254_p0),
    .din1(grp_fu_1254_p1),
    .din2(grp_fu_1247_p3),
    .dout(grp_fu_1254_p3)
);

sobel_accel_mac_mrcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 3 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 12 ))
sobel_accel_mac_mrcU_U62(
    .din0(grp_fu_1262_p0),
    .din1(grp_fu_1262_p1),
    .din2(grp_fu_1254_p3),
    .dout(grp_fu_1262_p3)
);

sobel_accel_mac_msc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
sobel_accel_mac_msc4_U63(
    .din0(grp_fu_1269_p0),
    .din1(grp_fu_1269_p1),
    .din2(add_ln703_2_reg_1495),
    .dout(grp_fu_1269_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((icmp_ln444_fu_648_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln443_fu_356_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((((1'b1 == ap_condition_pp0_exit_iter1_state4) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((icmp_ln443_fu_356_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter1_state4) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((icmp_ln443_fu_356_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_fu_648_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_2_reg_317 <= j_V_fu_654_p2;
    end else if (((icmp_ln443_fu_356_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_2_reg_317 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        t_V_reg_306 <= i_V_reg_1387;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_306 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln512_reg_1479) & (icmp_ln444_reg_1436 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln703_2_reg_1495 <= grp_fu_1262_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_fu_648_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln118_reg_1445 <= and_ln118_fu_706_p2;
        and_ln512_reg_1479 <= and_ln512_fu_812_p2;
        k_buf_0_val_3_addr_reg_1461 <= zext_ln835_fu_805_p1;
        k_buf_0_val_4_addr_reg_1467 <= zext_ln835_fu_805_p1;
        k_buf_0_val_5_addr_reg_1473 <= zext_ln835_fu_805_p1;
        or_ln457_reg_1454 <= or_ln457_fu_800_p2;
        trunc_ln458_reg_1449 <= trunc_ln458_fu_796_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln512_reg_1479_pp0_iter1_reg <= and_ln512_reg_1479;
        icmp_ln444_reg_1436 <= icmp_ln444_fu_648_p2;
        icmp_ln444_reg_1436_pp0_iter1_reg <= icmp_ln444_reg_1436;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1387 <= i_V_fu_362_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln443_fu_356_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln879_1_reg_1410 <= icmp_ln879_1_fu_402_p2;
        icmp_ln879_reg_1406 <= icmp_ln879_fu_396_p2;
        icmp_ln887_reg_1392 <= icmp_ln887_fu_368_p2;
        icmp_ln899_1_reg_1414 <= icmp_ln899_1_fu_408_p2;
        icmp_ln899_reg_1401 <= icmp_ln899_fu_390_p2;
        xor_ln457_reg_1396 <= xor_ln457_fu_374_p2;
        xor_ln493_1_reg_1421 <= xor_ln493_1_fu_562_p2;
        xor_ln493_2_reg_1426 <= xor_ln493_2_fu_600_p2;
        xor_ln493_3_reg_1431 <= xor_ln493_3_fu_638_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1392 == 1'd1) & (icmp_ln899_reg_1401 == 1'd1) & (1'd1 == and_ln118_reg_1445) & (icmp_ln444_reg_1436 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_14_fu_172 <= right_border_buf_0_s_fu_168;
        right_border_buf_0_15_fu_176 <= right_border_buf_0_18_fu_188;
        right_border_buf_0_16_fu_180 <= col_buf_0_val_1_0_fu_871_p3;
        right_border_buf_0_17_fu_184 <= right_border_buf_0_16_fu_180;
        right_border_buf_0_18_fu_188 <= col_buf_0_val_2_0_fu_890_p3;
        right_border_buf_0_s_fu_168 <= col_buf_0_val_0_0_fu_852_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        sext_ln1118_1_reg_1358 <= sext_ln1118_1_fu_332_p1;
        sext_ln1118_2_reg_1363 <= sext_ln1118_2_fu_336_p1;
        sext_ln1118_3_reg_1373 <= sext_ln1118_3_fu_344_p1;
        sext_ln1118_reg_1353 <= sext_ln1118_fu_328_p1;
        zext_ln1118_4_reg_1368[3 : 0] <= zext_ln1118_4_fu_340_p1[3 : 0];
        zext_ln1118_5_reg_1378[2 : 0] <= zext_ln1118_5_fu_348_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_reg_1436_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_18_fu_148 <= src_kernel_win_0_va_fu_144;
        src_kernel_win_0_va_fu_144 <= src_kernel_win_0_va_23_reg_1483;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_reg_1436 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_19_fu_152 <= src_kernel_win_0_va_24_fu_962_p3;
        src_kernel_win_0_va_20_fu_156 <= src_kernel_win_0_va_19_fu_152;
        src_kernel_win_0_va_21_fu_160 <= src_kernel_win_0_va_25_fu_980_p3;
        src_kernel_win_0_va_22_fu_164 <= src_kernel_win_0_va_21_fu_160;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_reg_1436 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_23_reg_1483 <= src_kernel_win_0_va_23_fu_944_p3;
        src_kernel_win_0_va_24_reg_1490 <= src_kernel_win_0_va_24_fu_962_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln443_fu_356_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln443_fu_356_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_1392 == 1'd1) & (icmp_ln899_reg_1401 == 1'd1) & (1'd1 == and_ln118_reg_1445) & (icmp_ln444_reg_1436 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln879_reg_1406 == 1'd1) & (1'd1 == and_ln118_reg_1445) & (icmp_ln899_reg_1401 == 1'd0) & (icmp_ln444_reg_1436 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_1392 == 1'd1) & (icmp_ln899_reg_1401 == 1'd1) & (1'd1 == and_ln118_reg_1445) & (icmp_ln444_reg_1436 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln879_reg_1406 == 1'd1) & (1'd1 == and_ln118_reg_1445) & (icmp_ln899_reg_1401 == 1'd0) & (icmp_ln444_reg_1436 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_1392 == 1'd1) & (icmp_ln899_reg_1401 == 1'd1) & (1'd1 == and_ln118_reg_1445) & (icmp_ln444_reg_1436 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln879_1_reg_1410 == 1'd1) & (1'd1 == and_ln118_reg_1445) & (icmp_ln899_reg_1401 == 1'd0) & (icmp_ln444_reg_1436 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_947)) begin
        if (((icmp_ln887_reg_1392 == 1'd1) & (icmp_ln899_reg_1401 == 1'd1))) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_q0;
        end else if (((icmp_ln879_1_reg_1410 == 1'd1) & (icmp_ln899_reg_1401 == 1'd0))) begin
            k_buf_0_val_4_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_1392 == 1'd1) & (icmp_ln899_reg_1401 == 1'd1) & (1'd1 == and_ln118_reg_1445) & (icmp_ln444_reg_1436 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln879_1_reg_1410 == 1'd1) & (1'd1 == and_ln118_reg_1445) & (icmp_ln899_reg_1401 == 1'd0) & (icmp_ln444_reg_1436 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_1392 == 1'd1) & (icmp_ln899_reg_1401 == 1'd1) & (1'd1 == and_ln118_reg_1445) & (icmp_ln444_reg_1436 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln879_reg_1406 == 1'd1) & (1'd1 == and_ln118_reg_1445) & (icmp_ln899_reg_1401 == 1'd0) & (icmp_ln444_reg_1436 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_947)) begin
        if (((icmp_ln887_reg_1392 == 1'd1) & (icmp_ln899_reg_1401 == 1'd1))) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_q0;
        end else if (((icmp_ln879_reg_1406 == 1'd1) & (icmp_ln899_reg_1401 == 1'd0))) begin
            k_buf_0_val_5_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_1392 == 1'd1) & (icmp_ln899_reg_1401 == 1'd1) & (1'd1 == and_ln118_reg_1445) & (icmp_ln444_reg_1436 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln879_reg_1406 == 1'd1) & (1'd1 == and_ln118_reg_1445) & (icmp_ln899_reg_1401 == 1'd0) & (icmp_ln444_reg_1436 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln512_reg_1479_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln512_reg_1479_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_1392 == 1'd1) & (icmp_ln899_reg_1401 == 1'd1) & (1'd1 == and_ln118_reg_1445) & (icmp_ln444_reg_1436 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd1 == and_ln118_reg_1445) & (icmp_ln899_reg_1401 == 1'd0) & (icmp_ln444_reg_1436 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op169_read_state4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op158_read_state4 == 1'b1)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln443_fu_356_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_fu_676_p2 = ($signed(12'd4095) + $signed(zext_ln444_fu_644_p1));

assign add_ln118_fu_606_p2 = (2'd1 + trunc_ln506_fu_414_p1);

assign add_ln506_1_fu_482_p2 = ($signed(12'd4094) + $signed(zext_ln443_fu_352_p1));

assign add_ln506_2_fu_508_p2 = ($signed(12'd4093) + $signed(zext_ln443_fu_352_p1));

assign add_ln506_fu_418_p2 = ($signed(12'd4095) + $signed(zext_ln443_fu_352_p1));

assign add_ln507_fu_548_p2 = ($signed(2'd3) + $signed(trunc_ln506_fu_414_p1));

assign add_ln703_5_fu_1086_p2 = ($signed(mul_ln1118_5_fu_1077_p2) + $signed(sext_ln703_3_fu_1069_p1));

assign add_ln703_6_fu_1096_p2 = ($signed(sext_ln703_4_fu_1092_p1) + $signed(grp_fu_1269_p3));

assign add_ln703_8_fu_1121_p2 = ($signed(grp_fu_1269_p3) + $signed(zext_ln703_fu_1082_p1));

assign add_ln703_9_fu_1126_p2 = ($signed(mul_ln1118_4_fu_1064_p2) + $signed(zext_ln703_1_fu_1101_p1));

assign and_ln118_1_fu_444_p2 = (xor_ln118_6_fu_432_p2 & icmp_ln118_fu_438_p2);

assign and_ln118_fu_706_p2 = (xor_ln118_8_fu_694_p2 & icmp_ln118_1_fu_700_p2);

assign and_ln144_fu_778_p2 = (or_ln118_fu_772_p2 & icmp_ln144_fu_742_p2);

assign and_ln512_fu_812_p2 = (icmp_ln899_reg_1401 & icmp_ln891_fu_670_p2);

assign and_ln786_fu_1180_p2 = (tmp_41_fu_1154_p3 & p_Result_1_fu_1146_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((1'd1 == and_ln512_reg_1479_pp0_iter1_reg) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op169_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op158_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'd1 == and_ln512_reg_1479_pp0_iter1_reg) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op169_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op158_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'd1 == and_ln512_reg_1479_pp0_iter1_reg) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op169_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op158_read_state4 == 1'b1)))));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op169_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op158_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter2 = ((1'd1 == and_ln512_reg_1479_pp0_iter1_reg) & (p_dst_data_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_947 = ((1'd1 == and_ln118_reg_1445) & (icmp_ln444_reg_1436 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_operation_122 = (icmp_ln444_fu_648_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_124 = (icmp_ln444_fu_648_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_126 = (icmp_ln444_fu_648_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_148 = (icmp_ln444_reg_1436 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_152 = (icmp_ln444_reg_1436 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_155 = (icmp_ln444_reg_1436 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_159 = (ap_predicate_op159_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_161 = (ap_predicate_op161_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_163 = (ap_predicate_op163_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_167 = (ap_predicate_op167_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_168 = (ap_predicate_op168_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_170 = (ap_predicate_op170_store_state4 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state3_pp0_iter0_stage0 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_enable_state4_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_predicate_op158_read_state4 = ((1'd1 == and_ln118_reg_1445) & (icmp_ln899_reg_1401 == 1'd0) & (icmp_ln444_reg_1436 == 1'd0));
end

always @ (*) begin
    ap_predicate_op159_store_state4 = ((icmp_ln879_reg_1406 == 1'd1) & (1'd1 == and_ln118_reg_1445) & (icmp_ln899_reg_1401 == 1'd0) & (icmp_ln444_reg_1436 == 1'd0));
end

always @ (*) begin
    ap_predicate_op161_store_state4 = ((icmp_ln879_1_reg_1410 == 1'd1) & (1'd1 == and_ln118_reg_1445) & (icmp_ln899_reg_1401 == 1'd0) & (icmp_ln444_reg_1436 == 1'd0));
end

always @ (*) begin
    ap_predicate_op163_store_state4 = ((icmp_ln879_reg_1406 == 1'd1) & (1'd1 == and_ln118_reg_1445) & (icmp_ln899_reg_1401 == 1'd0) & (icmp_ln444_reg_1436 == 1'd0));
end

always @ (*) begin
    ap_predicate_op167_store_state4 = ((icmp_ln887_reg_1392 == 1'd1) & (icmp_ln899_reg_1401 == 1'd1) & (1'd1 == and_ln118_reg_1445) & (icmp_ln444_reg_1436 == 1'd0));
end

always @ (*) begin
    ap_predicate_op168_store_state4 = ((icmp_ln887_reg_1392 == 1'd1) & (icmp_ln899_reg_1401 == 1'd1) & (1'd1 == and_ln118_reg_1445) & (icmp_ln444_reg_1436 == 1'd0));
end

always @ (*) begin
    ap_predicate_op169_read_state4 = ((icmp_ln887_reg_1392 == 1'd1) & (icmp_ln899_reg_1401 == 1'd1) & (1'd1 == and_ln118_reg_1445) & (icmp_ln444_reg_1436 == 1'd0));
end

always @ (*) begin
    ap_predicate_op170_store_state4 = ((icmp_ln887_reg_1392 == 1'd1) & (icmp_ln899_reg_1401 == 1'd1) & (1'd1 == and_ln118_reg_1445) & (icmp_ln444_reg_1436 == 1'd0));
end

assign col_buf_0_val_0_0_fu_852_p3 = ((or_ln457_reg_1454[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_4_fu_840_p5);

assign col_buf_0_val_1_0_fu_871_p3 = ((or_ln457_reg_1454[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_5_fu_859_p5);

assign col_buf_0_val_2_0_fu_890_p3 = ((or_ln457_reg_1454[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_6_fu_878_p5);

assign grp_fu_1247_p0 = grp_fu_1247_p00;

assign grp_fu_1247_p00 = src_kernel_win_0_va_21_fu_160;

assign grp_fu_1247_p1 = sext_ln1118_reg_1353;

assign grp_fu_1254_p0 = grp_fu_1254_p00;

assign grp_fu_1254_p00 = src_kernel_win_0_va_25_fu_980_p3;

assign grp_fu_1254_p1 = sext_ln1118_1_reg_1358;

assign grp_fu_1262_p0 = grp_fu_1262_p00;

assign grp_fu_1262_p00 = src_kernel_win_0_va_20_fu_156;

assign grp_fu_1262_p1 = sext_ln1118_2_reg_1363;

assign grp_fu_1269_p0 = grp_fu_1269_p00;

assign grp_fu_1269_p00 = src_kernel_win_0_va_24_reg_1490;

assign grp_fu_1269_p1 = zext_ln1118_4_reg_1368;

assign i_V_fu_362_p2 = (t_V_reg_306 + 11'd1);

assign icmp_ln118_1_fu_700_p2 = (($signed(ImagLoc_x_fu_676_p2) < $signed(12'd1920)) ? 1'b1 : 1'b0);

assign icmp_ln118_fu_438_p2 = (($signed(add_ln506_fu_418_p2) < $signed(12'd1080)) ? 1'b1 : 1'b0);

assign icmp_ln144_1_fu_472_p2 = (($signed(select_ln139_1_fu_464_p3) < $signed(12'd1080)) ? 1'b1 : 1'b0);

assign icmp_ln144_fu_742_p2 = (($signed(select_ln139_fu_726_p3) < $signed(12'd1920)) ? 1'b1 : 1'b0);

assign icmp_ln443_fu_356_p2 = ((t_V_reg_306 == 11'd1082) ? 1'b1 : 1'b0);

assign icmp_ln444_fu_648_p2 = ((t_V_2_reg_317 == 11'd1922) ? 1'b1 : 1'b0);

assign icmp_ln879_1_fu_402_p2 = ((t_V_reg_306 == 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_396_p2 = ((t_V_reg_306 == 11'd1) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_368_p2 = ((t_V_reg_306 < 11'd1080) ? 1'b1 : 1'b0);

assign icmp_ln891_fu_670_p2 = ((tmp_34_fu_660_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln899_1_fu_408_p2 = ((t_V_reg_306 > 11'd1080) ? 1'b1 : 1'b0);

assign icmp_ln899_fu_390_p2 = ((tmp_fu_380_p4 != 10'd0) ? 1'b1 : 1'b0);

assign j_V_fu_654_p2 = (t_V_2_reg_317 + 11'd1);

assign k_buf_0_val_3_address0 = zext_ln835_fu_805_p1;

assign k_buf_0_val_3_address1 = k_buf_0_val_3_addr_reg_1461;

assign k_buf_0_val_4_address0 = zext_ln835_fu_805_p1;

assign k_buf_0_val_4_address1 = k_buf_0_val_4_addr_reg_1467;

assign k_buf_0_val_5_address0 = zext_ln835_fu_805_p1;

assign k_buf_0_val_5_address1 = k_buf_0_val_5_addr_reg_1473;

assign mul_ln1118_4_fu_1064_p0 = mul_ln1118_4_fu_1064_p00;

assign mul_ln1118_4_fu_1064_p00 = src_kernel_win_0_va_18_fu_148;

assign mul_ln1118_4_fu_1064_p1 = sext_ln1118_3_reg_1373;

assign mul_ln1118_4_fu_1064_p2 = ($signed({{1'b0}, {mul_ln1118_4_fu_1064_p0}}) * $signed(mul_ln1118_4_fu_1064_p1));

assign mul_ln1118_5_fu_1077_p0 = mul_ln1118_5_fu_1077_p00;

assign mul_ln1118_5_fu_1077_p00 = src_kernel_win_0_va_fu_144;

assign mul_ln1118_5_fu_1077_p1 = zext_ln1118_5_reg_1378;

assign mul_ln1118_5_fu_1077_p2 = (mul_ln1118_5_fu_1077_p0 * mul_ln1118_5_fu_1077_p1);

assign or_ln118_fu_772_p2 = (xor_ln118_9_fu_766_p2 | tmp_35_fu_686_p3);

assign or_ln340_1_fu_1204_p2 = (xor_ln785_fu_1168_p2 | and_ln786_fu_1180_p2);

assign or_ln340_fu_1198_p2 = (underflow_fu_1192_p2 | overflow_fu_1174_p2);

assign or_ln457_fu_800_p2 = (xor_ln457_reg_1396 | icmp_ln118_1_fu_700_p2);

assign or_ln785_fu_1162_p2 = (tmp_41_fu_1154_p3 | p_Result_1_fu_1146_p3);

assign overflow_fu_1174_p2 = (xor_ln785_fu_1168_p2 & or_ln785_fu_1162_p2);

assign p_Result_1_fu_1146_p3 = p_Val2_5_fu_1136_p2[32'd11];

assign p_Result_s_fu_1113_p3 = p_Val2_s_fu_1107_p2[32'd11];

assign p_Val2_5_fu_1136_p2 = ($signed(sext_ln703_5_fu_1132_p1) + $signed(add_ln703_8_fu_1121_p2));

assign p_Val2_s_fu_1107_p2 = (add_ln703_6_fu_1096_p2 + zext_ln703_2_fu_1104_p1);

assign p_dst_data_stream_V_din = ((or_ln340_1_fu_1204_p2[0:0] === 1'b1) ? select_ln340_fu_1210_p3 : select_ln388_fu_1218_p3);

assign select_ln118_1_fu_630_p3 = ((tmp_32_fu_514_p3[0:0] === 1'b1) ? select_ln139_5_fu_622_p3 : add_ln118_fu_606_p2);

assign select_ln118_3_fu_754_p3 = ((and_ln118_fu_706_p2[0:0] === 1'b1) ? sext_ln451_fu_682_p1 : sub_ln147_fu_748_p2);

assign select_ln118_fu_592_p3 = ((tmp_30_fu_488_p3[0:0] === 1'b1) ? select_ln139_4_fu_584_p3 : xor_ln118_1_fu_568_p2);

assign select_ln139_1_fu_464_p3 = ((tmp_29_fu_450_p3[0:0] === 1'b1) ? sub_ln142_fu_458_p2 : add_ln506_fu_418_p2);

assign select_ln139_4_fu_584_p3 = ((tmp_31_fu_496_p3[0:0] === 1'b1) ? sub_ln118_fu_574_p2 : trunc_ln118_fu_580_p1);

assign select_ln139_5_fu_622_p3 = ((tmp_33_fu_522_p3[0:0] === 1'b1) ? xor_ln118_7_fu_612_p2 : trunc_ln118_2_fu_618_p1);

assign select_ln139_fu_726_p3 = ((tmp_36_fu_712_p3[0:0] === 1'b1) ? sub_ln142_2_fu_720_p2 : ImagLoc_x_fu_676_p2);

assign select_ln340_fu_1210_p3 = ((or_ln340_fu_1198_p2[0:0] === 1'b1) ? 16'd32767 : sext_ln703_6_fu_1142_p1);

assign select_ln388_fu_1218_p3 = ((underflow_fu_1192_p2[0:0] === 1'b1) ? 16'd32768 : sext_ln703_6_fu_1142_p1);

assign select_ln507_1_fu_554_p3 = ((and_ln118_1_fu_444_p2[0:0] === 1'b1) ? add_ln507_fu_548_p2 : select_ln507_fu_540_p3);

assign select_ln507_fu_540_p3 = ((icmp_ln144_1_fu_472_p2[0:0] === 1'b1) ? trunc_ln147_fu_478_p1 : sub_ln507_fu_534_p2);

assign sext_ln1118_1_fu_332_p1 = $signed(p_kernel_val_0_V_2_read);

assign sext_ln1118_2_fu_336_p1 = $signed(p_kernel_val_1_V_0_read);

assign sext_ln1118_3_fu_344_p1 = $signed(p_kernel_val_2_V_0_read);

assign sext_ln1118_fu_328_p1 = $signed(p_kernel_val_0_V_1_read);

assign sext_ln139_1_fu_738_p1 = select_ln139_fu_726_p3;

assign sext_ln139_fu_734_p1 = select_ln139_fu_726_p3;

assign sext_ln144_fu_792_p1 = x_fu_784_p3;

assign sext_ln451_fu_682_p1 = ImagLoc_x_fu_676_p2;

assign sext_ln703_3_fu_1069_p1 = mul_ln1118_4_fu_1064_p2;

assign sext_ln703_4_fu_1092_p1 = $signed(add_ln703_5_fu_1086_p2);

assign sext_ln703_5_fu_1132_p1 = $signed(add_ln703_9_fu_1126_p2);

assign sext_ln703_6_fu_1142_p1 = p_Val2_5_fu_1136_p2;

assign src_kernel_win_0_va_23_fu_944_p3 = ((icmp_ln899_1_reg_1414[0:0] === 1'b1) ? tmp_7_fu_933_p5 : col_buf_0_val_0_0_fu_852_p3);

assign src_kernel_win_0_va_24_fu_962_p3 = ((icmp_ln899_1_reg_1414[0:0] === 1'b1) ? tmp_8_fu_951_p5 : col_buf_0_val_1_0_fu_871_p3);

assign src_kernel_win_0_va_25_fu_980_p3 = ((icmp_ln899_1_reg_1414[0:0] === 1'b1) ? tmp_9_fu_969_p5 : col_buf_0_val_2_0_fu_890_p3);

assign sub_ln1118_fu_1000_p2 = (9'd0 - zext_ln1118_fu_996_p1);

assign sub_ln118_fu_574_p2 = ($signed(2'd2) - $signed(trunc_ln142_fu_504_p1));

assign sub_ln142_2_fu_720_p2 = (12'd1 - zext_ln444_fu_644_p1);

assign sub_ln142_fu_458_p2 = (12'd1 - zext_ln443_fu_352_p1);

assign sub_ln147_fu_748_p2 = ($signed(13'd3838) - $signed(sext_ln139_1_fu_738_p1));

assign sub_ln507_fu_534_p2 = ($signed(2'd2) - $signed(trunc_ln147_fu_478_p1));

assign tmp_28_fu_424_p3 = add_ln506_fu_418_p2[32'd11];

assign tmp_29_fu_450_p3 = add_ln506_fu_418_p2[32'd11];

assign tmp_30_fu_488_p3 = add_ln506_1_fu_482_p2[32'd11];

assign tmp_31_fu_496_p3 = add_ln506_1_fu_482_p2[32'd11];

assign tmp_32_fu_514_p3 = add_ln506_2_fu_508_p2[32'd11];

assign tmp_33_fu_522_p3 = add_ln506_2_fu_508_p2[32'd11];

assign tmp_34_fu_660_p4 = {{t_V_2_reg_317[10:1]}};

assign tmp_35_fu_686_p3 = ImagLoc_x_fu_676_p2[32'd11];

assign tmp_36_fu_712_p3 = ImagLoc_x_fu_676_p2[32'd11];

assign tmp_41_fu_1154_p3 = p_Val2_s_fu_1107_p2[32'd11];

assign tmp_fu_380_p4 = {{t_V_reg_306[10:1]}};

assign trunc_ln118_2_fu_618_p1 = add_ln506_2_fu_508_p2[1:0];

assign trunc_ln118_fu_580_p1 = add_ln506_1_fu_482_p2[1:0];

assign trunc_ln142_2_fu_530_p1 = t_V_reg_306[1:0];

assign trunc_ln142_fu_504_p1 = t_V_reg_306[1:0];

assign trunc_ln147_fu_478_p1 = select_ln139_1_fu_464_p3[1:0];

assign trunc_ln458_fu_796_p1 = x_fu_784_p3[1:0];

assign trunc_ln506_fu_414_p1 = t_V_reg_306[1:0];

assign underflow_fu_1192_p2 = (xor_ln786_fu_1186_p2 & p_Result_s_fu_1113_p3);

assign x_fu_784_p3 = ((and_ln144_fu_778_p2[0:0] === 1'b1) ? sext_ln139_fu_734_p1 : zext_ln118_fu_762_p1);

assign xor_ln118_1_fu_568_p2 = (trunc_ln506_fu_414_p1 ^ 2'd2);

assign xor_ln118_6_fu_432_p2 = (tmp_28_fu_424_p3 ^ 1'd1);

assign xor_ln118_7_fu_612_p2 = (trunc_ln142_2_fu_530_p1 ^ 2'd3);

assign xor_ln118_8_fu_694_p2 = (tmp_35_fu_686_p3 ^ 1'd1);

assign xor_ln118_9_fu_766_p2 = (icmp_ln118_1_fu_700_p2 ^ 1'd1);

assign xor_ln457_fu_374_p2 = (icmp_ln887_fu_368_p2 ^ 1'd1);

assign xor_ln493_1_fu_562_p2 = (select_ln507_1_fu_554_p3 ^ 2'd3);

assign xor_ln493_2_fu_600_p2 = (select_ln118_fu_592_p3 ^ 2'd3);

assign xor_ln493_3_fu_638_p2 = (select_ln118_1_fu_630_p3 ^ 2'd3);

assign xor_ln493_fu_835_p2 = (trunc_ln458_reg_1449 ^ 2'd3);

assign xor_ln785_fu_1168_p2 = (p_Result_s_fu_1113_p3 ^ 1'd1);

assign xor_ln786_fu_1186_p2 = (1'd1 ^ and_ln786_fu_1180_p2);

assign zext_ln1118_4_fu_340_p1 = p_kernel_val_1_V_2_read;

assign zext_ln1118_5_fu_348_p1 = p_kernel_val_2_V_1_read;

assign zext_ln1118_fu_996_p1 = src_kernel_win_0_va_22_fu_164;

assign zext_ln118_fu_762_p1 = select_ln118_3_fu_754_p3;

assign zext_ln443_fu_352_p1 = t_V_reg_306;

assign zext_ln444_fu_644_p1 = t_V_2_reg_317;

assign zext_ln703_1_fu_1101_p1 = src_kernel_win_0_va_23_reg_1483;

assign zext_ln703_2_fu_1104_p1 = src_kernel_win_0_va_23_reg_1483;

assign zext_ln703_fu_1082_p1 = mul_ln1118_5_fu_1077_p2;

assign zext_ln835_fu_805_p1 = $unsigned(sext_ln144_fu_792_p1);

always @ (posedge ap_clk) begin
    zext_ln1118_4_reg_1368[11:4] <= 8'b00000000;
    zext_ln1118_5_reg_1378[10:3] <= 8'b00000000;
end

endmodule //Filter2D
