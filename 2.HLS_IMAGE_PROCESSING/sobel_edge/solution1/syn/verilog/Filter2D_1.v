// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state6 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln444_reg_1455;
reg   [0:0] and_ln118_reg_1464;
reg   [0:0] icmp_ln899_reg_1420;
reg   [0:0] icmp_ln887_reg_1411;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] and_ln512_reg_1498;
reg   [0:0] and_ln512_reg_1498_pp0_iter1_reg;
reg   [10:0] t_V_2_reg_291;
wire   [0:0] icmp_ln443_fu_306_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] i_V_fu_312_p2;
reg   [10:0] i_V_reg_1406;
wire   [0:0] icmp_ln887_fu_318_p2;
wire   [0:0] xor_ln457_fu_324_p2;
reg   [0:0] xor_ln457_reg_1415;
wire   [0:0] icmp_ln899_fu_340_p2;
wire   [0:0] icmp_ln879_fu_346_p2;
reg   [0:0] icmp_ln879_reg_1425;
wire   [0:0] icmp_ln879_1_fu_352_p2;
reg   [0:0] icmp_ln879_1_reg_1429;
wire   [0:0] icmp_ln899_1_fu_358_p2;
reg   [0:0] icmp_ln899_1_reg_1433;
wire   [1:0] xor_ln493_1_fu_512_p2;
reg   [1:0] xor_ln493_1_reg_1440;
wire   [1:0] xor_ln493_2_fu_550_p2;
reg   [1:0] xor_ln493_2_reg_1445;
wire   [1:0] xor_ln493_3_fu_588_p2;
reg   [1:0] xor_ln493_3_reg_1450;
wire   [0:0] icmp_ln444_fu_598_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op146_read_state4;
reg    ap_predicate_op157_read_state4;
reg    ap_block_state4_pp0_stage0_iter1;
reg    ap_block_state5_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [10:0] j_V_fu_604_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] and_ln118_fu_656_p2;
wire   [1:0] trunc_ln458_fu_746_p1;
reg   [1:0] trunc_ln458_reg_1468;
wire   [0:0] or_ln457_fu_750_p2;
reg   [0:0] or_ln457_reg_1473;
reg   [10:0] k_buf_0_val_3_addr_reg_1480;
reg   [10:0] k_buf_0_val_4_addr_reg_1486;
reg   [10:0] k_buf_0_val_5_addr_reg_1492;
wire   [0:0] and_ln512_fu_762_p2;
wire   [7:0] src_kernel_win_0_va_6_fu_894_p3;
reg   [7:0] src_kernel_win_0_va_6_reg_1502;
reg   [7:0] src_kernel_win_0_va_9_reg_1507;
wire   [25:0] add_ln703_5_fu_1107_p2;
reg   [25:0] add_ln703_5_reg_1513;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter1_state4;
wire   [10:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
wire   [7:0] k_buf_0_val_3_q0;
wire   [10:0] k_buf_0_val_3_address1;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [10:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
wire   [7:0] k_buf_0_val_4_q0;
wire   [10:0] k_buf_0_val_4_address1;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [10:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
wire   [10:0] k_buf_0_val_5_address1;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [10:0] t_V_reg_280;
wire    ap_CS_fsm_state6;
wire   [63:0] zext_ln835_fu_755_p1;
reg   [7:0] src_kernel_win_0_va_fu_154;
reg   [7:0] src_kernel_win_0_va_1_fu_158;
reg   [7:0] src_kernel_win_0_va_2_fu_162;
wire   [7:0] src_kernel_win_0_va_7_fu_912_p3;
reg   [7:0] src_kernel_win_0_va_3_fu_166;
reg   [7:0] src_kernel_win_0_va_4_fu_170;
wire   [7:0] src_kernel_win_0_va_8_fu_930_p3;
reg   [7:0] src_kernel_win_0_va_5_fu_174;
reg   [7:0] right_border_buf_0_s_fu_178;
wire   [7:0] col_buf_0_val_0_0_fu_802_p3;
reg   [7:0] right_border_buf_0_1_fu_182;
reg   [7:0] right_border_buf_0_2_fu_186;
reg   [7:0] right_border_buf_0_3_fu_190;
wire   [7:0] col_buf_0_val_1_0_fu_821_p3;
reg   [7:0] right_border_buf_0_4_fu_194;
reg   [7:0] right_border_buf_0_5_fu_198;
wire   [7:0] col_buf_0_val_2_0_fu_840_p3;
reg    ap_block_pp0_stage0_01001;
wire   [9:0] tmp_fu_330_p4;
wire   [11:0] zext_ln443_fu_302_p1;
wire   [11:0] add_ln506_fu_368_p2;
wire   [0:0] tmp_5_fu_374_p3;
wire   [0:0] icmp_ln118_fu_388_p2;
wire   [0:0] xor_ln118_2_fu_382_p2;
wire   [0:0] tmp_6_fu_400_p3;
wire   [11:0] sub_ln142_fu_408_p2;
wire   [11:0] select_ln139_1_fu_414_p3;
wire   [11:0] add_ln506_1_fu_432_p2;
wire   [11:0] add_ln506_2_fu_458_p2;
wire   [1:0] trunc_ln147_fu_428_p1;
wire   [0:0] icmp_ln144_1_fu_422_p2;
wire   [1:0] sub_ln507_fu_484_p2;
wire   [1:0] trunc_ln506_fu_364_p1;
wire   [0:0] and_ln118_1_fu_394_p2;
wire   [1:0] add_ln507_fu_498_p2;
wire   [1:0] select_ln507_fu_490_p3;
wire   [1:0] select_ln507_1_fu_504_p3;
wire   [1:0] trunc_ln142_fu_454_p1;
wire   [0:0] tmp_15_fu_446_p3;
wire   [1:0] sub_ln118_fu_524_p2;
wire   [1:0] trunc_ln118_fu_530_p1;
wire   [0:0] tmp_7_fu_438_p3;
wire   [1:0] select_ln139_2_fu_534_p3;
wire   [1:0] xor_ln118_1_fu_518_p2;
wire   [1:0] select_ln118_fu_542_p3;
wire   [1:0] trunc_ln142_1_fu_480_p1;
wire   [0:0] tmp_17_fu_472_p3;
wire   [1:0] xor_ln118_3_fu_562_p2;
wire   [1:0] trunc_ln118_1_fu_568_p1;
wire   [0:0] tmp_16_fu_464_p3;
wire   [1:0] select_ln139_3_fu_572_p3;
wire   [1:0] add_ln118_fu_556_p2;
wire   [1:0] select_ln118_1_fu_580_p3;
wire   [9:0] tmp_18_fu_610_p4;
wire   [11:0] zext_ln444_fu_594_p1;
wire  signed [11:0] ImagLoc_x_fu_626_p2;
wire   [0:0] tmp_19_fu_636_p3;
wire   [0:0] icmp_ln118_1_fu_650_p2;
wire   [0:0] xor_ln118_4_fu_644_p2;
wire   [0:0] tmp_20_fu_662_p3;
wire   [11:0] sub_ln142_1_fu_670_p2;
wire  signed [11:0] select_ln139_fu_676_p3;
wire  signed [12:0] sext_ln139_1_fu_688_p1;
wire  signed [12:0] sext_ln451_fu_632_p1;
wire   [12:0] sub_ln147_fu_698_p2;
wire   [12:0] select_ln118_2_fu_704_p3;
wire   [0:0] xor_ln118_5_fu_716_p2;
wire   [0:0] icmp_ln144_fu_692_p2;
wire   [0:0] or_ln118_fu_722_p2;
wire   [0:0] and_ln144_fu_728_p2;
wire  signed [13:0] sext_ln139_fu_684_p1;
wire   [13:0] zext_ln118_fu_712_p1;
wire  signed [13:0] x_fu_734_p3;
wire  signed [31:0] sext_ln144_fu_742_p1;
wire   [0:0] icmp_ln891_fu_620_p2;
wire   [1:0] xor_ln493_fu_785_p2;
wire   [7:0] tmp_8_fu_790_p5;
wire   [7:0] tmp_9_fu_809_p5;
wire   [7:0] tmp_2_fu_828_p5;
wire   [7:0] tmp_3_fu_883_p5;
wire   [7:0] tmp_4_fu_901_p5;
wire   [7:0] tmp_10_fu_919_p5;
wire   [18:0] shl_ln_fu_959_p3;
wire   [9:0] shl_ln1118_1_fu_971_p3;
wire   [19:0] zext_ln1118_1_fu_967_p1;
wire   [19:0] zext_ln1118_2_fu_979_p1;
wire   [19:0] sub_ln1118_fu_983_p2;
wire  signed [23:0] sext_ln1118_fu_989_p1;
wire   [24:0] grp_fu_1290_p4;
wire   [18:0] shl_ln1118_2_fu_1004_p3;
wire   [9:0] shl_ln1118_3_fu_1016_p3;
wire   [19:0] zext_ln1118_3_fu_1012_p1;
wire   [19:0] zext_ln1118_4_fu_1024_p1;
wire   [19:0] sub_ln1118_1_fu_1028_p2;
wire  signed [23:0] sext_ln1118_1_fu_1034_p1;
wire   [18:0] shl_ln1118_4_fu_1046_p3;
wire   [9:0] shl_ln1118_5_fu_1058_p3;
wire   [19:0] zext_ln1118_6_fu_1054_p1;
wire   [19:0] zext_ln1118_7_fu_1066_p1;
wire   [19:0] sub_ln1118_2_fu_1070_p2;
wire  signed [23:0] sext_ln1118_2_fu_1076_p1;
wire   [25:0] zext_ln703_3_fu_1038_p1;
wire   [25:0] zext_ln703_2_fu_1001_p1;
wire   [20:0] grp_fu_1307_p3;
wire   [24:0] zext_ln1118_8_fu_1080_p1;
wire   [24:0] zext_ln703_5_fu_1094_p1;
wire   [24:0] add_ln703_4_fu_1097_p2;
wire   [25:0] add_ln703_2_fu_1088_p2;
wire   [25:0] zext_ln703_6_fu_1103_p1;
wire   [18:0] shl_ln1118_6_fu_1155_p3;
wire   [9:0] shl_ln1118_7_fu_1166_p3;
wire   [19:0] zext_ln1118_10_fu_1162_p1;
wire   [19:0] zext_ln1118_11_fu_1173_p1;
wire   [19:0] sub_ln1118_3_fu_1177_p2;
wire  signed [23:0] sext_ln1118_3_fu_1183_p1;
wire   [24:0] grp_fu_1316_p3;
wire   [26:0] zext_ln703_7_fu_1152_p1;
wire   [26:0] zext_ln703_9_fu_1194_p1;
wire   [26:0] p_Val2_s_fu_1197_p2;
wire   [0:0] tmp_23_fu_1213_p3;
wire   [7:0] zext_ln415_fu_1221_p1;
wire   [7:0] p_Val2_1_fu_1203_p4;
wire   [4:0] tmp_11_fu_1231_p4;
wire   [0:0] tmp_24_fu_1247_p3;
wire   [7:0] p_Val2_2_fu_1225_p2;
wire   [0:0] tmp_25_fu_1261_p3;
wire   [0:0] xor_ln777_fu_1255_p2;
wire   [0:0] Range1_all_zeros_fu_1241_p2;
wire   [0:0] or_ln777_fu_1269_p2;
wire   [0:0] deleted_zeros_fu_1275_p2;
wire   [7:0] grp_fu_1290_p0;
wire   [7:0] grp_fu_1290_p1;
wire   [10:0] grp_fu_1290_p2;
wire   [23:0] grp_fu_1290_p3;
wire   [13:0] mul_ln1118_fu_1301_p0;
wire   [7:0] mul_ln1118_fu_1301_p1;
wire   [10:0] grp_fu_1307_p0;
wire   [7:0] grp_fu_1307_p1;
wire   [20:0] mul_ln1118_fu_1301_p2;
wire   [10:0] grp_fu_1316_p0;
wire   [7:0] grp_fu_1316_p1;
wire   [23:0] grp_fu_1316_p2;
reg   [3:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_110;
reg    ap_enable_state3_pp0_iter0_stage0;
reg    ap_enable_operation_136;
reg    ap_enable_state4_pp0_iter1_stage0;
reg    ap_predicate_op151_store_state4;
reg    ap_enable_operation_151;
reg    ap_predicate_op158_store_state4;
reg    ap_enable_operation_158;
reg    ap_enable_operation_112;
reg    ap_enable_operation_140;
reg    ap_predicate_op149_store_state4;
reg    ap_enable_operation_149;
reg    ap_predicate_op156_store_state4;
reg    ap_enable_operation_156;
reg    ap_enable_operation_114;
reg    ap_enable_operation_143;
reg    ap_predicate_op147_store_state4;
reg    ap_enable_operation_147;
reg    ap_predicate_op155_store_state4;
reg    ap_enable_operation_155;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [8:0] grp_fu_1290_p00;
wire   [8:0] grp_fu_1290_p10;
wire   [24:0] grp_fu_1290_p30;
wire   [18:0] grp_fu_1307_p10;
wire   [18:0] grp_fu_1316_p10;
wire   [24:0] grp_fu_1316_p20;
wire   [20:0] mul_ln1118_fu_1301_p10;
reg    ap_condition_969;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_address1),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(p_src_data_stream_V_dout)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_address1),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_address1),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

sobel_accel_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_3hbi_U31(
    .din0(right_border_buf_0_s_fu_178),
    .din1(right_border_buf_0_1_fu_182),
    .din2(8'd0),
    .din3(xor_ln493_fu_785_p2),
    .dout(tmp_8_fu_790_p5)
);

sobel_accel_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_3hbi_U32(
    .din0(right_border_buf_0_3_fu_190),
    .din1(right_border_buf_0_4_fu_194),
    .din2(8'd0),
    .din3(xor_ln493_fu_785_p2),
    .dout(tmp_9_fu_809_p5)
);

sobel_accel_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_3hbi_U33(
    .din0(right_border_buf_0_5_fu_198),
    .din1(right_border_buf_0_2_fu_186),
    .din2(8'd0),
    .din3(xor_ln493_fu_785_p2),
    .dout(tmp_2_fu_828_p5)
);

sobel_accel_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_3hbi_U34(
    .din0(col_buf_0_val_0_0_fu_802_p3),
    .din1(col_buf_0_val_1_0_fu_821_p3),
    .din2(col_buf_0_val_2_0_fu_840_p3),
    .din3(xor_ln493_1_reg_1440),
    .dout(tmp_3_fu_883_p5)
);

sobel_accel_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_3hbi_U35(
    .din0(col_buf_0_val_0_0_fu_802_p3),
    .din1(col_buf_0_val_1_0_fu_821_p3),
    .din2(col_buf_0_val_2_0_fu_840_p3),
    .din3(xor_ln493_2_reg_1445),
    .dout(tmp_4_fu_901_p5)
);

sobel_accel_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_3hbi_U36(
    .din0(col_buf_0_val_0_0_fu_802_p3),
    .din1(col_buf_0_val_1_0_fu_821_p3),
    .din2(col_buf_0_val_2_0_fu_840_p3),
    .din3(xor_ln493_3_reg_1450),
    .dout(tmp_10_fu_919_p5)
);

sobel_accel_ama_aibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
sobel_accel_ama_aibs_U37(
    .din0(grp_fu_1290_p0),
    .din1(grp_fu_1290_p1),
    .din2(grp_fu_1290_p2),
    .din3(grp_fu_1290_p3),
    .dout(grp_fu_1290_p4)
);

sobel_accel_mul_mjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 21 ))
sobel_accel_mul_mjbC_U38(
    .din0(mul_ln1118_fu_1301_p0),
    .din1(mul_ln1118_fu_1301_p1),
    .dout(mul_ln1118_fu_1301_p2)
);

sobel_accel_mac_mkbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
sobel_accel_mac_mkbM_U39(
    .din0(grp_fu_1307_p0),
    .din1(grp_fu_1307_p1),
    .din2(mul_ln1118_fu_1301_p2),
    .dout(grp_fu_1307_p3)
);

sobel_accel_mac_mlbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
sobel_accel_mac_mlbW_U40(
    .din0(grp_fu_1316_p0),
    .din1(grp_fu_1316_p1),
    .din2(grp_fu_1316_p2),
    .dout(grp_fu_1316_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((icmp_ln444_fu_598_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln443_fu_306_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((((icmp_ln443_fu_306_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_condition_pp0_exit_iter1_state4) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter1_state4) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((icmp_ln443_fu_306_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_fu_598_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_2_reg_291 <= j_V_fu_604_p2;
    end else if (((icmp_ln443_fu_306_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_2_reg_291 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        t_V_reg_280 <= i_V_reg_1406;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_280 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln512_reg_1498) & (icmp_ln444_reg_1455 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln703_5_reg_1513 <= add_ln703_5_fu_1107_p2;
        src_kernel_win_0_va_9_reg_1507 <= src_kernel_win_0_va_fu_154;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_fu_598_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln118_reg_1464 <= and_ln118_fu_656_p2;
        and_ln512_reg_1498 <= and_ln512_fu_762_p2;
        k_buf_0_val_3_addr_reg_1480 <= zext_ln835_fu_755_p1;
        k_buf_0_val_4_addr_reg_1486 <= zext_ln835_fu_755_p1;
        k_buf_0_val_5_addr_reg_1492 <= zext_ln835_fu_755_p1;
        or_ln457_reg_1473 <= or_ln457_fu_750_p2;
        trunc_ln458_reg_1468 <= trunc_ln458_fu_746_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln512_reg_1498_pp0_iter1_reg <= and_ln512_reg_1498;
        icmp_ln444_reg_1455 <= icmp_ln444_fu_598_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1406 <= i_V_fu_312_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln443_fu_306_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln879_1_reg_1429 <= icmp_ln879_1_fu_352_p2;
        icmp_ln879_reg_1425 <= icmp_ln879_fu_346_p2;
        icmp_ln887_reg_1411 <= icmp_ln887_fu_318_p2;
        icmp_ln899_1_reg_1433 <= icmp_ln899_1_fu_358_p2;
        icmp_ln899_reg_1420 <= icmp_ln899_fu_340_p2;
        xor_ln457_reg_1415 <= xor_ln457_fu_324_p2;
        xor_ln493_1_reg_1440 <= xor_ln493_1_fu_512_p2;
        xor_ln493_2_reg_1445 <= xor_ln493_2_fu_550_p2;
        xor_ln493_3_reg_1450 <= xor_ln493_3_fu_588_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1411 == 1'd1) & (icmp_ln899_reg_1420 == 1'd1) & (1'd1 == and_ln118_reg_1464) & (icmp_ln444_reg_1455 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_1_fu_182 <= right_border_buf_0_s_fu_178;
        right_border_buf_0_2_fu_186 <= right_border_buf_0_5_fu_198;
        right_border_buf_0_3_fu_190 <= col_buf_0_val_1_0_fu_821_p3;
        right_border_buf_0_4_fu_194 <= right_border_buf_0_3_fu_190;
        right_border_buf_0_5_fu_198 <= col_buf_0_val_2_0_fu_840_p3;
        right_border_buf_0_s_fu_178 <= col_buf_0_val_0_0_fu_802_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_reg_1455 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_1_fu_158 <= src_kernel_win_0_va_fu_154;
        src_kernel_win_0_va_2_fu_162 <= src_kernel_win_0_va_7_fu_912_p3;
        src_kernel_win_0_va_3_fu_166 <= src_kernel_win_0_va_2_fu_162;
        src_kernel_win_0_va_4_fu_170 <= src_kernel_win_0_va_8_fu_930_p3;
        src_kernel_win_0_va_5_fu_174 <= src_kernel_win_0_va_4_fu_170;
        src_kernel_win_0_va_fu_154 <= src_kernel_win_0_va_6_fu_894_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_reg_1455 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_6_reg_1502 <= src_kernel_win_0_va_6_fu_894_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln443_fu_306_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln443_fu_306_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_1411 == 1'd1) & (icmp_ln899_reg_1420 == 1'd1) & (1'd1 == and_ln118_reg_1464) & (icmp_ln444_reg_1455 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln879_reg_1425 == 1'd1) & (1'd1 == and_ln118_reg_1464) & (icmp_ln899_reg_1420 == 1'd0) & (icmp_ln444_reg_1455 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_1411 == 1'd1) & (icmp_ln899_reg_1420 == 1'd1) & (1'd1 == and_ln118_reg_1464) & (icmp_ln444_reg_1455 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln879_reg_1425 == 1'd1) & (1'd1 == and_ln118_reg_1464) & (icmp_ln899_reg_1420 == 1'd0) & (icmp_ln444_reg_1455 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_1411 == 1'd1) & (icmp_ln899_reg_1420 == 1'd1) & (1'd1 == and_ln118_reg_1464) & (icmp_ln444_reg_1455 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln879_1_reg_1429 == 1'd1) & (1'd1 == and_ln118_reg_1464) & (icmp_ln899_reg_1420 == 1'd0) & (icmp_ln444_reg_1455 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_969)) begin
        if (((icmp_ln887_reg_1411 == 1'd1) & (icmp_ln899_reg_1420 == 1'd1))) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_q0;
        end else if (((icmp_ln879_1_reg_1429 == 1'd1) & (icmp_ln899_reg_1420 == 1'd0))) begin
            k_buf_0_val_4_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_1411 == 1'd1) & (icmp_ln899_reg_1420 == 1'd1) & (1'd1 == and_ln118_reg_1464) & (icmp_ln444_reg_1455 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln879_1_reg_1429 == 1'd1) & (1'd1 == and_ln118_reg_1464) & (icmp_ln899_reg_1420 == 1'd0) & (icmp_ln444_reg_1455 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_1411 == 1'd1) & (icmp_ln899_reg_1420 == 1'd1) & (1'd1 == and_ln118_reg_1464) & (icmp_ln444_reg_1455 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln879_reg_1425 == 1'd1) & (1'd1 == and_ln118_reg_1464) & (icmp_ln899_reg_1420 == 1'd0) & (icmp_ln444_reg_1455 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_969)) begin
        if (((icmp_ln887_reg_1411 == 1'd1) & (icmp_ln899_reg_1420 == 1'd1))) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_q0;
        end else if (((icmp_ln879_reg_1425 == 1'd1) & (icmp_ln899_reg_1420 == 1'd0))) begin
            k_buf_0_val_5_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_1411 == 1'd1) & (icmp_ln899_reg_1420 == 1'd1) & (1'd1 == and_ln118_reg_1464) & (icmp_ln444_reg_1455 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln879_reg_1425 == 1'd1) & (1'd1 == and_ln118_reg_1464) & (icmp_ln899_reg_1420 == 1'd0) & (icmp_ln444_reg_1455 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln512_reg_1498_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln512_reg_1498_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_1411 == 1'd1) & (icmp_ln899_reg_1420 == 1'd1) & (1'd1 == and_ln118_reg_1464) & (icmp_ln444_reg_1455 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd1 == and_ln118_reg_1464) & (icmp_ln899_reg_1420 == 1'd0) & (icmp_ln444_reg_1455 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op157_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op146_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln443_fu_306_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_fu_626_p2 = ($signed(12'd4095) + $signed(zext_ln444_fu_594_p1));

assign Range1_all_zeros_fu_1241_p2 = ((tmp_11_fu_1231_p4 == 5'd0) ? 1'b1 : 1'b0);

assign add_ln118_fu_556_p2 = (2'd1 + trunc_ln506_fu_364_p1);

assign add_ln506_1_fu_432_p2 = ($signed(12'd4094) + $signed(zext_ln443_fu_302_p1));

assign add_ln506_2_fu_458_p2 = ($signed(12'd4093) + $signed(zext_ln443_fu_302_p1));

assign add_ln506_fu_368_p2 = ($signed(12'd4095) + $signed(zext_ln443_fu_302_p1));

assign add_ln507_fu_498_p2 = ($signed(2'd3) + $signed(trunc_ln506_fu_364_p1));

assign add_ln703_2_fu_1088_p2 = (zext_ln703_3_fu_1038_p1 + zext_ln703_2_fu_1001_p1);

assign add_ln703_4_fu_1097_p2 = (zext_ln1118_8_fu_1080_p1 + zext_ln703_5_fu_1094_p1);

assign add_ln703_5_fu_1107_p2 = (add_ln703_2_fu_1088_p2 + zext_ln703_6_fu_1103_p1);

assign and_ln118_1_fu_394_p2 = (xor_ln118_2_fu_382_p2 & icmp_ln118_fu_388_p2);

assign and_ln118_fu_656_p2 = (xor_ln118_4_fu_644_p2 & icmp_ln118_1_fu_650_p2);

assign and_ln144_fu_728_p2 = (or_ln118_fu_722_p2 & icmp_ln144_fu_692_p2);

assign and_ln512_fu_762_p2 = (icmp_ln899_reg_1420 & icmp_ln891_fu_620_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((1'd1 == and_ln512_reg_1498_pp0_iter1_reg) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op157_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op146_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'd1 == and_ln512_reg_1498_pp0_iter1_reg) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op157_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op146_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'd1 == and_ln512_reg_1498_pp0_iter1_reg) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op157_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op146_read_state4 == 1'b1)))));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op157_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op146_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter2 = ((1'd1 == and_ln512_reg_1498_pp0_iter1_reg) & (p_dst_data_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_969 = ((1'd1 == and_ln118_reg_1464) & (icmp_ln444_reg_1455 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_operation_110 = (icmp_ln444_fu_598_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_112 = (icmp_ln444_fu_598_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_114 = (icmp_ln444_fu_598_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_136 = (icmp_ln444_reg_1455 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_140 = (icmp_ln444_reg_1455 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_143 = (icmp_ln444_reg_1455 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_147 = (ap_predicate_op147_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_149 = (ap_predicate_op149_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_151 = (ap_predicate_op151_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_155 = (ap_predicate_op155_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_156 = (ap_predicate_op156_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_158 = (ap_predicate_op158_store_state4 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state3_pp0_iter0_stage0 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_enable_state4_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_predicate_op146_read_state4 = ((1'd1 == and_ln118_reg_1464) & (icmp_ln899_reg_1420 == 1'd0) & (icmp_ln444_reg_1455 == 1'd0));
end

always @ (*) begin
    ap_predicate_op147_store_state4 = ((icmp_ln879_reg_1425 == 1'd1) & (1'd1 == and_ln118_reg_1464) & (icmp_ln899_reg_1420 == 1'd0) & (icmp_ln444_reg_1455 == 1'd0));
end

always @ (*) begin
    ap_predicate_op149_store_state4 = ((icmp_ln879_1_reg_1429 == 1'd1) & (1'd1 == and_ln118_reg_1464) & (icmp_ln899_reg_1420 == 1'd0) & (icmp_ln444_reg_1455 == 1'd0));
end

always @ (*) begin
    ap_predicate_op151_store_state4 = ((icmp_ln879_reg_1425 == 1'd1) & (1'd1 == and_ln118_reg_1464) & (icmp_ln899_reg_1420 == 1'd0) & (icmp_ln444_reg_1455 == 1'd0));
end

always @ (*) begin
    ap_predicate_op155_store_state4 = ((icmp_ln887_reg_1411 == 1'd1) & (icmp_ln899_reg_1420 == 1'd1) & (1'd1 == and_ln118_reg_1464) & (icmp_ln444_reg_1455 == 1'd0));
end

always @ (*) begin
    ap_predicate_op156_store_state4 = ((icmp_ln887_reg_1411 == 1'd1) & (icmp_ln899_reg_1420 == 1'd1) & (1'd1 == and_ln118_reg_1464) & (icmp_ln444_reg_1455 == 1'd0));
end

always @ (*) begin
    ap_predicate_op157_read_state4 = ((icmp_ln887_reg_1411 == 1'd1) & (icmp_ln899_reg_1420 == 1'd1) & (1'd1 == and_ln118_reg_1464) & (icmp_ln444_reg_1455 == 1'd0));
end

always @ (*) begin
    ap_predicate_op158_store_state4 = ((icmp_ln887_reg_1411 == 1'd1) & (icmp_ln899_reg_1420 == 1'd1) & (1'd1 == and_ln118_reg_1464) & (icmp_ln444_reg_1455 == 1'd0));
end

assign col_buf_0_val_0_0_fu_802_p3 = ((or_ln457_reg_1473[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_8_fu_790_p5);

assign col_buf_0_val_1_0_fu_821_p3 = ((or_ln457_reg_1473[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_9_fu_809_p5);

assign col_buf_0_val_2_0_fu_840_p3 = ((or_ln457_reg_1473[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_2_fu_828_p5);

assign deleted_zeros_fu_1275_p2 = (or_ln777_fu_1269_p2 & Range1_all_zeros_fu_1241_p2);

assign grp_fu_1290_p0 = grp_fu_1290_p00;

assign grp_fu_1290_p00 = src_kernel_win_0_va_8_fu_930_p3;

assign grp_fu_1290_p1 = grp_fu_1290_p10;

assign grp_fu_1290_p10 = src_kernel_win_0_va_5_fu_174;

assign grp_fu_1290_p2 = 19'd936;

assign grp_fu_1290_p3 = grp_fu_1290_p30;

assign grp_fu_1290_p30 = $unsigned(sext_ln1118_fu_989_p1);

assign grp_fu_1307_p0 = 19'd936;

assign grp_fu_1307_p1 = grp_fu_1307_p10;

assign grp_fu_1307_p10 = src_kernel_win_0_va_1_fu_158;

assign grp_fu_1316_p0 = 19'd936;

assign grp_fu_1316_p1 = grp_fu_1316_p10;

assign grp_fu_1316_p10 = src_kernel_win_0_va_6_reg_1502;

assign grp_fu_1316_p2 = grp_fu_1316_p20;

assign grp_fu_1316_p20 = $unsigned(sext_ln1118_3_fu_1183_p1);

assign i_V_fu_312_p2 = (t_V_reg_280 + 11'd1);

assign icmp_ln118_1_fu_650_p2 = (($signed(ImagLoc_x_fu_626_p2) < $signed(12'd1920)) ? 1'b1 : 1'b0);

assign icmp_ln118_fu_388_p2 = (($signed(add_ln506_fu_368_p2) < $signed(12'd1080)) ? 1'b1 : 1'b0);

assign icmp_ln144_1_fu_422_p2 = (($signed(select_ln139_1_fu_414_p3) < $signed(12'd1080)) ? 1'b1 : 1'b0);

assign icmp_ln144_fu_692_p2 = (($signed(select_ln139_fu_676_p3) < $signed(12'd1920)) ? 1'b1 : 1'b0);

assign icmp_ln443_fu_306_p2 = ((t_V_reg_280 == 11'd1082) ? 1'b1 : 1'b0);

assign icmp_ln444_fu_598_p2 = ((t_V_2_reg_291 == 11'd1922) ? 1'b1 : 1'b0);

assign icmp_ln879_1_fu_352_p2 = ((t_V_reg_280 == 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_346_p2 = ((t_V_reg_280 == 11'd1) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_318_p2 = ((t_V_reg_280 < 11'd1080) ? 1'b1 : 1'b0);

assign icmp_ln891_fu_620_p2 = ((tmp_18_fu_610_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln899_1_fu_358_p2 = ((t_V_reg_280 > 11'd1080) ? 1'b1 : 1'b0);

assign icmp_ln899_fu_340_p2 = ((tmp_fu_330_p4 != 10'd0) ? 1'b1 : 1'b0);

assign j_V_fu_604_p2 = (t_V_2_reg_291 + 11'd1);

assign k_buf_0_val_3_address0 = zext_ln835_fu_755_p1;

assign k_buf_0_val_3_address1 = k_buf_0_val_3_addr_reg_1480;

assign k_buf_0_val_4_address0 = zext_ln835_fu_755_p1;

assign k_buf_0_val_4_address1 = k_buf_0_val_4_addr_reg_1486;

assign k_buf_0_val_5_address0 = zext_ln835_fu_755_p1;

assign k_buf_0_val_5_address1 = k_buf_0_val_5_addr_reg_1492;

assign mul_ln1118_fu_1301_p0 = 21'd4465;

assign mul_ln1118_fu_1301_p1 = mul_ln1118_fu_1301_p10;

assign mul_ln1118_fu_1301_p10 = src_kernel_win_0_va_2_fu_162;

assign or_ln118_fu_722_p2 = (xor_ln118_5_fu_716_p2 | tmp_19_fu_636_p3);

assign or_ln457_fu_750_p2 = (xor_ln457_reg_1415 | icmp_ln118_1_fu_650_p2);

assign or_ln777_fu_1269_p2 = (xor_ln777_fu_1255_p2 | tmp_25_fu_1261_p3);

assign p_Val2_1_fu_1203_p4 = {{p_Val2_s_fu_1197_p2[21:14]}};

assign p_Val2_2_fu_1225_p2 = (zext_ln415_fu_1221_p1 + p_Val2_1_fu_1203_p4);

assign p_Val2_s_fu_1197_p2 = (zext_ln703_7_fu_1152_p1 + zext_ln703_9_fu_1194_p1);

assign p_dst_data_stream_V_din = ((deleted_zeros_fu_1275_p2[0:0] === 1'b1) ? p_Val2_2_fu_1225_p2 : 8'd255);

assign select_ln118_1_fu_580_p3 = ((tmp_16_fu_464_p3[0:0] === 1'b1) ? select_ln139_3_fu_572_p3 : add_ln118_fu_556_p2);

assign select_ln118_2_fu_704_p3 = ((and_ln118_fu_656_p2[0:0] === 1'b1) ? sext_ln451_fu_632_p1 : sub_ln147_fu_698_p2);

assign select_ln118_fu_542_p3 = ((tmp_7_fu_438_p3[0:0] === 1'b1) ? select_ln139_2_fu_534_p3 : xor_ln118_1_fu_518_p2);

assign select_ln139_1_fu_414_p3 = ((tmp_6_fu_400_p3[0:0] === 1'b1) ? sub_ln142_fu_408_p2 : add_ln506_fu_368_p2);

assign select_ln139_2_fu_534_p3 = ((tmp_15_fu_446_p3[0:0] === 1'b1) ? sub_ln118_fu_524_p2 : trunc_ln118_fu_530_p1);

assign select_ln139_3_fu_572_p3 = ((tmp_17_fu_472_p3[0:0] === 1'b1) ? xor_ln118_3_fu_562_p2 : trunc_ln118_1_fu_568_p1);

assign select_ln139_fu_676_p3 = ((tmp_20_fu_662_p3[0:0] === 1'b1) ? sub_ln142_1_fu_670_p2 : ImagLoc_x_fu_626_p2);

assign select_ln507_1_fu_504_p3 = ((and_ln118_1_fu_394_p2[0:0] === 1'b1) ? add_ln507_fu_498_p2 : select_ln507_fu_490_p3);

assign select_ln507_fu_490_p3 = ((icmp_ln144_1_fu_422_p2[0:0] === 1'b1) ? trunc_ln147_fu_428_p1 : sub_ln507_fu_484_p2);

assign sext_ln1118_1_fu_1034_p1 = $signed(sub_ln1118_1_fu_1028_p2);

assign sext_ln1118_2_fu_1076_p1 = $signed(sub_ln1118_2_fu_1070_p2);

assign sext_ln1118_3_fu_1183_p1 = $signed(sub_ln1118_3_fu_1177_p2);

assign sext_ln1118_fu_989_p1 = $signed(sub_ln1118_fu_983_p2);

assign sext_ln139_1_fu_688_p1 = select_ln139_fu_676_p3;

assign sext_ln139_fu_684_p1 = select_ln139_fu_676_p3;

assign sext_ln144_fu_742_p1 = x_fu_734_p3;

assign sext_ln451_fu_632_p1 = ImagLoc_x_fu_626_p2;

assign shl_ln1118_1_fu_971_p3 = {{src_kernel_win_0_va_4_fu_170}, {2'd0}};

assign shl_ln1118_2_fu_1004_p3 = {{src_kernel_win_0_va_3_fu_166}, {11'd0}};

assign shl_ln1118_3_fu_1016_p3 = {{src_kernel_win_0_va_3_fu_166}, {2'd0}};

assign shl_ln1118_4_fu_1046_p3 = {{src_kernel_win_0_va_7_fu_912_p3}, {11'd0}};

assign shl_ln1118_5_fu_1058_p3 = {{src_kernel_win_0_va_7_fu_912_p3}, {2'd0}};

assign shl_ln1118_6_fu_1155_p3 = {{src_kernel_win_0_va_9_reg_1507}, {11'd0}};

assign shl_ln1118_7_fu_1166_p3 = {{src_kernel_win_0_va_9_reg_1507}, {2'd0}};

assign shl_ln_fu_959_p3 = {{src_kernel_win_0_va_4_fu_170}, {11'd0}};

assign src_kernel_win_0_va_6_fu_894_p3 = ((icmp_ln899_1_reg_1433[0:0] === 1'b1) ? tmp_3_fu_883_p5 : col_buf_0_val_0_0_fu_802_p3);

assign src_kernel_win_0_va_7_fu_912_p3 = ((icmp_ln899_1_reg_1433[0:0] === 1'b1) ? tmp_4_fu_901_p5 : col_buf_0_val_1_0_fu_821_p3);

assign src_kernel_win_0_va_8_fu_930_p3 = ((icmp_ln899_1_reg_1433[0:0] === 1'b1) ? tmp_10_fu_919_p5 : col_buf_0_val_2_0_fu_840_p3);

assign sub_ln1118_1_fu_1028_p2 = (zext_ln1118_3_fu_1012_p1 - zext_ln1118_4_fu_1024_p1);

assign sub_ln1118_2_fu_1070_p2 = (zext_ln1118_6_fu_1054_p1 - zext_ln1118_7_fu_1066_p1);

assign sub_ln1118_3_fu_1177_p2 = (zext_ln1118_10_fu_1162_p1 - zext_ln1118_11_fu_1173_p1);

assign sub_ln1118_fu_983_p2 = (zext_ln1118_1_fu_967_p1 - zext_ln1118_2_fu_979_p1);

assign sub_ln118_fu_524_p2 = ($signed(2'd2) - $signed(trunc_ln142_fu_454_p1));

assign sub_ln142_1_fu_670_p2 = (12'd1 - zext_ln444_fu_594_p1);

assign sub_ln142_fu_408_p2 = (12'd1 - zext_ln443_fu_302_p1);

assign sub_ln147_fu_698_p2 = ($signed(13'd3838) - $signed(sext_ln139_1_fu_688_p1));

assign sub_ln507_fu_484_p2 = ($signed(2'd2) - $signed(trunc_ln147_fu_428_p1));

assign tmp_11_fu_1231_p4 = {{p_Val2_s_fu_1197_p2[26:22]}};

assign tmp_15_fu_446_p3 = add_ln506_1_fu_432_p2[32'd11];

assign tmp_16_fu_464_p3 = add_ln506_2_fu_458_p2[32'd11];

assign tmp_17_fu_472_p3 = add_ln506_2_fu_458_p2[32'd11];

assign tmp_18_fu_610_p4 = {{t_V_2_reg_291[10:1]}};

assign tmp_19_fu_636_p3 = ImagLoc_x_fu_626_p2[32'd11];

assign tmp_20_fu_662_p3 = ImagLoc_x_fu_626_p2[32'd11];

assign tmp_23_fu_1213_p3 = p_Val2_s_fu_1197_p2[32'd13];

assign tmp_24_fu_1247_p3 = p_Val2_s_fu_1197_p2[32'd21];

assign tmp_25_fu_1261_p3 = p_Val2_2_fu_1225_p2[32'd7];

assign tmp_5_fu_374_p3 = add_ln506_fu_368_p2[32'd11];

assign tmp_6_fu_400_p3 = add_ln506_fu_368_p2[32'd11];

assign tmp_7_fu_438_p3 = add_ln506_1_fu_432_p2[32'd11];

assign tmp_fu_330_p4 = {{t_V_reg_280[10:1]}};

assign trunc_ln118_1_fu_568_p1 = add_ln506_2_fu_458_p2[1:0];

assign trunc_ln118_fu_530_p1 = add_ln506_1_fu_432_p2[1:0];

assign trunc_ln142_1_fu_480_p1 = t_V_reg_280[1:0];

assign trunc_ln142_fu_454_p1 = t_V_reg_280[1:0];

assign trunc_ln147_fu_428_p1 = select_ln139_1_fu_414_p3[1:0];

assign trunc_ln458_fu_746_p1 = x_fu_734_p3[1:0];

assign trunc_ln506_fu_364_p1 = t_V_reg_280[1:0];

assign x_fu_734_p3 = ((and_ln144_fu_728_p2[0:0] === 1'b1) ? sext_ln139_fu_684_p1 : zext_ln118_fu_712_p1);

assign xor_ln118_1_fu_518_p2 = (trunc_ln506_fu_364_p1 ^ 2'd2);

assign xor_ln118_2_fu_382_p2 = (tmp_5_fu_374_p3 ^ 1'd1);

assign xor_ln118_3_fu_562_p2 = (trunc_ln142_1_fu_480_p1 ^ 2'd3);

assign xor_ln118_4_fu_644_p2 = (tmp_19_fu_636_p3 ^ 1'd1);

assign xor_ln118_5_fu_716_p2 = (icmp_ln118_1_fu_650_p2 ^ 1'd1);

assign xor_ln457_fu_324_p2 = (icmp_ln887_fu_318_p2 ^ 1'd1);

assign xor_ln493_1_fu_512_p2 = (select_ln507_1_fu_504_p3 ^ 2'd3);

assign xor_ln493_2_fu_550_p2 = (select_ln118_fu_542_p3 ^ 2'd3);

assign xor_ln493_3_fu_588_p2 = (select_ln118_1_fu_580_p3 ^ 2'd3);

assign xor_ln493_fu_785_p2 = (trunc_ln458_reg_1468 ^ 2'd3);

assign xor_ln777_fu_1255_p2 = (tmp_24_fu_1247_p3 ^ 1'd1);

assign zext_ln1118_10_fu_1162_p1 = shl_ln1118_6_fu_1155_p3;

assign zext_ln1118_11_fu_1173_p1 = shl_ln1118_7_fu_1166_p3;

assign zext_ln1118_1_fu_967_p1 = shl_ln_fu_959_p3;

assign zext_ln1118_2_fu_979_p1 = shl_ln1118_1_fu_971_p3;

assign zext_ln1118_3_fu_1012_p1 = shl_ln1118_2_fu_1004_p3;

assign zext_ln1118_4_fu_1024_p1 = shl_ln1118_3_fu_1016_p3;

assign zext_ln1118_6_fu_1054_p1 = shl_ln1118_4_fu_1046_p3;

assign zext_ln1118_7_fu_1066_p1 = shl_ln1118_5_fu_1058_p3;

assign zext_ln1118_8_fu_1080_p1 = $unsigned(sext_ln1118_2_fu_1076_p1);

assign zext_ln118_fu_712_p1 = select_ln118_2_fu_704_p3;

assign zext_ln415_fu_1221_p1 = tmp_23_fu_1213_p3;

assign zext_ln443_fu_302_p1 = t_V_reg_280;

assign zext_ln444_fu_594_p1 = t_V_2_reg_291;

assign zext_ln703_2_fu_1001_p1 = grp_fu_1290_p4;

assign zext_ln703_3_fu_1038_p1 = $unsigned(sext_ln1118_1_fu_1034_p1);

assign zext_ln703_5_fu_1094_p1 = grp_fu_1307_p3;

assign zext_ln703_6_fu_1103_p1 = add_ln703_4_fu_1097_p2;

assign zext_ln703_7_fu_1152_p1 = add_ln703_5_reg_1513;

assign zext_ln703_9_fu_1194_p1 = grp_fu_1316_p3;

assign zext_ln835_fu_755_p1 = $unsigned(sext_ln144_fu_742_p1);

endmodule //Filter2D_1
